{"version":3,"file":"96.chunk.js","mappings":";;;;;;;;;;;;;AAAA;AACyH;AACjB;AACxG,8BAA8B,mFAA2B,CAAC,4FAAqC;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,OAAO,2JAA2J,UAAU,UAAU,YAAY,OAAO,KAAK,UAAU,UAAU,YAAY,WAAW,UAAU,MAAM,KAAK,UAAU,YAAY,aAAa,yBAAyB,OAAO,KAAK,UAAU,UAAU,YAAY,4CAA4C,kBAAkB,mBAAmB,yBAAyB,KAAK,uBAAuB,kBAAkB,mBAAmB,yBAAyB,aAAa,cAAc,KAAK,yBAAyB,oBAAoB,8BAA8B,0BAA0B,8CAA8C,sCAAsC,qBAAqB,kBAAkB,mBAAmB,0BAA0B,KAAK,mBAAmB;AACl4B;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BvC,MAA8G;AAC9G,MAAoG;AACpG,MAA2G;AAC3G,MAA8H;AAC9H,MAAuH;AACvH,MAAuH;AACvH,MAA6H;AAC7H;AACA;;AAEA;;AAEA,4BAA4B,6BAAmB;AAC/C,wBAAwB,0CAAa;AACrC,iBAAiB,+BAAa;AAC9B,iBAAiB,uBAAM;AACvB,6BAA6B,8BAAkB;;AAE/C,aAAa,kCAAG,CAAC,+BAAO;;;;AAIuE;AAC/F,OAAO,wEAAe,+BAAO,IAAI,+BAAO,UAAU,+BAAO,mBAAmB,EAAC;;;ACxB7E,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AAC+D;AACX;AACqD;AACrD;AACpB;AAChC;AACA,8BAA8B,0FAA4B;AAC1D,6BAA6B,0FAA4B;AACzD,0BAA0B,oGAAkD;AAC5E,MAAM,kDAAgB,MAAM,mCAAmC;AAC/D,sBAAsB,gBAAM;AAC5B,wBAAwB,gBAAM;AAC9B,uBAAuB,gBAAM;AAC7B,sCAAsC,kBAAQ;AAC9C,0CAA0C,kBAAQ;AAClD,sCAAsC,kBAAQ;AAC9C,IAAI,mBAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,gCAAgC,oBAAe;AAC/C;AACA;AACA,4CAA4C,wBAAmB;AAC/D;AACA,yCAAyC,sBAAiB;AAC1D,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,sDAAsD,cAAS;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,YAAY,oBAAK,CAAC,cAAG,IAAI,yCAAyC,mBAAI,aAAa,2CAA2C,iBAAiB,mBAAI,CAAC,sBAAO,IAAI,uCAAuC,mBAAI,UAAU,+DAA+D,GAAG,IAAI,mBAAI,CAAC,kBAAK,IAAI,uGAAuG,mBAAI,UAAU,4CAA4C,iBAAiB,GAAG,IAAI;AACje;AACA,mFAAe,kDAAgB,EAAC;;;ACjIa","sources":["webpack://spinlio-workspace/./src/dynamic/components/ConfiguratorPage/components/ShapeDiverViewer/ShapeDiverViewer.css","webpack://spinlio-workspace/./src/dynamic/components/ConfiguratorPage/components/ShapeDiverViewer/ShapeDiverViewer.css?83cf","webpack://spinlio-workspace/./src/dynamic/components/ConfiguratorPage/components/ShapeDiverViewer/ShapeDiverViewer.tsx","webpack://spinlio-workspace/./src/dynamic/components/ConfiguratorPage/components/ShapeDiverViewer/index.ts"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.viewerContainer {\n    width: 100%;\n    height: 100%;\n    position: relative;\n  }\n  \n  .viewerCanvas {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n  }\n  \n  .loadingOverlay {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(197, 9, 9, 0.2); /* Semi-transparent background */\n  }\n  \n  .loadingGif {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n  }`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/dynamic/components/ConfiguratorPage/components/ShapeDiverViewer/ShapeDiverViewer.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,WAAW;IACX,YAAY;IACZ,kBAAkB;EACpB;;EAEA;IACE,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,MAAM;IACN,OAAO;EACT;;EAEA;IACE,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,sCAAsC,EAAE,gCAAgC;EAC1E;;EAEA;IACE,WAAW;IACX,YAAY;IACZ,mBAAmB;EACrB\",\"sourcesContent\":[\".viewerContainer {\\n    width: 100%;\\n    height: 100%;\\n    position: relative;\\n  }\\n  \\n  .viewerCanvas {\\n    width: 100%;\\n    height: 100%;\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n  }\\n  \\n  .loadingOverlay {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    background-color: rgba(197, 9, 9, 0.2); /* Semi-transparent background */\\n  }\\n  \\n  .loadingGif {\\n    width: 100%;\\n    height: 100%;\\n    object-fit: contain;\\n  }\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!./ShapeDiverViewer.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!./ShapeDiverViewer.css\";\n       export default content && content.locals ? content.locals : undefined;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect, useRef, useState } from 'react';\nimport { SPINNER_POSITIONING, VISIBILITY_MODE, BUSY_MODE_DISPLAY, FLAG_TYPE, } from '@shapediver/viewer';\nimport { Box, Modal, Overlay } from '@mantine/core';\nimport './ShapeDiverViewer.css';\nconst LOADING_GIF_URL = 'https://res.cloudinary.com/da8qnqmmh/image/upload/e_make_transparent:10/v1729757636/BIKE_qa0p3v.gif';\nconst createViewportPromise = import('@shapediver/viewer').then(m => m.createViewport);\nconst createSessionPromise = import('@shapediver/viewer').then(m => m.createSession);\nconst RGBELoaderPromise = import('three/examples/jsm/loaders/RGBELoader.js').then(m => m.RGBELoader);\nconst ShapeDiverViewer = ({ session, setSession, setViewport, }) => {\n    const canvasRef = useRef(null);\n    const viewportRef = useRef(null);\n    const sessionRef = useRef(null);\n    const [qrCodeUrl, setQrCodeUrl] = useState(null);\n    const [showQrModal, setShowQrModal] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n    useEffect(() => {\n        let isActive = true;\n        const initShapeDiver = () => __awaiter(void 0, void 0, void 0, function* () {\n            if (!canvasRef.current || !isActive)\n                return;\n            // Load dependencies dynamically\n            const [createViewport, createSession, RGBELoader] = yield Promise.all([\n                createViewportPromise,\n                createSessionPromise,\n                RGBELoaderPromise\n            ]);\n            // Make RGBELoader available globally\n            if (typeof window !== 'undefined' && window.THREE) {\n                window.THREE.RGBELoader = RGBELoader;\n            }\n            // Only close existing if we're not already in cleanup\n            if (viewportRef.current && isActive) {\n                console.log('Closing existing viewport...');\n                viewportRef.current.close();\n                viewportRef.current = null;\n            }\n            if (sessionRef.current && isActive) {\n                console.log('Closing existing session...');\n                sessionRef.current.close();\n                sessionRef.current = null;\n                setSession(null);\n            }\n            try {\n                if (!isActive)\n                    return; // Check flag before creating new instances\n                console.log('Creating viewport...');\n                const newViewport = yield createViewport({\n                    canvas: canvasRef.current,\n                    visibility: VISIBILITY_MODE.MANUAL,\n                    branding: {\n                        backgroundColor: 'rgba(245, 240, 235, 0.2)',\n                        spinnerPositioning: SPINNER_POSITIONING.TOP_LEFT,\n                        busyModeSpinner: LOADING_GIF_URL,\n                        busyModeDisplay: BUSY_MODE_DISPLAY.SPINNER,\n                    },\n                });\n                if (!isActive) {\n                    newViewport.close();\n                    return;\n                }\n                viewportRef.current = newViewport;\n                setViewport(newViewport);\n                const newSession = yield createSession({\n                    ticket: '59cad840676b0591717e78763e3c0c3b0d33202f56aa63f2d7666bc4eaa188a0bc04e98da43bb3dccf157b51aeafff24fb916f42ae010f86d44abfd0f6032fb999543488136361296d94deae674d430cdc19a77e7e298bccd13f3c6e9987ce893146a78567df2e-22883dee92d748f3620cc5c385dc12fc',\n                    modelViewUrl: 'https://sdr8euc1.eu-central-1.shapediver.com',\n                });\n                if (!isActive) {\n                    newSession.close();\n                    return;\n                }\n                sessionRef.current = newSession;\n                setSession(newSession);\n                yield newSession.customize();\n                if (newSession.node && isActive) {\n                    yield newViewport.updateNode(newSession.node);\n                    newViewport.update();\n                    newViewport.render();\n                    newViewport.show = true;\n                    setIsLoading(false);\n                }\n            }\n            catch (error) {\n                console.error('Error initializing ShapeDiver:', error);\n                if (isActive) {\n                    setIsLoading(false);\n                }\n            }\n        });\n        initShapeDiver();\n        return () => {\n            isActive = false; // Set flag before cleanup\n            console.log('Cleaning up...');\n            if (sessionRef.current) {\n                sessionRef.current.close();\n                sessionRef.current = null;\n                setSession(null);\n            }\n            if (viewportRef.current) {\n                viewportRef.current.close();\n                viewportRef.current = null;\n            }\n        };\n    }, [setSession, setViewport]);\n    const handleARView = () => __awaiter(void 0, void 0, void 0, function* () {\n        if (viewportRef.current) {\n            const token = viewportRef.current.addFlag(FLAG_TYPE.BUSY_MODE);\n            if (viewportRef.current.viewableInAR()) {\n                yield viewportRef.current.viewInAR();\n            }\n            else {\n                const qr = yield viewportRef.current.createArSessionLink(undefined, true);\n                setQrCodeUrl(qr);\n                setShowQrModal(true);\n            }\n            viewportRef.current.removeFlag(token);\n        }\n    });\n    return (_jsxs(Box, { className: \"viewerContainer\", children: [_jsx(\"canvas\", { ref: canvasRef, className: \"viewerCanvas\" }), isLoading && (_jsx(Overlay, { className: \"loadingOverlay\", children: _jsx(\"img\", { src: LOADING_GIF_URL, alt: \"Loading\", className: \"loadingGif\" }) })), _jsx(Modal, { opened: showQrModal, onClose: () => setShowQrModal(false), title: \"AR QR Code\", children: qrCodeUrl && _jsx(\"img\", { src: qrCodeUrl, alt: \"AR QR Code\", style: { width: '100%' } }) })] }));\n};\nexport default ShapeDiverViewer;\n","export { default } from './ShapeDiverViewer';\n"],"names":[],"sourceRoot":""}