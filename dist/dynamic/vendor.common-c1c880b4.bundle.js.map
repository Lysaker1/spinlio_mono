{"version":3,"file":"vendor.common-c1c880b4.bundle.js","mappings":";;;;;;AAAa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,uBAAuB;AACvB,oBAAoB,mBAAO,CAAC,KAAW;AACvC,kCAAkC,mBAAO,CAAC,KAAqC;AAC/E,8BAA8B,mBAAO,CAAC,KAAiC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,6BAA6B;AACzD;AACA;AACA;AACA;AACA,gCAAgC,wBAAwB;AACxD;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,iBAAiB;AACjE;AACA;AACA;AACA,gDAAgD,iBAAiB;AACjE;AACA;AACA;AACA,gDAAgD,sBAAsB;AACtE;AACA;AACA,gDAAgD,0BAA0B;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2BAA2B;AACnD;AACA;AACA,4BAA4B,kBAAkB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,SAAS;AACzD;AACA;AACA,oDAAoD,SAAS;AAC7D;AACA;AACA;AACA;AACA,uBAAuB;AACvB;;;;;;;ACvMa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,uBAAuB;AACvB,0BAA0B,mBAAO,CAAC,KAAkC;AACpE,mDAAkD,EAAE,qCAAqC,6CAA6C,EAAC;AACvI;;;;;;;ACLa;AACb;AACA;AACA;AACA;AACA,eAAe,oCAAoC;AACnD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,0CAA0C,4BAA4B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,4BAA4B;AAC5B,2BAA2B,mBAAO,CAAC,IAAmB;AACtD,iCAAiC,mBAAO,CAAC,IAAoC;AAC7E,mDAAmD,mBAAO,CAAC,KAAsD;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;;;;;;;AChFa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,4BAA4B;AAC5B,+BAA+B,mBAAO,CAAC,KAAuC;AAC9E,wDAAuD,EAAE,qCAAqC,uDAAuD,EAAC;AACtJ;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,qBAAqB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjmDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,sBAAsB;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E,sBAAsB;AACriEAAe,OAAO,EAAC;AACyG;;;;;;;;AClyBnH;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB;AACpB,yBAAyB,mBAAO,CAAC,KAAyB;AAC1D,6BAA6B,mBAAO,CAAC,KAAgC;AACrE,wBAAwB,mBAAO,CAAC,KAA6B;AAC7D,kCAAkC,mBAAO,CAAC,KAAqC;AAC/E,8BAA8B,mBAAO,CAAC,KAA0C;AAChF,6BAA6B,mBAAO,CAAC,KAA6B;AAClE,4BAA4B,mBAAO,CAAC,KAA4B;AAChE,oBAAoB,mBAAO,CAAC,KAAW;AACvC,iCAAiC,mBAAO,CAAC,IAAoiHAAiH,KAAK,kBAAkB,SAAS;AACjJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,aAAa;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,0FAA0F;AAC1H,8BAA8B,oFAAoF;AAClH;AACA;AACA,qCAAqC,wDAAwD;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,oIAAoI;AAC/K,2CAA2C,oIAAoI;AAC/K,iCAAiC;AACjC;AACA,8CAA8C,mJAAmJ;AACjM;AACA,iCAAiC;AACjC,6BAA6B;AAC7B;AACA;AACA,2CAA2C,8HAA8H;AACzK,2CAA2C,8HAA8H;AACzK,iCAAiC;AACjC;AACA,8CAA8C,6IAA6I;AAC3L;AACA,iCAAiC;AACjC,6BAA6B;AAC7B;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,2CAA2C,gGAAgG;AAC3I,gDAAgD,+GAA+G;AAC/J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,0FAA0F;AAC1H,8BAA8B,oFAAoF;AAClH;AACA,qCAAqC,wDAAwD;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,oIAAoI;AAC/K,2CAA2C,oIAAoI;AAC/K,iCAAiC;AACjC;AACA,8CAA8C,mJAAmJ;AACjM;AACA,iCAAiC;AACjC,6BAA6B;AAC7B;AACA;AACA,2CAA2C,8HAA8H;AACzK,2CAA2C,8HAA8H;AACzK,iCAAiC;AACjC;AACA,8CAA8C,6IAA6I;AAC3L;AACA,iCAAiC;AACjC,6BAA6B;AAC7B;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,2CAA2C,gGAAgG;AAC3I,gDAAgD,+GAA+G;AAC/J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACA;AACA;AACA,4BAA4B,0BAA0B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;;;;;;;ACzUa;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB;AACtB,kCAAkC,mBAAO,CAAC,KAAqC;AAC/E,6BAA6B,mBAAO,CAAC,KAAgC;AACrE,oBAAoB,mBAAO,CAAC,KAAW;AACvC,iCAAiC,mBAAO,CAAC,IAAokBAAkB,8FAA8F;AAChH,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kCAAkC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,sBAAsB;AACtB;AACA;;;;;;;AChRa;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,0BAA0B;AAC1B,yBAAyB,mBAAO,CAAC,KAAkB;AACnD,wBAAwB,mBAAO,CAAC,KAAgC;AAChE,8BAA8B,mBAAO,CAAC,KAA6C;AACnF,kCAAkC,mBAAO,CAAC,KAAqC;AAC/E,oBAAoB,mBAAO,CAAC,KAAW;AACvC,qCAAqC,mBAAO,CAAC,KAAwC;AACrF,iCAAiC,mBAAO,CAAC,IAAoC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,aAAa;AAChE;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iGAAiG,QAAQ,iCAAiC,oBAAoB;AAC9J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,aAAa;AAC5D,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;;;;;;;AC7Pa;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,yBAAyB;AACzB,yBAAyB,mBAAO,CAAC,KAAkB;AACnD,6BAA6B,mBAAO,CAAC,KAAgC;AACrE,wBAAwB,mBAAO,CAAC,KAAgC;AAChE,kCAAkC,mBAAO,CAAC,KAAqC;AAC/E,oBAAoB,mBAAO,CAAC,KAAW;AACvC,oCAAoC,mBAAO,CAAC,KAAuC;AACnF,iCAAiC,mBAAO,CAAC,IAAoC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,aAAa;AAChE;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iGAAiG,QAAQ,iCAAiC,oBAAoB;AAC9J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,aAAa;AAC5D,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;;;;;;ACvNa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,8BAA8B;AAC9B,qCAAqC,mBAAO,CAAC,KAA6C;AAC1F,iCAAiC,mBAAO,CAAC,IAAoC;AAC7E,oBAAoB,mBAAO,CAAC,KAAW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ,uCAAuC,WAAW,4BAA4B,WAAW,4BAA4B;AACrJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA,4CAA4C;AAC5C,0CAA0C;AAC1C;AACA;AACA,kCAAkC;AAClC;AACA;AACA,mDAAmD;AACnD,sDAAsD;AACtuDAAuD;AACvmDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA,mEAAmE,QAAQ;AAC3E;AACA;AACA;AACA,sEAAsE,QAAQ;AAC9E;AACA;AACA;AACA;AACA;AACA,mEAAmE,QAAQ;AAC3E;AACA;AACA;AACA,sEAAsE,QAAQ;AAC9E;AACA;AACA;AACA;AACA;AACA,wEAAwE,kCAAkC;AAC1G;AACA;AACA;AACA,2EAA2E,kCAAkC;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,QAAQ;AACzE;AACA;AACA;AACA,oEAAoE,QAAQ;AAC5E;AACA;AACA;AACA;AACA;AACA,iEAAiE,QAAQ;AACzE;AACA;AACA;AACA,oEAAoE,QAAQ;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,QAAQ;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF,QAAQ;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,gBAAgB,kCAAkC;AAClD;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sGAAsG,wDAAwD;AAC9J;AACA;AACA,oGAAoG,wDAAwD;AAC5J;AACA;AACA,qGAAqG,wDAAwD;AAC7J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,QAAQ;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF,QAAQ;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F,QAAQ;AAClG;AACA;AACA;AACA;AACA,6FAA6F,QAAQ;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF,QAAQ;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF,QAAQ;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;;;;;;;AChiBa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvyDAAyD;AACnG;AACA;AACA;AACA,uCAAuC;AACvC;;;;;;;ACjQa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,2BAA2B;AAC3B,6BAA6B,mBAAO,CAAC,KAAgC;AACrE,oBAAoB,mBAAO,CAAC,KAAW;AACvC,6BAA6B,mBAAO,CAAC,KAA8B;AACnE,wBAAwB,mBAAO,CAAC,KAAgC;AAChE,8BAA8B,mBAAO,CAAC,KAA6C;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;;;;;;;ACxca;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kCAAkC;AAClC,iCAAiC,mBAAO,CAAC,KAA0B;AACnE,8BAA8B,mBAAO,CAAC,KAAuB;AAC7D,0CAA0C,mBAAO,CAAC,KAAmC;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;;;;;;;ACjCa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iCAAiC;AACjC,iCAAiC,mBAAO,CAAC,KAA0B;AACnE,8BAA8B,mBAAO,CAAC,KAAuB;AAC7D,0CAA0C,mBAAO,CAAC,KAAmC;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;;;;;;;ACjCa;AACb;AACA;AACA;AACA;AACA,eAAe,oCAAoC;AACnD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,0CAA0C,4BAA4B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kCAAkC;AAClC,2BAA2B,mBAAO,CAAC,KAAmB;AACtD,yCAAyC,mBAAO,CAAC,KAAuD;AACxG,oCAAoC,mBAAO,CAAC,KAAkD;AAC9F,sCAAsC,mBAAO,CAAC,KAAoD;AAClG,uCAAuC,mBAAO,CAAC,IAAqD;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA,iCAAiC,YAAY;AAC7C;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6JAA6J,qBAAqB;AAClL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;;;;;;;AClJa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sCAAsC;AACtC,oBAAoB,mBAAO,CAAC,KAAW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;;;;;;;ACtDa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iCAAiC;AACjC,oBAAoB,mBAAO,CAAC,KAAW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;;;;;;;AChCa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mCAAmC;AACnC,oBAAoB,mBAAO,CAAC,KAAW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qBAAqB;AAC7C,sBAAsB;AACtB;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;;;;;;;AC9Ca;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oCAAoC;AACpC,oBAAoB,mBAAO,CAAC,KAAW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;;;;;;;AC1Ca;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kCAAkC,GAAG,iCAAiC,GAAG,0BAA0B,GAAG,yBAAyB,GAAG,qCAAqC,GAAG,mBAAmB,GAAG,sBAAsB,GAAG,oBAAoB;AAC7O,yBAAyB,mBAAO,CAAC,KAAwC;AACzE,kDAAiD,EAAE,qCAAqC,2CAA2C,EAAC;AACpI,wBAAwB,mBAAO,CAAC,KAA4B;AAC5D,+CAA8C,EAAE,qCAAqC,uCAAuC,EAAC;AAC7H,uBAAuB,mBAAO,CAAC,KAA+B;AAC9D,gDAA+C,EAAE,qCAAqC,uCAAuC,EAAC;AAC9H,8BAA8B,mBAAO,CAAC,KAAyC;AAC/E,iEAAgE,EAAE,qCAAqC,+DAA+D,EAAC;AACvK,6BAA6B,mBAAO,CAAC,KAA4C;AACjF,sDAAqD,EAAE,qCAAqC,mDAAmD,EAAC;AAChJ,qCAAqC,mBAAO,CAAC,KAAsD;AACnG,8DAA6D,EAAE,qCAAqC,mEAAmE,EAAC;AACxK,4BAA4B,mBAAO,CAAC,KAA2C;AAC/E,qDAAoD,EAAE,qCAAqC,iDAAiD,EAAC;AAC7I,oCAAoC,mBAAO,CAAC,KAAqD;AACjG,6DAA4D,EAAE,qCAAqC,iEAAiE,EAAC;AACrK;;;;;;;ACnBa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC,mBAAmB,KAAK;AACjE;AACA;;;;;;;ACXa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4EAA4E,qCAAqC,KAAK;AACvH;AACA;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,qBAAqB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjmDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,sBAAsB;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E,sBAAsB;AACriEAAe,OAAO,EAAC;AACyG;;;;;;;;AClyBnH;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;;;;;;;ACxCa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB;AACpB,iCAAiC,mBAAO,CAAC,IAAoC;AAC7E,iBAAiB,mBAAO,CAAC,IAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;;;;;;;AClEa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc,GAAG,oBAAoB;AACrC,iBAAiB,mBAAO,CAAC,IAAyB;AAClD,0CAAyC,EAAE,qCAAqC,2BAA2B,EAAC;AAC5G,uBAAuB,mBAAO,CAAC,KAA+B;AAC9D,gDAA+C,EAAE,qCAAqC,uCAAuC,EAAC;AAC9H","sources":["webpack://spinlio-workspace/./node_modules/@shapediver/viewer.rendering-engine.animation-engine/dist/implementation/AnimationEngine.js","webpack://spinlio-workspace/./node_modules/@shapediver/viewer.rendering-engine.animation-engine/dist/index.js","webpack://spinlio-workspace/./node_modules/@shapediver/viewer.rendering-engine.animation-frame-engine/dist/implementation/AnimationFrameEngine.js","webpack://spinlio-workspace/./node_modules/@shapediver/viewer.rendering-engine.animation-frame-engine/dist/index.js","webpack://spinlio-workspace/./node_modules/@shapediver/viewer.rendering-engine.animation-frame-engine/node_modules/@tweenjs/tween.js/dist/tween.esm.js","webpack://spinlio-workspace/./node_modules/@shapediver/viewer.rendering-engine.camera-engine/dist/implementation/CameraEngine.js","webpack://spinlio-workspace/./node_modules/@shapediver/viewer.rendering-engine.camera-engine/dist/implementation/camera/AbstractCamera.js","webpack://spinlio-workspace/./node_modules/@shapediver/viewer.rendering-engine.camera-engine/dist/implementation/camera/OrthographicCamera.js","webpack://spinlio-workspace/./node_modules/@shapediver/viewer.rendering-engine.camera-engine/dist/implementation/camera/PerspectiveCamera.js","webpack://spinlio-workspace/./node_modules/@shapediver/viewer.rendering-engine.camera-engine/dist/implementation/controls/AbstractCameraControls.js","webpack://spinlio-workspace/./node_modules/@shapediver/viewer.rendering-engine.camera-engine/dist/implementation/controls/CameraControlsEventDistribution.js","webpack://spinlio-workspace/./node_modules/@shapediver/viewer.rendering-engine.camera-engine/dist/implementation/controls/CameraControlsLogic.js","webpack://spinlio-workspace/./node_modules/@shapediver/viewer.rendering-engine.camera-engine/dist/implementation/controls/OrthographicCameraControls.js","webpack://spinlio-workspace/./node_modules/@shapediver/viewer.rendering-engine.camera-engine/dist/implementation/controls/PerspectiveCameraControls.js","webpack://spinlio-workspace/./node_modules/@shapediver/viewer.rendering-engine.camera-engine/dist/implementation/interpolation/CameraInterpolationManager.js","webpack://spinlio-workspace/./node_modules/@shapediver/viewer.rendering-engine.camera-engine/dist/implementation/interpolation/interpolationMethods/CameraCylindricalInterpolation.js","webpack://spinlio-workspace/./node_modules/@shapediver/viewer.rendering-engine.camera-engine/dist/implementation/interpolation/interpolationMethods/CameraLinearInterpolation.js","webpack://spinlio-workspace/./node_modules/@shapediver/viewer.rendering-engine.camera-engine/dist/implementation/interpolation/interpolationMethods/CameraMultipleInterpolation.js","webpack://spinlio-workspace/./node_modules/@shapediver/viewer.rendering-engine.camera-engine/dist/implementation/interpolation/interpolationMethods/CameraSphericalInterpolation.js","webpack://spinlio-workspace/./node_modules/@shapediver/viewer.rendering-engine.camera-engine/dist/index.js","webpack://spinlio-workspace/./node_modules/@shapediver/viewer.rendering-engine.camera-engine/dist/interfaces/ICameraEngine.js","webpack://spinlio-workspace/./node_modules/@shapediver/viewer.rendering-engine.camera-engine/dist/interfaces/camera/IOrthographicCamera.js","webpack://spinlio-workspace/./node_modules/@shapediver/viewer.rendering-engine.camera-engine/node_modules/@tweenjs/tween.js/dist/tween.esm.js","webpack://spinlio-workspace/./node_modules/@shapediver/viewer.rendering-engine.canvas-engine/dist/implementation/Canvas.js","webpack://spinlio-workspace/./node_modules/@shapediver/viewer.rendering-engine.canvas-engine/dist/implementation/CanvasEngine.js","webpack://spinlio-workspace/./node_modules/@shapediver/viewer.rendering-engine.canvas-engine/dist/index.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AnimationEngine = void 0;\r\nconst gl_matrix_1 = require(\"gl-matrix\");\r\nconst viewer_shared_node_tree_1 = require(\"@shapediver/viewer.shared.node-tree\");\r\nconst viewer_shared_types_1 = require(\"@shapediver/viewer.shared.types\");\r\nclass AnimationEngine {\r\n    constructor() {\r\n        // #region Properties (3)\r\n        this._tree = viewer_shared_node_tree_1.Tree.instance;\r\n        this._animations = {};\r\n        // #endregion Private Methods (1)\r\n    }\r\n    // #endregion Properties (3)\r\n    // #region Public Static Accessors (1)\r\n    static get instance() {\r\n        return this._instance || (this._instance = new this());\r\n    }\r\n    // #endregion Public Static Accessors (1)\r\n    // #region Public Accessors (1)\r\n    get animations() {\r\n        return this._animations;\r\n    }\r\n    // #endregion Public Accessors (1)\r\n    // #region Public Methods (3)\r\n    init() { }\r\n    update(deltaTime) {\r\n        const animations = Object.values(this._animations);\r\n        let running = false;\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const animation = animations[i];\r\n            if (animation.animationTime === -1) {\r\n                // if we just stopped we need to render one more time\r\n                running = true;\r\n                animation.animationTime = 0;\r\n            }\r\n            if (!animation.animate)\r\n                continue;\r\n            running = true;\r\n            animation.animationTime += deltaTime;\r\n            if (animation.animationTime / 1000.0 > animation.duration) {\r\n                if (animation.repeat) {\r\n                    animation.startAnimation();\r\n                }\r\n                else {\r\n                    animation.stopAnimation();\r\n                }\r\n            }\r\n            const animationDuration = animation.duration;\r\n            const currentAnimationDeltaTime = (animation.animationTime / 1000.0) % animationDuration;\r\n            for (let j = 0; j < animation.tracks.length; j++) {\r\n                const track = animation.tracks[j];\r\n                const id = animation.id + '_' + j;\r\n                if (currentAnimationDeltaTime < track.times[0] || currentAnimationDeltaTime > track.times[track.times.length - 1])\r\n                    continue;\r\n                for (let k = 1; k < track.times.length; k++) {\r\n                    if (currentAnimationDeltaTime < track.times[k] && currentAnimationDeltaTime > track.times[k - 1]) {\r\n                        const prevAnimation = track.node.transformations.filter(t => t.id === id);\r\n                        track.node.transformations = track.node.transformations.filter((el) => {\r\n                            return !prevAnimation.includes(el);\r\n                        });\r\n                        const factor = (currentAnimationDeltaTime - track.times[k - 1]) / (track.times[k] - track.times[k - 1]);\r\n                        let translationTransformation = track.node.transformations.find(t => t.id === 'gltf_matrix_translation');\r\n                        if (!translationTransformation) {\r\n                            translationTransformation = {\r\n                                id: 'gltf_matrix_translation',\r\n                                matrix: gl_matrix_1.mat4.create()\r\n                            };\r\n                            track.node.transformations.push(translationTransformation);\r\n                        }\r\n                        let rotationTransformation = track.node.transformations.find(t => t.id === 'gltf_matrix_rotation');\r\n                        if (!rotationTransformation) {\r\n                            rotationTransformation = {\r\n                                id: 'gltf_matrix_rotation',\r\n                                matrix: gl_matrix_1.mat4.create()\r\n                            };\r\n                            track.node.transformations.push(rotationTransformation);\r\n                        }\r\n                        let scaleTransformation = track.node.transformations.find(t => t.id === 'gltf_matrix_scale');\r\n                        if (!scaleTransformation) {\r\n                            scaleTransformation = {\r\n                                id: 'gltf_matrix_scale',\r\n                                matrix: gl_matrix_1.mat4.create()\r\n                            };\r\n                            track.node.transformations.push(scaleTransformation);\r\n                        }\r\n                        if (track.path === 'rotation') {\r\n                            let pivotMatrix, pivotMatrixInverse;\r\n                            if (track.pivot) {\r\n                                pivotMatrix = gl_matrix_1.mat4.fromTranslation(gl_matrix_1.mat4.create(), gl_matrix_1.vec3.fromValues(track.pivot[0], track.pivot[1], track.pivot[2]));\r\n                                pivotMatrixInverse = gl_matrix_1.mat4.fromTranslation(gl_matrix_1.mat4.create(), gl_matrix_1.vec3.fromValues(-track.pivot[0], -track.pivot[1], -track.pivot[2]));\r\n                            }\r\n                            let quaternion;\r\n                            if (track.interpolation === 'step') {\r\n                                quaternion = gl_matrix_1.quat.fromValues(track.values[(k - 1) * 4 + 0], track.values[(k - 1) * 4 + 1], track.values[(k - 1) * 4 + 2], track.values[(k - 1) * 4 + 3]);\r\n                            }\r\n                            else {\r\n                                quaternion = gl_matrix_1.quat.slerp(gl_matrix_1.vec4.create(), gl_matrix_1.vec4.fromValues(track.values[(k - 1) * 4 + 0], track.values[(k - 1) * 4 + 1], track.values[(k - 1) * 4 + 2], track.values[(k - 1) * 4 + 3]), gl_matrix_1.vec4.fromValues(track.values[(k) * 4 + 0], track.values[(k) * 4 + 1], track.values[(k) * 4 + 2], track.values[(k) * 4 + 3]), factor);\r\n                            }\r\n                            const rotationMatrix = gl_matrix_1.mat4.fromQuat(gl_matrix_1.mat4.create(), quaternion);\r\n                            if (pivotMatrix && pivotMatrixInverse) {\r\n                                rotationTransformation.matrix = gl_matrix_1.mat4.multiply(gl_matrix_1.mat4.create(), gl_matrix_1.mat4.multiply(gl_matrix_1.mat4.create(), pivotMatrix, rotationMatrix), pivotMatrixInverse);\r\n                            }\r\n                            else {\r\n                                rotationTransformation.matrix = rotationMatrix;\r\n                            }\r\n                        }\r\n                        else if (track.path === 'translation') {\r\n                            let vector;\r\n                            if (track.interpolation === 'step') {\r\n                                vector = gl_matrix_1.vec3.fromValues(track.values[(k - 1) * 3 + 0], track.values[(k - 1) * 3 + 1], track.values[(k - 1) * 3 + 2]);\r\n                            }\r\n                            else {\r\n                                vector = gl_matrix_1.vec3.lerp(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.fromValues(track.values[(k - 1) * 3 + 0], track.values[(k - 1) * 3 + 1], track.values[(k - 1) * 3 + 2]), gl_matrix_1.vec3.fromValues(track.values[(k) * 3 + 0], track.values[(k) * 3 + 1], track.values[(k) * 3 + 2]), factor);\r\n                            }\r\n                            translationTransformation.matrix = gl_matrix_1.mat4.fromTranslation(gl_matrix_1.mat4.create(), vector);\r\n                        }\r\n                        else if (track.path === 'scale') {\r\n                            let pivotMatrix, pivotMatrixInverse;\r\n                            if (track.pivot) {\r\n                                pivotMatrix = gl_matrix_1.mat4.fromTranslation(gl_matrix_1.mat4.create(), gl_matrix_1.vec3.fromValues(track.pivot[0], track.pivot[1], track.pivot[2]));\r\n                                pivotMatrixInverse = gl_matrix_1.mat4.fromTranslation(gl_matrix_1.mat4.create(), gl_matrix_1.vec3.fromValues(-track.pivot[0], -track.pivot[1], -track.pivot[2]));\r\n                            }\r\n                            let vector;\r\n                            if (track.interpolation === 'step') {\r\n                                vector = gl_matrix_1.vec3.fromValues(track.values[(k - 1) * 3 + 0], track.values[(k - 1) * 3 + 1], track.values[(k - 1) * 3 + 2]);\r\n                            }\r\n                            else {\r\n                                vector = gl_matrix_1.vec3.lerp(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.fromValues(track.values[(k - 1) * 3 + 0], track.values[(k - 1) * 3 + 1], track.values[(k - 1) * 3 + 2]), gl_matrix_1.vec3.fromValues(track.values[(k) * 3 + 0], track.values[(k) * 3 + 1], track.values[(k) * 3 + 2]), factor);\r\n                            }\r\n                            const scalingMatrix = gl_matrix_1.mat4.fromScaling(gl_matrix_1.mat4.create(), vector);\r\n                            if (pivotMatrix && pivotMatrixInverse) {\r\n                                scaleTransformation.matrix = gl_matrix_1.mat4.multiply(gl_matrix_1.mat4.create(), gl_matrix_1.mat4.multiply(gl_matrix_1.mat4.create(), pivotMatrix, scalingMatrix), pivotMatrixInverse);\r\n                            }\r\n                            else {\r\n                                scaleTransformation.matrix = scalingMatrix;\r\n                            }\r\n                        }\r\n                        else if (track.path === 'weights') {\r\n                            let weights = [];\r\n                            const weightCount = track.values.length / track.times.length;\r\n                            if (track.interpolation === 'step') {\r\n                                for (let l = 0; l < weightCount; l++)\r\n                                    weights.push(track.values[(k - 1) * weightCount + l]);\r\n                            }\r\n                            else {\r\n                                for (let l = 0; l < weightCount; l++)\r\n                                    weights.push(track.values[(k - 1) * weightCount + l] * (1.0 - factor) + (factor) * track.values[(k - 1) * weightCount + l]);\r\n                            }\r\n                            const applyWeights = (node) => {\r\n                                for (let l = 0; l < node.data.length; l++)\r\n                                    if (node.data[l] instanceof viewer_shared_types_1.GeometryData && node.data[l].morphWeights.length === weightCount)\r\n                                        node.data[l].morphWeights = weights;\r\n                                for (let l = 0; l < node.children.length; l++)\r\n                                    applyWeights(node.children[l]);\r\n                            };\r\n                            applyWeights(track.node);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return running;\r\n    }\r\n    updateAnimationData() {\r\n        this._animations = {};\r\n        const animationArray = this.gatherAnimations();\r\n        const names = animationArray.map(a => a.name);\r\n        for (let i = 0; i < animationArray.length; i++) {\r\n            const animationName = animationArray[i].name;\r\n            const nameIndices = [];\r\n            for (let j = 0; j < names.length; j++)\r\n                if (animationName === names[j])\r\n                    nameIndices.push(j);\r\n            let animationNameAdjusted = animationName;\r\n            // name adjustement if the name occurs multiple times\r\n            if (nameIndices.length > 1) {\r\n                animationNameAdjusted = animationName + '_' + nameIndices.indexOf(i);\r\n                // even further name adjustement if the name is even then the same after adjustements (probably will never happen)\r\n                while (names.includes(animationNameAdjusted))\r\n                    animationNameAdjusted += \"_0\";\r\n            }\r\n            this._animations[animationNameAdjusted] = animationArray[i];\r\n        }\r\n    }\r\n    // #endregion Public Methods (3)\r\n    // #region Private Methods (1)\r\n    gatherAnimations(node = this._tree.root) {\r\n        let out = [];\r\n        for (let i = 0, len = node.data.length; i < len; i++)\r\n            if (node.data[i] instanceof viewer_shared_types_1.AnimationData)\r\n                out.push(node.data[i]);\r\n        for (let i = 0, len = node.children.length; i < len; i++)\r\n            out = out.concat(this.gatherAnimations(node.children[i]));\r\n        return out;\r\n    }\r\n}\r\nexports.AnimationEngine = AnimationEngine;\r\n//# sourceMappingURL=AnimationEngine.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AnimationEngine = void 0;\r\nconst AnimationEngine_1 = require(\"./implementation/AnimationEngine\");\r\nObject.defineProperty(exports, \"AnimationEngine\", { enumerable: true, get: function () { return AnimationEngine_1.AnimationEngine; } });\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar _AnimationFrameEngine_animationEngine, _AnimationFrameEngine_uuidGenerator;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AnimationFrameEngine = void 0;\r\nconst TWEEN = __importStar(require(\"@tweenjs/tween.js\"));\r\nconst viewer_shared_services_1 = require(\"@shapediver/viewer.shared.services\");\r\nconst viewer_rendering_engine_animation_engine_1 = require(\"@shapediver/viewer.rendering-engine.animation-engine\");\r\nclass AnimationFrameEngine {\r\n    // #endregion Properties (5)\r\n    // #region Constructors (1)\r\n    constructor() {\r\n        // #region Properties (5)\r\n        _AnimationFrameEngine_animationEngine.set(this, viewer_rendering_engine_animation_engine_1.AnimationEngine.instance);\r\n        _AnimationFrameEngine_uuidGenerator.set(this, viewer_shared_services_1.UuidGenerator.instance);\r\n        this._animationFrameCallbacks = {};\r\n        this._lastTime = 0;\r\n        this.animate(0);\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Static Accessors (1)\r\n    static get instance() {\r\n        return this._instance || (this._instance = new this());\r\n    }\r\n    // #endregion Public Static Accessors (1)\r\n    // #region Public Methods (2)\r\n    addAnimationFrameCallback(cb) {\r\n        const token = __classPrivateFieldGet(this, _AnimationFrameEngine_uuidGenerator, \"f\").create();\r\n        this._animationFrameCallbacks[token] = cb;\r\n        return token;\r\n    }\r\n    removeAnimationFrameCallback(token) {\r\n        if (!this._animationFrameCallbacks[token])\r\n            return false;\r\n        delete this._animationFrameCallbacks[token];\r\n        this._animationFrameCallbacks[token] = undefined;\r\n        return true;\r\n    }\r\n    // #endregion Public Methods (2)\r\n    // #region Private Methods (1)\r\n    animate(time) {\r\n        // animation loop - part 2: requesting and timings\r\n        requestAnimationFrame((time) => this.animate(time));\r\n        TWEEN.update(time);\r\n        const deltaTime = time - this._lastTime < 0 ? 0 : time - this._lastTime;\r\n        this._lastTime = time;\r\n        const runningAnimation = __classPrivateFieldGet(this, _AnimationFrameEngine_animationEngine, \"f\").update(deltaTime);\r\n        for (let a in this._animationFrameCallbacks)\r\n            this._animationFrameCallbacks[a](time, deltaTime, runningAnimation);\r\n    }\r\n}\r\nexports.AnimationFrameEngine = AnimationFrameEngine;\r\n_AnimationFrameEngine_animationEngine = new WeakMap(), _AnimationFrameEngine_uuidGenerator = new WeakMap();\r\n//# sourceMappingURL=AnimationFrameEngine.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AnimationFrameEngine = void 0;\r\nconst AnimationFrameEngine_1 = require(\"./implementation/AnimationFrameEngine\");\r\nObject.defineProperty(exports, \"AnimationFrameEngine\", { enumerable: true, get: function () { return AnimationFrameEngine_1.AnimationFrameEngine; } });\r\n//# sourceMappingURL=index.js.map","/**\n * The Ease class provides a collection of easing functions for use with tween.js.\n */\nvar Easing = {\n    Linear: {\n        None: function (amount) {\n            return amount;\n        },\n    },\n    Quadratic: {\n        In: function (amount) {\n            return amount * amount;\n        },\n        Out: function (amount) {\n            return amount * (2 - amount);\n        },\n        InOut: function (amount) {\n            if ((amount *= 2) < 1) {\n                return 0.5 * amount * amount;\n            }\n            return -0.5 * (--amount * (amount - 2) - 1);\n        },\n    },\n    Cubic: {\n        In: function (amount) {\n            return amount * amount * amount;\n        },\n        Out: function (amount) {\n            return --amount * amount * amount + 1;\n        },\n        InOut: function (amount) {\n            if ((amount *= 2) < 1) {\n                return 0.5 * amount * amount * amount;\n            }\n            return 0.5 * ((amount -= 2) * amount * amount + 2);\n        },\n    },\n    Quartic: {\n        In: function (amount) {\n            return amount * amount * amount * amount;\n        },\n        Out: function (amount) {\n            return 1 - --amount * amount * amount * amount;\n        },\n        InOut: function (amount) {\n            if ((amount *= 2) < 1) {\n                return 0.5 * amount * amount * amount * amount;\n            }\n            return -0.5 * ((amount -= 2) * amount * amount * amount - 2);\n        },\n    },\n    Quintic: {\n        In: function (amount) {\n            return amount * amount * amount * amount * amount;\n        },\n        Out: function (amount) {\n            return --amount * amount * amount * amount * amount + 1;\n        },\n        InOut: function (amount) {\n            if ((amount *= 2) < 1) {\n                return 0.5 * amount * amount * amount * amount * amount;\n            }\n            return 0.5 * ((amount -= 2) * amount * amount * amount * amount + 2);\n        },\n    },\n    Sinusoidal: {\n        In: function (amount) {\n            return 1 - Math.cos((amount * Math.PI) / 2);\n        },\n        Out: function (amount) {\n            return Math.sin((amount * Math.PI) / 2);\n        },\n        InOut: function (amount) {\n            return 0.5 * (1 - Math.cos(Math.PI * amount));\n        },\n    },\n    Exponential: {\n        In: function (amount) {\n            return amount === 0 ? 0 : Math.pow(1024, amount - 1);\n        },\n        Out: function (amount) {\n            return amount === 1 ? 1 : 1 - Math.pow(2, -10 * amount);\n        },\n        InOut: function (amount) {\n            if (amount === 0) {\n                return 0;\n            }\n            if (amount === 1) {\n                return 1;\n            }\n            if ((amount *= 2) < 1) {\n                return 0.5 * Math.pow(1024, amount - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (amount - 1)) + 2);\n        },\n    },\n    Circular: {\n        In: function (amount) {\n            return 1 - Math.sqrt(1 - amount * amount);\n        },\n        Out: function (amount) {\n            return Math.sqrt(1 - --amount * amount);\n        },\n        InOut: function (amount) {\n            if ((amount *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - amount * amount) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (amount -= 2) * amount) + 1);\n        },\n    },\n    Elastic: {\n        In: function (amount) {\n            if (amount === 0) {\n                return 0;\n            }\n            if (amount === 1) {\n                return 1;\n            }\n            return -Math.pow(2, 10 * (amount - 1)) * Math.sin((amount - 1.1) * 5 * Math.PI);\n        },\n        Out: function (amount) {\n            if (amount === 0) {\n                return 0;\n            }\n            if (amount === 1) {\n                return 1;\n            }\n            return Math.pow(2, -10 * amount) * Math.sin((amount - 0.1) * 5 * Math.PI) + 1;\n        },\n        InOut: function (amount) {\n            if (amount === 0) {\n                return 0;\n            }\n            if (amount === 1) {\n                return 1;\n            }\n            amount *= 2;\n            if (amount < 1) {\n                return -0.5 * Math.pow(2, 10 * (amount - 1)) * Math.sin((amount - 1.1) * 5 * Math.PI);\n            }\n            return 0.5 * Math.pow(2, -10 * (amount - 1)) * Math.sin((amount - 1.1) * 5 * Math.PI) + 1;\n        },\n    },\n    Back: {\n        In: function (amount) {\n            var s = 1.70158;\n            return amount * amount * ((s + 1) * amount - s);\n        },\n        Out: function (amount) {\n            var s = 1.70158;\n            return --amount * amount * ((s + 1) * amount + s) + 1;\n        },\n        InOut: function (amount) {\n            var s = 1.70158 * 1.525;\n            if ((amount *= 2) < 1) {\n                return 0.5 * (amount * amount * ((s + 1) * amount - s));\n            }\n            return 0.5 * ((amount -= 2) * amount * ((s + 1) * amount + s) + 2);\n        },\n    },\n    Bounce: {\n        In: function (amount) {\n            return 1 - Easing.Bounce.Out(1 - amount);\n        },\n        Out: function (amount) {\n            if (amount < 1 / 2.75) {\n                return 7.5625 * amount * amount;\n            }\n            else if (amount < 2 / 2.75) {\n                return 7.5625 * (amount -= 1.5 / 2.75) * amount + 0.75;\n            }\n            else if (amount < 2.5 / 2.75) {\n                return 7.5625 * (amount -= 2.25 / 2.75) * amount + 0.9375;\n            }\n            else {\n                return 7.5625 * (amount -= 2.625 / 2.75) * amount + 0.984375;\n            }\n        },\n        InOut: function (amount) {\n            if (amount < 0.5) {\n                return Easing.Bounce.In(amount * 2) * 0.5;\n            }\n            return Easing.Bounce.Out(amount * 2 - 1) * 0.5 + 0.5;\n        },\n    },\n};\n\nvar now;\n// Include a performance.now polyfill.\n// In node.js, use process.hrtime.\n// eslint-disable-next-line\n// @ts-ignore\nif (typeof self === 'undefined' && typeof process !== 'undefined' && process.hrtime) {\n    now = function () {\n        // eslint-disable-next-line\n        // @ts-ignore\n        var time = process.hrtime();\n        // Convert [seconds, nanoseconds] to milliseconds.\n        return time[0] * 1000 + time[1] / 1000000;\n    };\n}\n// In a browser, use self.performance.now if it is available.\nelse if (typeof self !== 'undefined' && self.performance !== undefined && self.performance.now !== undefined) {\n    // This must be bound, because directly assigning this function\n    // leads to an invocation exception in Chrome.\n    now = self.performance.now.bind(self.performance);\n}\n// Use Date.now if it is available.\nelse if (Date.now !== undefined) {\n    now = Date.now;\n}\n// Otherwise, use 'new Date().getTime()'.\nelse {\n    now = function () {\n        return new Date().getTime();\n    };\n}\nvar now$1 = now;\n\n/**\n * Controlling groups of tweens\n *\n * Using the TWEEN singleton to manage your tweens can cause issues in large apps with many components.\n * In these cases, you may want to create your own smaller groups of tween\n */\nvar Group = /** @class */ (function () {\n    function Group() {\n        this._tweens = {};\n        this._tweensAddedDuringUpdate = {};\n    }\n    Group.prototype.getAll = function () {\n        var _this = this;\n        return Object.keys(this._tweens).map(function (tweenId) {\n            return _this._tweens[tweenId];\n        });\n    };\n    Group.prototype.removeAll = function () {\n        this._tweens = {};\n    };\n    Group.prototype.add = function (tween) {\n        this._tweens[tween.getId()] = tween;\n        this._tweensAddedDuringUpdate[tween.getId()] = tween;\n    };\n    Group.prototype.remove = function (tween) {\n        delete this._tweens[tween.getId()];\n        delete this._tweensAddedDuringUpdate[tween.getId()];\n    };\n    Group.prototype.update = function (time, preserve) {\n        if (time === void 0) { time = now$1(); }\n        if (preserve === void 0) { preserve = false; }\n        var tweenIds = Object.keys(this._tweens);\n        if (tweenIds.length === 0) {\n            return false;\n        }\n        // Tweens are updated in \"batches\". If you add a new tween during an\n        // update, then the new tween will be updated in the next batch.\n        // If you remove a tween during an update, it may or may not be updated.\n        // However, if the removed tween was added during the current batch,\n        // then it will not be updated.\n        while (tweenIds.length > 0) {\n            this._tweensAddedDuringUpdate = {};\n            for (var i = 0; i < tweenIds.length; i++) {\n                var tween = this._tweens[tweenIds[i]];\n                var autoStart = !preserve;\n                if (tween && tween.update(time, autoStart) === false && !preserve) {\n                    delete this._tweens[tweenIds[i]];\n                }\n            }\n            tweenIds = Object.keys(this._tweensAddedDuringUpdate);\n        }\n        return true;\n    };\n    return Group;\n}());\n\n/**\n *\n */\nvar Interpolation = {\n    Linear: function (v, k) {\n        var m = v.length - 1;\n        var f = m * k;\n        var i = Math.floor(f);\n        var fn = Interpolation.Utils.Linear;\n        if (k < 0) {\n            return fn(v[0], v[1], f);\n        }\n        if (k > 1) {\n            return fn(v[m], v[m - 1], m - f);\n        }\n        return fn(v[i], v[i + 1 > m ? m : i + 1], f - i);\n    },\n    Bezier: function (v, k) {\n        var b = 0;\n        var n = v.length - 1;\n        var pw = Math.pow;\n        var bn = Interpolation.Utils.Bernstein;\n        for (var i = 0; i <= n; i++) {\n            b += pw(1 - k, n - i) * pw(k, i) * v[i] * bn(n, i);\n        }\n        return b;\n    },\n    CatmullRom: function (v, k) {\n        var m = v.length - 1;\n        var f = m * k;\n        var i = Math.floor(f);\n        var fn = Interpolation.Utils.CatmullRom;\n        if (v[0] === v[m]) {\n            if (k < 0) {\n                i = Math.floor((f = m * (1 + k)));\n            }\n            return fn(v[(i - 1 + m) % m], v[i], v[(i + 1) % m], v[(i + 2) % m], f - i);\n        }\n        else {\n            if (k < 0) {\n                return v[0] - (fn(v[0], v[0], v[1], v[1], -f) - v[0]);\n            }\n            if (k > 1) {\n                return v[m] - (fn(v[m], v[m], v[m - 1], v[m - 1], f - m) - v[m]);\n            }\n            return fn(v[i ? i - 1 : 0], v[i], v[m < i + 1 ? m : i + 1], v[m < i + 2 ? m : i + 2], f - i);\n        }\n    },\n    Utils: {\n        Linear: function (p0, p1, t) {\n            return (p1 - p0) * t + p0;\n        },\n        Bernstein: function (n, i) {\n            var fc = Interpolation.Utils.Factorial;\n            return fc(n) / fc(i) / fc(n - i);\n        },\n        Factorial: (function () {\n            var a = [1];\n            return function (n) {\n                var s = 1;\n                if (a[n]) {\n                    return a[n];\n                }\n                for (var i = n; i > 1; i--) {\n                    s *= i;\n                }\n                a[n] = s;\n                return s;\n            };\n        })(),\n        CatmullRom: function (p0, p1, p2, p3, t) {\n            var v0 = (p2 - p0) * 0.5;\n            var v1 = (p3 - p1) * 0.5;\n            var t2 = t * t;\n            var t3 = t * t2;\n            return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n        },\n    },\n};\n\n/**\n * Utils\n */\nvar Sequence = /** @class */ (function () {\n    function Sequence() {\n    }\n    Sequence.nextId = function () {\n        return Sequence._nextId++;\n    };\n    Sequence._nextId = 0;\n    return Sequence;\n}());\n\nvar mainGroup = new Group();\n\n/**\n * Tween.js - Licensed under the MIT license\n * https://github.com/tweenjs/tween.js\n * ----------------------------------------------\n *\n * See https://github.com/tweenjs/tween.js/graphs/contributors for the full list of contributors.\n * Thank you all, you're awesome!\n */\nvar Tween = /** @class */ (function () {\n    function Tween(_object, _group) {\n        if (_group === void 0) { _group = mainGroup; }\n        this._object = _object;\n        this._group = _group;\n        this._isPaused = false;\n        this._pauseStart = 0;\n        this._valuesStart = {};\n        this._valuesEnd = {};\n        this._valuesStartRepeat = {};\n        this._duration = 1000;\n        this._initialRepeat = 0;\n        this._repeat = 0;\n        this._yoyo = false;\n        this._isPlaying = false;\n        this._reversed = false;\n        this._delayTime = 0;\n        this._startTime = 0;\n        this._easingFunction = Easing.Linear.None;\n        this._interpolationFunction = Interpolation.Linear;\n        this._chainedTweens = [];\n        this._onStartCallbackFired = false;\n        this._id = Sequence.nextId();\n        this._isChainStopped = false;\n        this._goToEnd = false;\n    }\n    Tween.prototype.getId = function () {\n        return this._id;\n    };\n    Tween.prototype.isPlaying = function () {\n        return this._isPlaying;\n    };\n    Tween.prototype.isPaused = function () {\n        return this._isPaused;\n    };\n    Tween.prototype.to = function (properties, duration) {\n        // TODO? restore this, then update the 07_dynamic_to example to set fox\n        // tween's to on each update. That way the behavior is opt-in (there's\n        // currently no opt-out).\n        // for (const prop in properties) this._valuesEnd[prop] = properties[prop]\n        this._valuesEnd = Object.create(properties);\n        if (duration !== undefined) {\n            this._duration = duration;\n        }\n        return this;\n    };\n    Tween.prototype.duration = function (d) {\n        this._duration = d;\n        return this;\n    };\n    Tween.prototype.start = function (time) {\n        if (this._isPlaying) {\n            return this;\n        }\n        // eslint-disable-next-line\n        this._group && this._group.add(this);\n        this._repeat = this._initialRepeat;\n        if (this._reversed) {\n            // If we were reversed (f.e. using the yoyo feature) then we need to\n            // flip the tween direction back to forward.\n            this._reversed = false;\n            for (var property in this._valuesStartRepeat) {\n                this._swapEndStartRepeatValues(property);\n                this._valuesStart[property] = this._valuesStartRepeat[property];\n            }\n        }\n        this._isPlaying = true;\n        this._isPaused = false;\n        this._onStartCallbackFired = false;\n        this._isChainStopped = false;\n        this._startTime = time !== undefined ? (typeof time === 'string' ? now$1() + parseFloat(time) : time) : now$1();\n        this._startTime += this._delayTime;\n        this._setupProperties(this._object, this._valuesStart, this._valuesEnd, this._valuesStartRepeat);\n        return this;\n    };\n    Tween.prototype._setupProperties = function (_object, _valuesStart, _valuesEnd, _valuesStartRepeat) {\n        for (var property in _valuesEnd) {\n            var startValue = _object[property];\n            var startValueIsArray = Array.isArray(startValue);\n            var propType = startValueIsArray ? 'array' : typeof startValue;\n            var isInterpolationList = !startValueIsArray && Array.isArray(_valuesEnd[property]);\n            // If `to()` specifies a property that doesn't exist in the source object,\n            // we should not set that property in the object\n            if (propType === 'undefined' || propType === 'function') {\n                continue;\n            }\n            // Check if an Array was provided as property value\n            if (isInterpolationList) {\n                var endValues = _valuesEnd[property];\n                if (endValues.length === 0) {\n                    continue;\n                }\n                // handle an array of relative values\n                endValues = endValues.map(this._handleRelativeValue.bind(this, startValue));\n                // Create a local copy of the Array with the start value at the front\n                _valuesEnd[property] = [startValue].concat(endValues);\n            }\n            // handle the deepness of the values\n            if ((propType === 'object' || startValueIsArray) && startValue && !isInterpolationList) {\n                _valuesStart[property] = startValueIsArray ? [] : {};\n                // eslint-disable-next-line\n                for (var prop in startValue) {\n                    // eslint-disable-next-line\n                    // @ts-ignore FIXME?\n                    _valuesStart[property][prop] = startValue[prop];\n                }\n                _valuesStartRepeat[property] = startValueIsArray ? [] : {}; // TODO? repeat nested values? And yoyo? And array values?\n                // eslint-disable-next-line\n                // @ts-ignore FIXME?\n                this._setupProperties(startValue, _valuesStart[property], _valuesEnd[property], _valuesStartRepeat[property]);\n            }\n            else {\n                // Save the starting value, but only once.\n                if (typeof _valuesStart[property] === 'undefined') {\n                    _valuesStart[property] = startValue;\n                }\n                if (!startValueIsArray) {\n                    // eslint-disable-next-line\n                    // @ts-ignore FIXME?\n                    _valuesStart[property] *= 1.0; // Ensures we're using numbers, not strings\n                }\n                if (isInterpolationList) {\n                    // eslint-disable-next-line\n                    // @ts-ignore FIXME?\n                    _valuesStartRepeat[property] = _valuesEnd[property].slice().reverse();\n                }\n                else {\n                    _valuesStartRepeat[property] = _valuesStart[property] || 0;\n                }\n            }\n        }\n    };\n    Tween.prototype.stop = function () {\n        if (!this._isChainStopped) {\n            this._isChainStopped = true;\n            this.stopChainedTweens();\n        }\n        if (!this._isPlaying) {\n            return this;\n        }\n        // eslint-disable-next-line\n        this._group && this._group.remove(this);\n        this._isPlaying = false;\n        this._isPaused = false;\n        if (this._onStopCallback) {\n            this._onStopCallback(this._object);\n        }\n        return this;\n    };\n    Tween.prototype.end = function () {\n        this._goToEnd = true;\n        this.update(Infinity);\n        return this;\n    };\n    Tween.prototype.pause = function (time) {\n        if (time === void 0) { time = now$1(); }\n        if (this._isPaused || !this._isPlaying) {\n            return this;\n        }\n        this._isPaused = true;\n        this._pauseStart = time;\n        // eslint-disable-next-line\n        this._group && this._group.remove(this);\n        return this;\n    };\n    Tween.prototype.resume = function (time) {\n        if (time === void 0) { time = now$1(); }\n        if (!this._isPaused || !this._isPlaying) {\n            return this;\n        }\n        this._isPaused = false;\n        this._startTime += time - this._pauseStart;\n        this._pauseStart = 0;\n        // eslint-disable-next-line\n        this._group && this._group.add(this);\n        return this;\n    };\n    Tween.prototype.stopChainedTweens = function () {\n        for (var i = 0, numChainedTweens = this._chainedTweens.length; i < numChainedTweens; i++) {\n            this._chainedTweens[i].stop();\n        }\n        return this;\n    };\n    Tween.prototype.group = function (group) {\n        this._group = group;\n        return this;\n    };\n    Tween.prototype.delay = function (amount) {\n        this._delayTime = amount;\n        return this;\n    };\n    Tween.prototype.repeat = function (times) {\n        this._initialRepeat = times;\n        this._repeat = times;\n        return this;\n    };\n    Tween.prototype.repeatDelay = function (amount) {\n        this._repeatDelayTime = amount;\n        return this;\n    };\n    Tween.prototype.yoyo = function (yoyo) {\n        this._yoyo = yoyo;\n        return this;\n    };\n    Tween.prototype.easing = function (easingFunction) {\n        this._easingFunction = easingFunction;\n        return this;\n    };\n    Tween.prototype.interpolation = function (interpolationFunction) {\n        this._interpolationFunction = interpolationFunction;\n        return this;\n    };\n    Tween.prototype.chain = function () {\n        var tweens = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            tweens[_i] = arguments[_i];\n        }\n        this._chainedTweens = tweens;\n        return this;\n    };\n    Tween.prototype.onStart = function (callback) {\n        this._onStartCallback = callback;\n        return this;\n    };\n    Tween.prototype.onUpdate = function (callback) {\n        this._onUpdateCallback = callback;\n        return this;\n    };\n    Tween.prototype.onRepeat = function (callback) {\n        this._onRepeatCallback = callback;\n        return this;\n    };\n    Tween.prototype.onComplete = function (callback) {\n        this._onCompleteCallback = callback;\n        return this;\n    };\n    Tween.prototype.onStop = function (callback) {\n        this._onStopCallback = callback;\n        return this;\n    };\n    /**\n     * @returns true if the tween is still playing after the update, false\n     * otherwise (calling update on a paused tween still returns true because\n     * it is still playing, just paused).\n     */\n    Tween.prototype.update = function (time, autoStart) {\n        if (time === void 0) { time = now$1(); }\n        if (autoStart === void 0) { autoStart = true; }\n        if (this._isPaused)\n            return true;\n        var property;\n        var elapsed;\n        var endTime = this._startTime + this._duration;\n        if (!this._goToEnd && !this._isPlaying) {\n            if (time > endTime)\n                return false;\n            if (autoStart)\n                this.start(time);\n        }\n        this._goToEnd = false;\n        if (time < this._startTime) {\n            return true;\n        }\n        if (this._onStartCallbackFired === false) {\n            if (this._onStartCallback) {\n                this._onStartCallback(this._object);\n            }\n            this._onStartCallbackFired = true;\n        }\n        elapsed = (time - this._startTime) / this._duration;\n        elapsed = this._duration === 0 || elapsed > 1 ? 1 : elapsed;\n        var value = this._easingFunction(elapsed);\n        // properties transformations\n        this._updateProperties(this._object, this._valuesStart, this._valuesEnd, value);\n        if (this._onUpdateCallback) {\n            this._onUpdateCallback(this._object, elapsed);\n        }\n        if (elapsed === 1) {\n            if (this._repeat > 0) {\n                if (isFinite(this._repeat)) {\n                    this._repeat--;\n                }\n                // Reassign starting values, restart by making startTime = now\n                for (property in this._valuesStartRepeat) {\n                    if (!this._yoyo && typeof this._valuesEnd[property] === 'string') {\n                        this._valuesStartRepeat[property] =\n                            // eslint-disable-next-line\n                            // @ts-ignore FIXME?\n                            this._valuesStartRepeat[property] + parseFloat(this._valuesEnd[property]);\n                    }\n                    if (this._yoyo) {\n                        this._swapEndStartRepeatValues(property);\n                    }\n                    this._valuesStart[property] = this._valuesStartRepeat[property];\n                }\n                if (this._yoyo) {\n                    this._reversed = !this._reversed;\n                }\n                if (this._repeatDelayTime !== undefined) {\n                    this._startTime = time + this._repeatDelayTime;\n                }\n                else {\n                    this._startTime = time + this._delayTime;\n                }\n                if (this._onRepeatCallback) {\n                    this._onRepeatCallback(this._object);\n                }\n                return true;\n            }\n            else {\n                if (this._onCompleteCallback) {\n                    this._onCompleteCallback(this._object);\n                }\n                for (var i = 0, numChainedTweens = this._chainedTweens.length; i < numChainedTweens; i++) {\n                    // Make the chained tweens start exactly at the time they should,\n                    // even if the `update()` method was called way past the duration of the tween\n                    this._chainedTweens[i].start(this._startTime + this._duration);\n                }\n                this._isPlaying = false;\n                return false;\n            }\n        }\n        return true;\n    };\n    Tween.prototype._updateProperties = function (_object, _valuesStart, _valuesEnd, value) {\n        for (var property in _valuesEnd) {\n            // Don't update properties that do not exist in the source object\n            if (_valuesStart[property] === undefined) {\n                continue;\n            }\n            var start = _valuesStart[property] || 0;\n            var end = _valuesEnd[property];\n            var startIsArray = Array.isArray(_object[property]);\n            var endIsArray = Array.isArray(end);\n            var isInterpolationList = !startIsArray && endIsArray;\n            if (isInterpolationList) {\n                _object[property] = this._interpolationFunction(end, value);\n            }\n            else if (typeof end === 'object' && end) {\n                // eslint-disable-next-line\n                // @ts-ignore FIXME?\n                this._updateProperties(_object[property], start, end, value);\n            }\n            else {\n                // Parses relative end values with start as base (e.g.: +10, -3)\n                end = this._handleRelativeValue(start, end);\n                // Protect against non numeric properties.\n                if (typeof end === 'number') {\n                    // eslint-disable-next-line\n                    // @ts-ignore FIXME?\n                    _object[property] = start + (end - start) * value;\n                }\n            }\n        }\n    };\n    Tween.prototype._handleRelativeValue = function (start, end) {\n        if (typeof end !== 'string') {\n            return end;\n        }\n        if (end.charAt(0) === '+' || end.charAt(0) === '-') {\n            return start + parseFloat(end);\n        }\n        else {\n            return parseFloat(end);\n        }\n    };\n    Tween.prototype._swapEndStartRepeatValues = function (property) {\n        var tmp = this._valuesStartRepeat[property];\n        var endValue = this._valuesEnd[property];\n        if (typeof endValue === 'string') {\n            this._valuesStartRepeat[property] = this._valuesStartRepeat[property] + parseFloat(endValue);\n        }\n        else {\n            this._valuesStartRepeat[property] = this._valuesEnd[property];\n        }\n        this._valuesEnd[property] = tmp;\n    };\n    return Tween;\n}());\n\nvar VERSION = '18.6.4';\n\n/**\n * Tween.js - Licensed under the MIT license\n * https://github.com/tweenjs/tween.js\n * ----------------------------------------------\n *\n * See https://github.com/tweenjs/tween.js/graphs/contributors for the full list of contributors.\n * Thank you all, you're awesome!\n */\nvar nextId = Sequence.nextId;\n/**\n * Controlling groups of tweens\n *\n * Using the TWEEN singleton to manage your tweens can cause issues in large apps with many components.\n * In these cases, you may want to create your own smaller groups of tweens.\n */\nvar TWEEN = mainGroup;\n// This is the best way to export things in a way that's compatible with both ES\n// Modules and CommonJS, without build hacks, and so as not to break the\n// existing API.\n// https://github.com/rollup/rollup/issues/1961#issuecomment-423037881\nvar getAll = TWEEN.getAll.bind(TWEEN);\nvar removeAll = TWEEN.removeAll.bind(TWEEN);\nvar add = TWEEN.add.bind(TWEEN);\nvar remove = TWEEN.remove.bind(TWEEN);\nvar update = TWEEN.update.bind(TWEEN);\nvar exports = {\n    Easing: Easing,\n    Group: Group,\n    Interpolation: Interpolation,\n    now: now$1,\n    Sequence: Sequence,\n    nextId: nextId,\n    Tween: Tween,\n    VERSION: VERSION,\n    getAll: getAll,\n    removeAll: removeAll,\n    add: add,\n    remove: remove,\n    update: update,\n};\n\nexport default exports;\nexport { Easing, Group, Interpolation, Sequence, Tween, VERSION, add, getAll, nextId, now$1 as now, remove, removeAll, update };\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CameraEngine = void 0;\r\nconst AbstractCamera_1 = require(\"./camera/AbstractCamera\");\r\nconst viewer_shared_math_1 = require(\"@shapediver/viewer.shared.math\");\r\nconst ICameraEngine_1 = require(\"../interfaces/ICameraEngine\");\r\nconst viewer_shared_node_tree_1 = require(\"@shapediver/viewer.shared.node-tree\");\r\nconst IOrthographicCamera_1 = require(\"../interfaces/camera/IOrthographicCamera\");\r\nconst OrthographicCamera_1 = require(\"./camera/OrthographicCamera\");\r\nconst PerspectiveCamera_1 = require(\"./camera/PerspectiveCamera\");\r\nconst gl_matrix_1 = require(\"gl-matrix\");\r\nconst viewer_shared_services_1 = require(\"@shapediver/viewer.shared.services\");\r\nclass CameraEngine {\r\n    // #endregion Properties (11)\r\n    // #region Constructors (1)\r\n    constructor(_renderingEngine) {\r\n        this._renderingEngine = _renderingEngine;\r\n        // #region Properties (11)\r\n        this._cameraNode = new viewer_shared_node_tree_1.TreeNode('cameras');\r\n        this._cameras = {};\r\n        this._eventEngine = viewer_shared_services_1.EventEngine.instance;\r\n        this._logger = viewer_shared_services_1.Logger.instance;\r\n        this._stateEngine = viewer_shared_services_1.StateEngine.instance;\r\n        this._tree = viewer_shared_node_tree_1.Tree.instance;\r\n        this._uuidGenerator = viewer_shared_services_1.UuidGenerator.instance;\r\n        this._camera = null;\r\n        this._settingsApplied = false;\r\n        this._boundingBox = new viewer_shared_math_1.Box();\r\n        this._tree.root.addChild(this._cameraNode);\r\n        this._cameraNode.restrictViewports = [this._renderingEngine.id];\r\n        this._eventEngine.addListener(viewer_shared_services_1.EVENTTYPE.SCENE.SCENE_BOUNDING_BOX_CHANGE, (e) => {\r\n            const viewerEvent = e;\r\n            if (viewerEvent.viewportId === this._renderingEngine.id) {\r\n                this._boundingBox = new viewer_shared_math_1.Box(viewerEvent.boundingBox.min, viewerEvent.boundingBox.max);\r\n                const cameras = this.cameras;\r\n                for (const c in cameras)\r\n                    cameras[c].boundingBox = this._boundingBox.clone();\r\n            }\r\n        });\r\n        this._eventEngine.addListener(viewer_shared_services_1.EVENTTYPE.VIEWPORT.VIEWPORT_UPDATED, (e) => {\r\n            const viewerEvent = e;\r\n            if (viewerEvent.viewportId === this._renderingEngine.id) {\r\n                this.searchForNewCameras();\r\n            }\r\n        });\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Getters And Setters (4)\r\n    get camera() {\r\n        return this._camera;\r\n    }\r\n    get cameras() {\r\n        return this._cameras;\r\n    }\r\n    get update() {\r\n        return this._update;\r\n    }\r\n    set update(value) {\r\n        this._update = value;\r\n    }\r\n    // #endregion Public Getters And Setters (4)\r\n    // #region Public Methods (8)\r\n    activateCameraEvents() {\r\n        const cameras = this.cameras;\r\n        for (const c in cameras)\r\n            cameras[c].controls.cameraControlsEventDistribution.activateCameraEvents();\r\n    }\r\n    applySettings(settingsEngine) {\r\n        const cameras = this.cameras;\r\n        for (const c in cameras)\r\n            this.removeCamera(c);\r\n        for (const id in settingsEngine.settings.camera.cameras) {\r\n            const cameraSetting = settingsEngine.settings.camera.cameras[id];\r\n            if (cameraSetting.type === 'perspective') {\r\n                this.createCamera(ICameraEngine_1.CAMERA_TYPE.PERSPECTIVE, id);\r\n            }\r\n            else {\r\n                const camera = this.createCamera(ICameraEngine_1.CAMERA_TYPE.ORTHOGRAPHIC, id);\r\n                camera.direction = cameraSetting.type;\r\n            }\r\n        }\r\n        for (const c in cameras)\r\n            cameras[c].applySettings(settingsEngine);\r\n        const cameraKeys = Object.keys(settingsEngine.settings.camera.cameras);\r\n        if (cameraKeys.length > 0) {\r\n            if (!settingsEngine.settings.camera.cameraId) {\r\n                this.assignCamera(cameraKeys[0]);\r\n            }\r\n            else {\r\n                this.assignCamera(settingsEngine.settings.camera.cameraId);\r\n            }\r\n        }\r\n        else {\r\n            this.createDefaultCameras();\r\n            this.camera.applySettings(settingsEngine);\r\n        }\r\n        this._settingsApplied = true;\r\n        if (this._update)\r\n            this._update();\r\n    }\r\n    assignCamera(id) {\r\n        const camera = this.cameras[id];\r\n        if (!camera)\r\n            return false;\r\n        for (const c in this.cameras)\r\n            this.cameras[c].active = false;\r\n        this._camera = camera;\r\n        this._camera.active = true;\r\n        return true;\r\n    }\r\n    createCamera(type, id, isDefault = false) {\r\n        const cameras = this.cameras;\r\n        const cameraId = id || this._uuidGenerator.create();\r\n        if (cameras[cameraId])\r\n            throw new viewer_shared_services_1.ShapeDiverViewerCameraError(`CameraEngine.createCamera: Camera (${type}) with this id (${cameraId}) already exists.`);\r\n        const initialAspectRatio = this._renderingEngine.canvas.parentNode.clientWidth / this._renderingEngine.canvas.parentNode.clientHeight;\r\n        const camera = ICameraEngine_1.CAMERA_TYPE.PERSPECTIVE === type ? new PerspectiveCamera_1.PerspectiveCamera(cameraId, undefined, initialAspectRatio, isDefault) : new OrthographicCamera_1.OrthographicCamera(cameraId, undefined, isDefault);\r\n        camera.assignViewer(this._renderingEngine);\r\n        cameras[cameraId] = camera;\r\n        if (this._settingsApplied && this._renderingEngine.settingsEngine) {\r\n            camera.applySettings(this._renderingEngine.settingsEngine);\r\n        }\r\n        else {\r\n            camera.zoomTo(undefined, { duration: 0 });\r\n        }\r\n        this._cameraNode.addData(camera);\r\n        if (this._update)\r\n            this._update();\r\n        return camera;\r\n    }\r\n    createDefaultCameras() {\r\n        const topCamera = this.createCamera(ICameraEngine_1.CAMERA_TYPE.ORTHOGRAPHIC, 'top', true);\r\n        topCamera.direction = IOrthographicCamera_1.ORTHOGRAPHIC_CAMERA_DIRECTION.TOP;\r\n        const bottomCamera = this.createCamera(ICameraEngine_1.CAMERA_TYPE.ORTHOGRAPHIC, 'bottom', true);\r\n        bottomCamera.direction = IOrthographicCamera_1.ORTHOGRAPHIC_CAMERA_DIRECTION.BOTTOM;\r\n        const leftCamera = this.createCamera(ICameraEngine_1.CAMERA_TYPE.ORTHOGRAPHIC, 'left', true);\r\n        leftCamera.direction = IOrthographicCamera_1.ORTHOGRAPHIC_CAMERA_DIRECTION.LEFT;\r\n        const rightCamera = this.createCamera(ICameraEngine_1.CAMERA_TYPE.ORTHOGRAPHIC, 'right', true);\r\n        rightCamera.direction = IOrthographicCamera_1.ORTHOGRAPHIC_CAMERA_DIRECTION.RIGHT;\r\n        const frontCamera = this.createCamera(ICameraEngine_1.CAMERA_TYPE.ORTHOGRAPHIC, 'front', true);\r\n        frontCamera.direction = IOrthographicCamera_1.ORTHOGRAPHIC_CAMERA_DIRECTION.FRONT;\r\n        const backCamera = this.createCamera(ICameraEngine_1.CAMERA_TYPE.ORTHOGRAPHIC, 'back', true);\r\n        backCamera.direction = IOrthographicCamera_1.ORTHOGRAPHIC_CAMERA_DIRECTION.BACK;\r\n        this.createCamera(ICameraEngine_1.CAMERA_TYPE.ORTHOGRAPHIC, 'orthographic');\r\n        const camera = this.createCamera(ICameraEngine_1.CAMERA_TYPE.PERSPECTIVE, 'perspective');\r\n        this.assignCamera(camera.id);\r\n    }\r\n    deactivateCameraEvents() {\r\n        const cameras = this.cameras;\r\n        for (const c in cameras)\r\n            cameras[c].controls.cameraControlsEventDistribution.deactivateCameraEvents();\r\n    }\r\n    removeCamera(id) {\r\n        const cameras = this.cameras;\r\n        const camera = cameras[id];\r\n        if (!camera)\r\n            return false;\r\n        if (camera.domEventListenerToken)\r\n            this._renderingEngine.domEventEngine.removeDomEventListener(camera.domEventListenerToken);\r\n        if (this._camera && this._camera.id === id)\r\n            this._camera = null;\r\n        delete cameras[id];\r\n        this._cameraNode.removeData(camera);\r\n        if (this._update)\r\n            this._update();\r\n        return true;\r\n    }\r\n    saveSettings(settingsEngine) {\r\n        settingsEngine.settings.camera.cameraId = this._camera ? this._camera.id : 'perspective';\r\n        settingsEngine.settings.camera.cameras = {};\r\n        for (const c in this.cameras) {\r\n            const camera = this.cameras[c];\r\n            if (camera.type === ICameraEngine_1.CAMERA_TYPE.PERSPECTIVE) {\r\n                const controls = camera.controls;\r\n                settingsEngine.camera.cameras[camera.id] = {\r\n                    name: camera.name,\r\n                    autoAdjust: camera.autoAdjust,\r\n                    cameraMovementDuration: camera.cameraMovementDuration,\r\n                    enableCameraControls: camera.enableCameraControls,\r\n                    revertAtMouseUp: camera.revertAtMouseUp,\r\n                    revertAtMouseUpDuration: camera.revertAtMouseUpDuration,\r\n                    zoomExtentsFactor: camera.zoomExtentsFactor,\r\n                    position: { x: camera.defaultPosition[0], y: camera.defaultPosition[1], z: camera.defaultPosition[2] },\r\n                    target: { x: camera.defaultTarget[0], y: camera.defaultTarget[1], z: camera.defaultTarget[2] },\r\n                    type: camera.type,\r\n                    fov: camera.fov,\r\n                    sceneRotation: { x: camera.sceneRotation[0], y: camera.sceneRotation[1] },\r\n                    controls: {\r\n                        autoRotationSpeed: controls.autoRotationSpeed,\r\n                        damping: controls.damping,\r\n                        enableAutoRotation: controls.enableAutoRotation,\r\n                        enableKeyPan: controls.enableKeyPan,\r\n                        enablePan: controls.enablePan,\r\n                        enableRotation: controls.enableRotation,\r\n                        enableZoom: controls.enableZoom,\r\n                        input: controls.input,\r\n                        keyPanSpeed: controls.keyPanSpeed,\r\n                        movementSmoothness: controls.movementSmoothness,\r\n                        rotationSpeed: controls.rotationSpeed,\r\n                        panSpeed: controls.panSpeed,\r\n                        zoomSpeed: controls.zoomSpeed,\r\n                        restrictions: {\r\n                            position: {\r\n                                cube: {\r\n                                    min: { x: controls.cubePositionRestriction.min[0], y: controls.cubePositionRestriction.min[1], z: controls.cubePositionRestriction.min[2] },\r\n                                    max: { x: controls.cubePositionRestriction.max[0], y: controls.cubePositionRestriction.max[1], z: controls.cubePositionRestriction.max[2] },\r\n                                },\r\n                                sphere: {\r\n                                    center: { x: controls.spherePositionRestriction.center[0], y: controls.spherePositionRestriction.center[1], z: controls.spherePositionRestriction.center[2] },\r\n                                    radius: controls.spherePositionRestriction.radius,\r\n                                },\r\n                            },\r\n                            target: {\r\n                                cube: {\r\n                                    min: { x: controls.cubeTargetRestriction.min[0], y: controls.cubeTargetRestriction.min[1], z: controls.cubeTargetRestriction.min[2] },\r\n                                    max: { x: controls.cubeTargetRestriction.max[0], y: controls.cubeTargetRestriction.max[1], z: controls.cubeTargetRestriction.max[2] },\r\n                                },\r\n                                sphere: {\r\n                                    center: { x: controls.sphereTargetRestriction.center[0], y: controls.sphereTargetRestriction.center[1], z: controls.sphereTargetRestriction.center[2] },\r\n                                    radius: controls.sphereTargetRestriction.radius,\r\n                                },\r\n                            },\r\n                            rotation: controls.rotationRestriction,\r\n                            zoom: controls.zoomRestriction,\r\n                        },\r\n                        enableAzimuthRotation: controls.enableAzimuthRotation,\r\n                        enablePolarRotation: controls.enablePolarRotation,\r\n                        enableObjectControls: controls.enableObjectControls,\r\n                        enableTurntableControls: controls.enableTurntableControls,\r\n                        turntableCenter: { x: controls.turntableCenter[0], y: controls.turntableCenter[1], z: controls.turntableCenter[2] },\r\n                        objectControlsCenter: { x: controls.objectControlsCenter[0], y: controls.objectControlsCenter[1], z: controls.objectControlsCenter[2] },\r\n                    }\r\n                };\r\n            }\r\n            else {\r\n                if (settingsEngine.camera.cameras[camera.id]) {\r\n                    const previousDirection = settingsEngine.camera.cameras[camera.id].type;\r\n                    // if the direction changed, but the default position & target did not, there is an issue\r\n                    if (previousDirection !== camera.type && (settingsEngine.camera.cameras[camera.id].position.x === camera.defaultPosition[0] &&\r\n                        settingsEngine.camera.cameras[camera.id].position.y === camera.defaultPosition[1] &&\r\n                        settingsEngine.camera.cameras[camera.id].position.z === camera.defaultPosition[2] &&\r\n                        settingsEngine.camera.cameras[camera.id].target.x === camera.defaultTarget[0] &&\r\n                        settingsEngine.camera.cameras[camera.id].target.y === camera.defaultTarget[1] &&\r\n                        settingsEngine.camera.cameras[camera.id].target.z === camera.defaultTarget[2])) {\r\n                        camera.defaultPosition = gl_matrix_1.vec3.clone(camera.position);\r\n                        camera.defaultTarget = gl_matrix_1.vec3.clone(camera.target);\r\n                    }\r\n                }\r\n                const controls = camera.controls;\r\n                settingsEngine.camera.cameras[camera.id] = {\r\n                    name: camera.name,\r\n                    autoAdjust: camera.autoAdjust,\r\n                    cameraMovementDuration: camera.cameraMovementDuration,\r\n                    enableCameraControls: camera.enableCameraControls,\r\n                    revertAtMouseUp: camera.revertAtMouseUp,\r\n                    revertAtMouseUpDuration: camera.revertAtMouseUpDuration,\r\n                    zoomExtentsFactor: camera.zoomExtentsFactor,\r\n                    position: { x: camera.defaultPosition[0], y: camera.defaultPosition[1], z: camera.defaultPosition[2] },\r\n                    target: { x: camera.defaultTarget[0], y: camera.defaultTarget[1], z: camera.defaultTarget[2] },\r\n                    type: camera.direction,\r\n                    sceneRotation: { x: camera.sceneRotation[0], y: camera.sceneRotation[1] },\r\n                    controls: {\r\n                        autoRotationSpeed: controls.autoRotationSpeed,\r\n                        damping: controls.damping,\r\n                        enableAutoRotation: controls.enableAutoRotation,\r\n                        enableKeyPan: controls.enableKeyPan,\r\n                        enablePan: controls.enablePan,\r\n                        enableRotation: controls.enableRotation,\r\n                        enableZoom: controls.enableZoom,\r\n                        input: controls.input,\r\n                        keyPanSpeed: controls.keyPanSpeed,\r\n                        movementSmoothness: controls.movementSmoothness,\r\n                        rotationSpeed: controls.rotationSpeed,\r\n                        panSpeed: controls.panSpeed,\r\n                        zoomSpeed: controls.zoomSpeed,\r\n                        restrictions: {\r\n                            position: {\r\n                                cube: {\r\n                                    min: { x: controls.cubePositionRestriction.min[0], y: controls.cubePositionRestriction.min[1], z: controls.cubePositionRestriction.min[2] },\r\n                                    max: { x: controls.cubePositionRestriction.max[0], y: controls.cubePositionRestriction.max[1], z: controls.cubePositionRestriction.max[2] },\r\n                                },\r\n                                sphere: {\r\n                                    center: { x: controls.spherePositionRestriction.center[0], y: controls.spherePositionRestriction.center[1], z: controls.spherePositionRestriction.center[2] },\r\n                                    radius: controls.spherePositionRestriction.radius,\r\n                                },\r\n                            },\r\n                            target: {\r\n                                cube: {\r\n                                    min: { x: controls.cubeTargetRestriction.min[0], y: controls.cubeTargetRestriction.min[1], z: controls.cubeTargetRestriction.min[2] },\r\n                                    max: { x: controls.cubeTargetRestriction.max[0], y: controls.cubeTargetRestriction.max[1], z: controls.cubeTargetRestriction.max[2] },\r\n                                },\r\n                                sphere: {\r\n                                    center: { x: controls.sphereTargetRestriction.center[0], y: controls.sphereTargetRestriction.center[1], z: controls.sphereTargetRestriction.center[2] },\r\n                                    radius: controls.sphereTargetRestriction.radius,\r\n                                },\r\n                            },\r\n                            rotation: controls.rotationRestriction,\r\n                            zoom: controls.zoomRestriction,\r\n                        },\r\n                        enableAzimuthRotation: controls.enableAzimuthRotation,\r\n                        enablePolarRotation: controls.enablePolarRotation,\r\n                        enableObjectControls: controls.enableObjectControls,\r\n                        enableTurntableControls: controls.enableTurntableControls,\r\n                        turntableCenter: { x: controls.turntableCenter[0], y: controls.turntableCenter[1], z: controls.turntableCenter[2] },\r\n                        objectControlsCenter: { x: controls.objectControlsCenter[0], y: controls.objectControlsCenter[1], z: controls.objectControlsCenter[2] },\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    }\r\n    // #endregion Public Methods (8)\r\n    // #region Private Methods (1)\r\n    searchForNewCameras() {\r\n        const getCameraData = (node) => {\r\n            for (let i = 0; i < node.data.length; i++)\r\n                if ((node.data[i] instanceof AbstractCamera_1.AbstractCamera) && !this._cameras[node.data[i].id]) {\r\n                    const camera = node.data[i];\r\n                    if (camera.viewportId === this._renderingEngine.id)\r\n                        this._cameras[camera.id] = camera;\r\n                }\r\n            for (let i = 0; i < node.children.length; i++)\r\n                getCameraData(node.children[i]);\r\n        };\r\n        getCameraData(this._tree.root);\r\n        if (this._update)\r\n            this._update();\r\n    }\r\n}\r\nexports.CameraEngine = CameraEngine;\r\n//# sourceMappingURL=CameraEngine.js.map","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar _AbstractCamera_active, _AbstractCamera_autoAdjust, _AbstractCamera_cameraMovementDuration, _AbstractCamera_defaultPosition, _AbstractCamera_defaultTarget, _AbstractCamera_domEventListenerToken, _AbstractCamera_enableCameraControls, _AbstractCamera_far, _AbstractCamera_name, _AbstractCamera_near, _AbstractCamera_node, _AbstractCamera_order, _AbstractCamera_revertAtMouseUp, _AbstractCamera_revertAtMouseUpDuration, _AbstractCamera_sceneRotation, _AbstractCamera_useNodeData, _AbstractCamera_zoomExtentsFactor;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AbstractCamera = void 0;\r\nconst viewer_shared_node_tree_1 = require(\"@shapediver/viewer.shared.node-tree\");\r\nconst viewer_shared_math_1 = require(\"@shapediver/viewer.shared.math\");\r\nconst gl_matrix_1 = require(\"gl-matrix\");\r\nconst viewer_shared_services_1 = require(\"@shapediver/viewer.shared.services\");\r\nclass AbstractCamera extends viewer_shared_node_tree_1.AbstractTreeNodeData {\r\n    // #endregion Properties (24)\r\n    // #region Constructors (1)\r\n    constructor(_id, _type, version, _isDefault = false) {\r\n        super(_id, version);\r\n        this._id = _id;\r\n        this._type = _type;\r\n        this._isDefault = _isDefault;\r\n        // #region Properties (24)\r\n        _AbstractCamera_active.set(this, false);\r\n        _AbstractCamera_autoAdjust.set(this, true);\r\n        _AbstractCamera_cameraMovementDuration.set(this, 800);\r\n        _AbstractCamera_defaultPosition.set(this, gl_matrix_1.vec3.create());\r\n        _AbstractCamera_defaultTarget.set(this, gl_matrix_1.vec3.create());\r\n        _AbstractCamera_domEventListenerToken.set(this, void 0);\r\n        _AbstractCamera_enableCameraControls.set(this, true);\r\n        _AbstractCamera_far.set(this, 1000);\r\n        _AbstractCamera_name.set(this, void 0);\r\n        _AbstractCamera_near.set(this, 1);\r\n        _AbstractCamera_node.set(this, void 0);\r\n        _AbstractCamera_order.set(this, void 0);\r\n        _AbstractCamera_revertAtMouseUp.set(this, false);\r\n        _AbstractCamera_revertAtMouseUpDuration.set(this, 800);\r\n        _AbstractCamera_sceneRotation.set(this, gl_matrix_1.vec2.create());\r\n        _AbstractCamera_useNodeData.set(this, false);\r\n        _AbstractCamera_zoomExtentsFactor.set(this, 1);\r\n        this._eventEngine = viewer_shared_services_1.EventEngine.instance;\r\n        this._stateEngine = viewer_shared_services_1.StateEngine.instance;\r\n        this._boundingBox = new viewer_shared_math_1.Box();\r\n        this._position = gl_matrix_1.vec3.create();\r\n        this._target = gl_matrix_1.vec3.create();\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Getters And Setters (43)\r\n    get active() {\r\n        return __classPrivateFieldGet(this, _AbstractCamera_active, \"f\");\r\n    }\r\n    set active(value) {\r\n        __classPrivateFieldSet(this, _AbstractCamera_active, value, \"f\");\r\n    }\r\n    get autoAdjust() {\r\n        return __classPrivateFieldGet(this, _AbstractCamera_autoAdjust, \"f\");\r\n    }\r\n    set autoAdjust(value) {\r\n        __classPrivateFieldSet(this, _AbstractCamera_autoAdjust, value, \"f\");\r\n    }\r\n    set boundingBox(value) {\r\n        this._boundingBox = value;\r\n    }\r\n    get cameraMovementDuration() {\r\n        return __classPrivateFieldGet(this, _AbstractCamera_cameraMovementDuration, \"f\");\r\n    }\r\n    set cameraMovementDuration(value) {\r\n        __classPrivateFieldSet(this, _AbstractCamera_cameraMovementDuration, value, \"f\");\r\n    }\r\n    get controls() {\r\n        return this._controls;\r\n    }\r\n    get defaultPosition() {\r\n        return __classPrivateFieldGet(this, _AbstractCamera_defaultPosition, \"f\");\r\n    }\r\n    set defaultPosition(value) {\r\n        __classPrivateFieldSet(this, _AbstractCamera_defaultPosition, value, \"f\");\r\n    }\r\n    get defaultTarget() {\r\n        return __classPrivateFieldGet(this, _AbstractCamera_defaultTarget, \"f\");\r\n    }\r\n    set defaultTarget(value) {\r\n        __classPrivateFieldSet(this, _AbstractCamera_defaultTarget, value, \"f\");\r\n    }\r\n    get domEventListenerToken() {\r\n        return __classPrivateFieldGet(this, _AbstractCamera_domEventListenerToken, \"f\");\r\n    }\r\n    set domEventListenerToken(value) {\r\n        __classPrivateFieldSet(this, _AbstractCamera_domEventListenerToken, value, \"f\");\r\n    }\r\n    get enableCameraControls() {\r\n        return __classPrivateFieldGet(this, _AbstractCamera_enableCameraControls, \"f\");\r\n    }\r\n    set enableCameraControls(value) {\r\n        __classPrivateFieldSet(this, _AbstractCamera_enableCameraControls, value, \"f\");\r\n    }\r\n    get far() {\r\n        return __classPrivateFieldGet(this, _AbstractCamera_far, \"f\");\r\n    }\r\n    set far(value) {\r\n        __classPrivateFieldSet(this, _AbstractCamera_far, value, \"f\");\r\n    }\r\n    get id() {\r\n        return this._id;\r\n    }\r\n    get isDefault() {\r\n        return this._isDefault;\r\n    }\r\n    get name() {\r\n        return __classPrivateFieldGet(this, _AbstractCamera_name, \"f\");\r\n    }\r\n    set name(value) {\r\n        __classPrivateFieldSet(this, _AbstractCamera_name, value, \"f\");\r\n    }\r\n    get near() {\r\n        return __classPrivateFieldGet(this, _AbstractCamera_near, \"f\");\r\n    }\r\n    set near(value) {\r\n        __classPrivateFieldSet(this, _AbstractCamera_near, value, \"f\");\r\n    }\r\n    get node() {\r\n        return __classPrivateFieldGet(this, _AbstractCamera_node, \"f\");\r\n    }\r\n    set node(value) {\r\n        __classPrivateFieldSet(this, _AbstractCamera_node, value, \"f\");\r\n    }\r\n    get order() {\r\n        return __classPrivateFieldGet(this, _AbstractCamera_order, \"f\");\r\n    }\r\n    set order(value) {\r\n        __classPrivateFieldSet(this, _AbstractCamera_order, value, \"f\");\r\n    }\r\n    get position() {\r\n        return this._position;\r\n    }\r\n    set position(value) {\r\n        this._position = value;\r\n        this._controls.position = value;\r\n    }\r\n    get revertAtMouseUp() {\r\n        return __classPrivateFieldGet(this, _AbstractCamera_revertAtMouseUp, \"f\");\r\n    }\r\n    set revertAtMouseUp(value) {\r\n        __classPrivateFieldSet(this, _AbstractCamera_revertAtMouseUp, value, \"f\");\r\n    }\r\n    get revertAtMouseUpDuration() {\r\n        return __classPrivateFieldGet(this, _AbstractCamera_revertAtMouseUpDuration, \"f\");\r\n    }\r\n    set revertAtMouseUpDuration(value) {\r\n        __classPrivateFieldSet(this, _AbstractCamera_revertAtMouseUpDuration, value, \"f\");\r\n    }\r\n    get sceneRotation() {\r\n        return __classPrivateFieldGet(this, _AbstractCamera_sceneRotation, \"f\");\r\n    }\r\n    set sceneRotation(value) {\r\n        __classPrivateFieldSet(this, _AbstractCamera_sceneRotation, value, \"f\");\r\n    }\r\n    get target() {\r\n        return this._target;\r\n    }\r\n    set target(value) {\r\n        this._target = value;\r\n        this._controls.target = value;\r\n    }\r\n    get type() {\r\n        return this._type;\r\n    }\r\n    get useNodeData() {\r\n        return __classPrivateFieldGet(this, _AbstractCamera_useNodeData, \"f\");\r\n    }\r\n    set useNodeData(value) {\r\n        __classPrivateFieldSet(this, _AbstractCamera_useNodeData, value, \"f\");\r\n    }\r\n    get viewportId() {\r\n        return this._viewportId;\r\n    }\r\n    get zoomExtentsFactor() {\r\n        return __classPrivateFieldGet(this, _AbstractCamera_zoomExtentsFactor, \"f\");\r\n    }\r\n    set zoomExtentsFactor(value) {\r\n        __classPrivateFieldSet(this, _AbstractCamera_zoomExtentsFactor, value, \"f\");\r\n    }\r\n    // #endregion Public Getters And Setters (43)\r\n    // #region Public Methods (5)\r\n    animate(path, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (path.length === 0)\r\n                return Promise.resolve(false);\r\n            if (!options)\r\n                options = {};\r\n            options.duration = options.duration >= 0 ? options.duration : this.cameraMovementDuration;\r\n            const res = yield this._controls.animate(path, options);\r\n            if (res) {\r\n                this._position = this._controls.position;\r\n                this._target = this._controls.target;\r\n            }\r\n            return res;\r\n        });\r\n    }\r\n    reset(options) {\r\n        if ((this.defaultPosition[0] === 0 && this.defaultPosition[1] === 0 && this.defaultPosition[2] === 0) && (this.defaultTarget[0] === 0 && this.defaultTarget[1] === 0 && this.defaultTarget[2] === 0)) {\r\n            return this.zoomTo(undefined, options);\r\n        }\r\n        else {\r\n            return this.set(gl_matrix_1.vec3.clone(this.defaultPosition), gl_matrix_1.vec3.clone(this.defaultTarget), options);\r\n        }\r\n    }\r\n    set(position, target, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!options)\r\n                options = {};\r\n            options.duration = options.duration >= 0 ? options.duration : this.cameraMovementDuration;\r\n            const res = yield this._controls.animate([\r\n                { position: gl_matrix_1.vec3.clone(this.position), target: gl_matrix_1.vec3.clone(this.target) },\r\n                { position, target }\r\n            ], options);\r\n            if (res) {\r\n                this._position = this._controls.position;\r\n                this._target = this._controls.target;\r\n            }\r\n            return res;\r\n        });\r\n    }\r\n    update(time) {\r\n        if (this.useNodeData && this.node && this._viewportId) {\r\n            return true;\r\n        }\r\n        else {\r\n            const { position, target, sceneRotation } = this._controls.update(time);\r\n            let changed = true;\r\n            if (gl_matrix_1.vec3.equals(position, this.position) && gl_matrix_1.vec3.equals(target, this.target))\r\n                changed = false;\r\n            this.position = gl_matrix_1.vec3.clone(position);\r\n            this.target = gl_matrix_1.vec3.clone(target);\r\n            this.sceneRotation = gl_matrix_1.vec2.clone(sceneRotation);\r\n            return changed;\r\n        }\r\n    }\r\n    zoomTo(zoomTarget, options) {\r\n        const { position, target } = this.calculateZoomTo(zoomTarget);\r\n        return this.set(position, target, options);\r\n    }\r\n    // #endregion Public Abstract Methods (5)\r\n    // #region Protected Methods (1)\r\n    assignViewerInternal(viewportId) {\r\n        this._viewportId = viewportId;\r\n        this._eventEngine.addListener(viewer_shared_services_1.EVENTTYPE.SESSION.SESSION_CUSTOMIZED, () => __awaiter(this, void 0, void 0, function* () {\r\n            if (__classPrivateFieldGet(this, _AbstractCamera_autoAdjust, \"f\") === true) {\r\n                const innerListenerToken = this._eventEngine.addListener(viewer_shared_services_1.EVENTTYPE.VIEWPORT.VIEWPORT_UPDATED, () => __awaiter(this, void 0, void 0, function* () {\r\n                    this.zoomTo();\r\n                    this._eventEngine.removeListener(innerListenerToken);\r\n                }));\r\n            }\r\n        }));\r\n    }\r\n}\r\nexports.AbstractCamera = AbstractCamera;\r\n_AbstractCamera_active = new WeakMap(), _AbstractCamera_autoAdjust = new WeakMap(), _AbstractCamera_cameraMovementDuration = new WeakMap(), _AbstractCamera_defaultPosition = new WeakMap(), _AbstractCamera_defaultTarget = new WeakMap(), _AbstractCamera_domEventListenerToken = new WeakMap(), _AbstractCamera_enableCameraControls = new WeakMap(), _AbstractCamera_far = new WeakMap(), _AbstractCamera_name = new WeakMap(), _AbstractCamera_near = new WeakMap(), _AbstractCamera_node = new WeakMap(), _AbstractCamera_order = new WeakMap(), _AbstractCamera_revertAtMouseUp = new WeakMap(), _AbstractCamera_revertAtMouseUpDuration = new WeakMap(), _AbstractCamera_sceneRotation = new WeakMap(), _AbstractCamera_useNodeData = new WeakMap(), _AbstractCamera_zoomExtentsFactor = new WeakMap();\r\n//# sourceMappingURL=AbstractCamera.js.map","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar _OrthographicCamera_converter, _OrthographicCamera_logger, _OrthographicCamera_tree, _OrthographicCamera_bottom, _OrthographicCamera_direction, _OrthographicCamera_domEventEngine, _OrthographicCamera_left, _OrthographicCamera_right, _OrthographicCamera_top, _OrthographicCamera_up;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.OrthographicCamera = void 0;\r\nconst AbstractCamera_1 = require(\"./AbstractCamera\");\r\nconst ICameraEngine_1 = require(\"../../interfaces/ICameraEngine\");\r\nconst IOrthographicCamera_1 = require(\"../../interfaces/camera/IOrthographicCamera\");\r\nconst viewer_shared_node_tree_1 = require(\"@shapediver/viewer.shared.node-tree\");\r\nconst gl_matrix_1 = require(\"gl-matrix\");\r\nconst OrthographicCameraControls_1 = require(\"../controls/OrthographicCameraControls\");\r\nconst viewer_shared_services_1 = require(\"@shapediver/viewer.shared.services\");\r\nclass OrthographicCamera extends AbstractCamera_1.AbstractCamera {\r\n    // #endregion Properties (11)\r\n    // #region Constructors (1)\r\n    constructor(id, version, isDefault = false) {\r\n        super(id, ICameraEngine_1.CAMERA_TYPE.ORTHOGRAPHIC, version, isDefault);\r\n        // #region Properties (11)\r\n        _OrthographicCamera_converter.set(this, viewer_shared_services_1.Converter.instance);\r\n        _OrthographicCamera_logger.set(this, viewer_shared_services_1.Logger.instance);\r\n        _OrthographicCamera_tree.set(this, viewer_shared_node_tree_1.Tree.instance);\r\n        _OrthographicCamera_bottom.set(this, -100);\r\n        _OrthographicCamera_direction.set(this, IOrthographicCamera_1.ORTHOGRAPHIC_CAMERA_DIRECTION.CUSTOM);\r\n        _OrthographicCamera_domEventEngine.set(this, void 0);\r\n        _OrthographicCamera_left.set(this, -100);\r\n        _OrthographicCamera_right.set(this, 100);\r\n        _OrthographicCamera_top.set(this, 100);\r\n        _OrthographicCamera_up.set(this, gl_matrix_1.vec3.fromValues(0, 0, 1));\r\n        this._controls = new OrthographicCameraControls_1.OrthographicCameraControls(this, true);\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Getters And Setters (14)\r\n    get bottom() {\r\n        return __classPrivateFieldGet(this, _OrthographicCamera_bottom, \"f\");\r\n    }\r\n    set bottom(value) {\r\n        __classPrivateFieldSet(this, _OrthographicCamera_bottom, value, \"f\");\r\n    }\r\n    get controls() {\r\n        return this._controls;\r\n    }\r\n    set controls(value) {\r\n        this._controls = value;\r\n    }\r\n    get direction() {\r\n        return __classPrivateFieldGet(this, _OrthographicCamera_direction, \"f\");\r\n    }\r\n    set direction(value) {\r\n        const changedDirection = __classPrivateFieldGet(this, _OrthographicCamera_direction, \"f\") !== value;\r\n        __classPrivateFieldSet(this, _OrthographicCamera_direction, value, \"f\");\r\n        switch (__classPrivateFieldGet(this, _OrthographicCamera_direction, \"f\")) {\r\n            case IOrthographicCamera_1.ORTHOGRAPHIC_CAMERA_DIRECTION.TOP:\r\n            case IOrthographicCamera_1.ORTHOGRAPHIC_CAMERA_DIRECTION.BOTTOM:\r\n                this.up = gl_matrix_1.vec3.fromValues(0, 1, 0);\r\n                break;\r\n            case IOrthographicCamera_1.ORTHOGRAPHIC_CAMERA_DIRECTION.RIGHT:\r\n            case IOrthographicCamera_1.ORTHOGRAPHIC_CAMERA_DIRECTION.LEFT:\r\n                this.up = gl_matrix_1.vec3.fromValues(0, 0, 1);\r\n                break;\r\n            case IOrthographicCamera_1.ORTHOGRAPHIC_CAMERA_DIRECTION.BACK:\r\n            case IOrthographicCamera_1.ORTHOGRAPHIC_CAMERA_DIRECTION.FRONT:\r\n                this.up = gl_matrix_1.vec3.fromValues(0, 0, 1);\r\n                break;\r\n            default:\r\n                this.up = gl_matrix_1.vec3.fromValues(0, 0, 1);\r\n        }\r\n        if (changedDirection) {\r\n            const { position, target } = this.calculateZoomTo(undefined);\r\n            this.defaultPosition = gl_matrix_1.vec3.clone(position);\r\n            this.defaultTarget = gl_matrix_1.vec3.clone(target);\r\n            this.position = gl_matrix_1.vec3.clone(position);\r\n            this.target = gl_matrix_1.vec3.clone(target);\r\n        }\r\n    }\r\n    get left() {\r\n        return __classPrivateFieldGet(this, _OrthographicCamera_left, \"f\");\r\n    }\r\n    set left(value) {\r\n        __classPrivateFieldSet(this, _OrthographicCamera_left, value, \"f\");\r\n    }\r\n    get right() {\r\n        return __classPrivateFieldGet(this, _OrthographicCamera_right, \"f\");\r\n    }\r\n    set right(value) {\r\n        __classPrivateFieldSet(this, _OrthographicCamera_right, value, \"f\");\r\n    }\r\n    get top() {\r\n        return __classPrivateFieldGet(this, _OrthographicCamera_top, \"f\");\r\n    }\r\n    set top(value) {\r\n        __classPrivateFieldSet(this, _OrthographicCamera_top, value, \"f\");\r\n    }\r\n    get up() {\r\n        return __classPrivateFieldGet(this, _OrthographicCamera_up, \"f\");\r\n    }\r\n    set up(value) {\r\n        __classPrivateFieldSet(this, _OrthographicCamera_up, value, \"f\");\r\n    }\r\n    // #endregion Public Getters And Setters (14)\r\n    // #region Public Methods (6)\r\n    applySettings(settingsEngine) {\r\n        var _a;\r\n        const cameraSetting = settingsEngine.camera.cameras[this.id];\r\n        if (cameraSetting) {\r\n            this.name = cameraSetting.name;\r\n            this.autoAdjust = cameraSetting.autoAdjust;\r\n            this.cameraMovementDuration = cameraSetting.cameraMovementDuration;\r\n            this.enableCameraControls = cameraSetting.enableCameraControls;\r\n            this.revertAtMouseUp = cameraSetting.revertAtMouseUp;\r\n            this.revertAtMouseUpDuration = cameraSetting.revertAtMouseUpDuration;\r\n            this.sceneRotation = gl_matrix_1.vec2.fromValues(cameraSetting.sceneRotation.x, cameraSetting.sceneRotation.y);\r\n            this.zoomExtentsFactor = cameraSetting.zoomExtentsFactor;\r\n            const position = __classPrivateFieldGet(this, _OrthographicCamera_converter, \"f\").toVec3(cameraSetting.position);\r\n            const target = __classPrivateFieldGet(this, _OrthographicCamera_converter, \"f\").toVec3(cameraSetting.target);\r\n            this.defaultPosition = gl_matrix_1.vec3.clone(position);\r\n            this.defaultTarget = gl_matrix_1.vec3.clone(target);\r\n            this.position = position;\r\n            this.target = target;\r\n        }\r\n        if (this.position[0] === this.target[0] && this.position[1] === this.target[1] && this.position[2] === this.target[2]) {\r\n            if (this._viewportId) {\r\n                (_a = this._stateEngine.viewportEngines[this._viewportId]) === null || _a === void 0 ? void 0 : _a.boundingBoxCreated.then(() => __awaiter(this, void 0, void 0, function* () {\r\n                    yield this.zoomTo(undefined, { duration: 0 });\r\n                    this.defaultPosition = gl_matrix_1.vec3.clone(this._controls.position);\r\n                    this.defaultTarget = gl_matrix_1.vec3.clone(this._controls.target);\r\n                }));\r\n            }\r\n        }\r\n        this._controls.applySettings(settingsEngine);\r\n    }\r\n    assignViewer(renderingEngine) {\r\n        var _a;\r\n        if (renderingEngine.closed)\r\n            throw new viewer_shared_services_1.ShapeDiverViewerCameraError(`OrthographicCamera(${this.id}).assignViewer: Viewer with id ${renderingEngine.id} not found.`);\r\n        this.assignViewerInternal(renderingEngine.id);\r\n        this._controls.assignViewer(renderingEngine.id, renderingEngine.canvas);\r\n        if (this.domEventListenerToken && __classPrivateFieldGet(this, _OrthographicCamera_domEventEngine, \"f\"))\r\n            __classPrivateFieldGet(this, _OrthographicCamera_domEventEngine, \"f\").removeDomEventListener(this.domEventListenerToken);\r\n        __classPrivateFieldSet(this, _OrthographicCamera_domEventEngine, renderingEngine.domEventEngine, \"f\");\r\n        this.domEventListenerToken = __classPrivateFieldGet(this, _OrthographicCamera_domEventEngine, \"f\").addDomEventListener(this._controls.cameraControlsEventDistribution);\r\n        this.boundingBox = __classPrivateFieldGet(this, _OrthographicCamera_tree, \"f\").root.boundingBox.clone();\r\n        (_a = this._stateEngine.viewportEngines[renderingEngine.id]) === null || _a === void 0 ? void 0 : _a.boundingBoxCreated.then(() => __awaiter(this, void 0, void 0, function* () {\r\n            if (this.position[0] === this.target[0] && this.position[1] === this.target[1] && this.position[2] === this.target[2])\r\n                yield this.zoomTo(undefined, { duration: 0 });\r\n        }));\r\n    }\r\n    calculateZoomTo(zoomTarget, startingPosition = this.position, startingTarget = this.target) {\r\n        let box;\r\n        // Part 1 - calculate the bounding box that we should zoom to\r\n        if (!zoomTarget) {\r\n            // complete scene\r\n            box = this._boundingBox.clone();\r\n        }\r\n        else {\r\n            // specified Box\r\n            box = zoomTarget.clone();\r\n        }\r\n        if (box.isEmpty())\r\n            return { position: gl_matrix_1.vec3.create(), target: gl_matrix_1.vec3.create() };\r\n        const target = gl_matrix_1.vec3.fromValues((box.max[0] + box.min[0]) / 2, (box.max[1] + box.min[1]) / 2, (box.max[2] + box.min[2]) / 2);\r\n        if (startingPosition[0] === startingTarget[0] && startingPosition[1] === startingTarget[1] && startingPosition[2] === startingTarget[2])\r\n            startingPosition = gl_matrix_1.vec3.fromValues(target[0], target[1] - 7.5, target[2] + 5);\r\n        const factor = 2 * box.boundingSphere.radius * this.zoomExtentsFactor;\r\n        switch (__classPrivateFieldGet(this, _OrthographicCamera_direction, \"f\")) {\r\n            case IOrthographicCamera_1.ORTHOGRAPHIC_CAMERA_DIRECTION.TOP:\r\n                return {\r\n                    position: gl_matrix_1.vec3.fromValues(target[0], target[1], target[2] + factor),\r\n                    target: gl_matrix_1.vec3.clone(target)\r\n                };\r\n            case IOrthographicCamera_1.ORTHOGRAPHIC_CAMERA_DIRECTION.BOTTOM:\r\n                return {\r\n                    position: gl_matrix_1.vec3.fromValues(target[0], target[1], target[2] - factor),\r\n                    target: gl_matrix_1.vec3.clone(target)\r\n                };\r\n            case IOrthographicCamera_1.ORTHOGRAPHIC_CAMERA_DIRECTION.RIGHT:\r\n                return {\r\n                    position: gl_matrix_1.vec3.fromValues(target[0] + factor, target[1], target[2]),\r\n                    target: gl_matrix_1.vec3.clone(target)\r\n                };\r\n            case IOrthographicCamera_1.ORTHOGRAPHIC_CAMERA_DIRECTION.LEFT:\r\n                return {\r\n                    position: gl_matrix_1.vec3.fromValues(target[0] - factor, target[1], target[2]),\r\n                    target: gl_matrix_1.vec3.clone(target)\r\n                };\r\n            case IOrthographicCamera_1.ORTHOGRAPHIC_CAMERA_DIRECTION.BACK:\r\n                return {\r\n                    position: gl_matrix_1.vec3.fromValues(target[0], target[1] + factor, target[2]),\r\n                    target: gl_matrix_1.vec3.clone(target)\r\n                };\r\n            case IOrthographicCamera_1.ORTHOGRAPHIC_CAMERA_DIRECTION.FRONT:\r\n                return {\r\n                    position: gl_matrix_1.vec3.fromValues(target[0], target[1] - factor, target[2]),\r\n                    target: gl_matrix_1.vec3.clone(target)\r\n                };\r\n            default:\r\n                {\r\n                    // get the direction from the starting position to the starting target\r\n                    const direction = gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), startingPosition, target);\r\n                    // normalize the direction\r\n                    gl_matrix_1.vec3.normalize(direction, direction);\r\n                    // get the new position\r\n                    return {\r\n                        position: gl_matrix_1.vec3.add(gl_matrix_1.vec3.create(), target, gl_matrix_1.vec3.scale(gl_matrix_1.vec3.create(), direction, factor)),\r\n                        target: gl_matrix_1.vec3.clone(target)\r\n                    };\r\n                }\r\n        }\r\n    }\r\n    clone() {\r\n        return new OrthographicCamera(this.id, this.version);\r\n    }\r\n    project(pos) {\r\n        const m = gl_matrix_1.mat4.targetTo(gl_matrix_1.mat4.create(), this.position, this.target, this.up);\r\n        const p = gl_matrix_1.mat4.ortho(gl_matrix_1.mat4.create(), this.left, this.right, this.bottom, this.top, this.near, this.far);\r\n        let inverse = gl_matrix_1.mat4.invert(gl_matrix_1.mat4.create(), m);\r\n        if (!inverse)\r\n            inverse = gl_matrix_1.mat4.create();\r\n        gl_matrix_1.vec3.transformMat4(pos, pos, inverse);\r\n        gl_matrix_1.vec3.transformMat4(pos, pos, p);\r\n        return gl_matrix_1.vec2.fromValues(pos[0], pos[1]);\r\n    }\r\n    unproject(pos) {\r\n        const m = gl_matrix_1.mat4.targetTo(gl_matrix_1.mat4.create(), this.position, this.target, this.up);\r\n        const p = gl_matrix_1.mat4.ortho(gl_matrix_1.mat4.create(), this.left, this.right, this.bottom, this.top, this.near, this.far);\r\n        let inverse = gl_matrix_1.mat4.invert(gl_matrix_1.mat4.create(), p);\r\n        if (!inverse)\r\n            inverse = gl_matrix_1.mat4.create();\r\n        gl_matrix_1.vec3.transformMat4(pos, pos, inverse);\r\n        gl_matrix_1.vec3.transformMat4(pos, pos, m);\r\n        return gl_matrix_1.vec3.clone(pos);\r\n    }\r\n}\r\nexports.OrthographicCamera = OrthographicCamera;\r\n_OrthographicCamera_converter = new WeakMap(), _OrthographicCamera_logger = new WeakMap(), _OrthographicCamera_tree = new WeakMap(), _OrthographicCamera_bottom = new WeakMap(), _OrthographicCamera_direction = new WeakMap(), _OrthographicCamera_domEventEngine = new WeakMap(), _OrthographicCamera_left = new WeakMap(), _OrthographicCamera_right = new WeakMap(), _OrthographicCamera_top = new WeakMap(), _OrthographicCamera_up = new WeakMap();\r\n//# sourceMappingURL=OrthographicCamera.js.map","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar _PerspectiveCamera_converter, _PerspectiveCamera_tree, _PerspectiveCamera_aspect, _PerspectiveCamera_domEventEngine, _PerspectiveCamera_fov;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PerspectiveCamera = void 0;\r\nconst AbstractCamera_1 = require(\"./AbstractCamera\");\r\nconst viewer_shared_math_1 = require(\"@shapediver/viewer.shared.math\");\r\nconst ICameraEngine_1 = require(\"../../interfaces/ICameraEngine\");\r\nconst viewer_shared_node_tree_1 = require(\"@shapediver/viewer.shared.node-tree\");\r\nconst gl_matrix_1 = require(\"gl-matrix\");\r\nconst PerspectiveCameraControls_1 = require(\"../controls/PerspectiveCameraControls\");\r\nconst viewer_shared_services_1 = require(\"@shapediver/viewer.shared.services\");\r\nclass PerspectiveCamera extends AbstractCamera_1.AbstractCamera {\r\n    // #endregion Properties (6)\r\n    // #region Constructors (1)\r\n    constructor(id, version, initialAspect, isDefault = false) {\r\n        super(id, ICameraEngine_1.CAMERA_TYPE.PERSPECTIVE, version, isDefault);\r\n        // #region Properties (6)\r\n        _PerspectiveCamera_converter.set(this, viewer_shared_services_1.Converter.instance);\r\n        _PerspectiveCamera_tree.set(this, viewer_shared_node_tree_1.Tree.instance);\r\n        _PerspectiveCamera_aspect.set(this, void 0);\r\n        _PerspectiveCamera_domEventEngine.set(this, void 0);\r\n        _PerspectiveCamera_fov.set(this, 60);\r\n        __classPrivateFieldSet(this, _PerspectiveCamera_aspect, initialAspect, \"f\");\r\n        this._controls = new PerspectiveCameraControls_1.PerspectiveCameraControls(this, true);\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Getters And Setters (6)\r\n    get aspect() {\r\n        return __classPrivateFieldGet(this, _PerspectiveCamera_aspect, \"f\");\r\n    }\r\n    set aspect(value) {\r\n        __classPrivateFieldSet(this, _PerspectiveCamera_aspect, value, \"f\");\r\n    }\r\n    get controls() {\r\n        return this._controls;\r\n    }\r\n    set controls(value) {\r\n        this._controls = value;\r\n    }\r\n    get fov() {\r\n        return __classPrivateFieldGet(this, _PerspectiveCamera_fov, \"f\");\r\n    }\r\n    set fov(value) {\r\n        __classPrivateFieldSet(this, _PerspectiveCamera_fov, value, \"f\");\r\n    }\r\n    // #endregion Public Getters And Setters (6)\r\n    // #region Public Methods (6)\r\n    applySettings(settingsEngine) {\r\n        var _a;\r\n        const cameraSetting = settingsEngine.camera.cameras[this.id];\r\n        if (cameraSetting) {\r\n            this.name = cameraSetting.name;\r\n            this.autoAdjust = cameraSetting.autoAdjust;\r\n            this.cameraMovementDuration = cameraSetting.cameraMovementDuration;\r\n            this.enableCameraControls = cameraSetting.enableCameraControls;\r\n            this.revertAtMouseUp = cameraSetting.revertAtMouseUp;\r\n            this.revertAtMouseUpDuration = cameraSetting.revertAtMouseUpDuration;\r\n            this.sceneRotation = gl_matrix_1.vec2.fromValues(cameraSetting.sceneRotation.x, cameraSetting.sceneRotation.y);\r\n            this.zoomExtentsFactor = cameraSetting.zoomExtentsFactor;\r\n            const position = __classPrivateFieldGet(this, _PerspectiveCamera_converter, \"f\").toVec3(cameraSetting.position);\r\n            const target = __classPrivateFieldGet(this, _PerspectiveCamera_converter, \"f\").toVec3(cameraSetting.target);\r\n            this.defaultPosition = gl_matrix_1.vec3.clone(position);\r\n            this.defaultTarget = gl_matrix_1.vec3.clone(target);\r\n            this.position = position;\r\n            this.target = target;\r\n            this.fov = cameraSetting.fov;\r\n        }\r\n        if (this.position[0] === this.target[0] && this.position[1] === this.target[1] && this.position[2] === this.target[2]) {\r\n            if (this._viewportId) {\r\n                (_a = this._stateEngine.viewportEngines[this._viewportId]) === null || _a === void 0 ? void 0 : _a.boundingBoxCreated.then(() => __awaiter(this, void 0, void 0, function* () {\r\n                    yield this.zoomTo(undefined, { duration: 0 });\r\n                    this.defaultPosition = gl_matrix_1.vec3.clone(this._controls.position);\r\n                    this.defaultTarget = gl_matrix_1.vec3.clone(this._controls.target);\r\n                }));\r\n            }\r\n        }\r\n        this._controls.applySettings(settingsEngine);\r\n    }\r\n    assignViewer(renderingEngine) {\r\n        var _a;\r\n        if (renderingEngine.closed)\r\n            throw new viewer_shared_services_1.ShapeDiverViewerCameraError(`OrthographicCamera(${this.id}).assignViewer: Viewer with id ${renderingEngine.id} not found.`);\r\n        this.assignViewerInternal(renderingEngine.id);\r\n        this._controls.assignViewer(renderingEngine.id, renderingEngine.canvas);\r\n        if (this.domEventListenerToken && __classPrivateFieldGet(this, _PerspectiveCamera_domEventEngine, \"f\"))\r\n            __classPrivateFieldGet(this, _PerspectiveCamera_domEventEngine, \"f\").removeDomEventListener(this.domEventListenerToken);\r\n        __classPrivateFieldSet(this, _PerspectiveCamera_domEventEngine, renderingEngine.domEventEngine, \"f\");\r\n        this.domEventListenerToken = __classPrivateFieldGet(this, _PerspectiveCamera_domEventEngine, \"f\").addDomEventListener(this._controls.cameraControlsEventDistribution);\r\n        this.boundingBox = __classPrivateFieldGet(this, _PerspectiveCamera_tree, \"f\").root.boundingBox.clone();\r\n        (_a = this._stateEngine.viewportEngines[renderingEngine.id]) === null || _a === void 0 ? void 0 : _a.boundingBoxCreated.then(() => __awaiter(this, void 0, void 0, function* () {\r\n            if (this.position[0] === this.target[0] && this.position[1] === this.target[1] && this.position[2] === this.target[2])\r\n                yield this.zoomTo(undefined, { duration: 0 });\r\n        }));\r\n    }\r\n    calculateZoomTo(zoomTarget, startingPosition = this.position, startingTarget = this.target) {\r\n        let box;\r\n        // Part 1 - calculate the bounding box that we should zoom to\r\n        if (!zoomTarget) {\r\n            // complete scene\r\n            box = this._boundingBox.clone();\r\n        }\r\n        else {\r\n            // specified Box\r\n            box = zoomTarget.clone();\r\n        }\r\n        if (box.isEmpty())\r\n            return { position: gl_matrix_1.vec3.create(), target: gl_matrix_1.vec3.create() };\r\n        const samePosition = startingPosition[0] === startingTarget[0] && startingPosition[1] === startingTarget[1] && startingPosition[2] === startingTarget[2];\r\n        const target = gl_matrix_1.vec3.fromValues((box.max[0] + box.min[0]) / 2, (box.max[1] + box.min[1]) / 2, (box.max[2] + box.min[2]) / 2);\r\n        // if the camera position and the target are the same, we set a corner position\r\n        if (startingPosition[0] === startingTarget[0] && startingPosition[1] === startingTarget[1] && startingPosition[2] === startingTarget[2])\r\n            startingPosition = gl_matrix_1.vec3.fromValues(target[0], target[1] - 7.5, target[2] + 5);\r\n        // extend box by the factor\r\n        const boxDir = gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), box.max, target);\r\n        gl_matrix_1.vec3.multiply(boxDir, boxDir, samePosition ? gl_matrix_1.vec3.fromValues(2, 2, 2) : gl_matrix_1.vec3.fromValues(this.zoomExtentsFactor, this.zoomExtentsFactor, this.zoomExtentsFactor));\r\n        box = new viewer_shared_math_1.Box(gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), target, boxDir), gl_matrix_1.vec3.add(gl_matrix_1.vec3.create(), target, boxDir));\r\n        const direction = gl_matrix_1.vec3.normalize(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), target, startingPosition));\r\n        const cross = gl_matrix_1.vec3.normalize(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.cross(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.fromValues(0, 0, 1), direction));\r\n        const up = gl_matrix_1.vec3.normalize(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.cross(gl_matrix_1.vec3.create(), cross, direction));\r\n        let position = gl_matrix_1.vec3.add(gl_matrix_1.vec3.create(), target, gl_matrix_1.vec3.multiply(gl_matrix_1.vec3.create(), direction, gl_matrix_1.vec3.fromValues(-0.00000001, -0.00000001, -0.00000001)));\r\n        const points = [];\r\n        points.push(gl_matrix_1.vec3.fromValues(box.min[0], box.min[1], box.min[2]));\r\n        points.push(gl_matrix_1.vec3.fromValues(box.min[0], box.min[1], box.max[2]));\r\n        points.push(gl_matrix_1.vec3.fromValues(box.min[0], box.max[1], box.min[2]));\r\n        points.push(gl_matrix_1.vec3.fromValues(box.min[0], box.max[1], box.max[2]));\r\n        points.push(gl_matrix_1.vec3.fromValues(box.max[0], box.min[1], box.min[2]));\r\n        points.push(gl_matrix_1.vec3.fromValues(box.max[0], box.min[1], box.max[2]));\r\n        points.push(gl_matrix_1.vec3.fromValues(box.max[0], box.max[1], box.min[2]));\r\n        points.push(gl_matrix_1.vec3.fromValues(box.max[0], box.max[1], box.max[2]));\r\n        const fovDown = gl_matrix_1.vec3.normalize(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.transformQuat(gl_matrix_1.vec3.create(), direction, gl_matrix_1.quat.setAxisAngle(gl_matrix_1.quat.create(), cross, (this.fov / 2) * (Math.PI / 180))));\r\n        const fovUp = gl_matrix_1.vec3.normalize(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.transformQuat(gl_matrix_1.vec3.create(), direction, gl_matrix_1.quat.setAxisAngle(gl_matrix_1.quat.create(), cross, -(this.fov / 2) * (Math.PI / 180))));\r\n        const aspect = samePosition ? 1.5 : this.aspect || 1.5;\r\n        const hFoV = 2 * Math.atan(Math.tan(this.fov * Math.PI / 180 / 2) * aspect);\r\n        const fovRight = gl_matrix_1.vec3.normalize(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.transformQuat(gl_matrix_1.vec3.create(), direction, gl_matrix_1.quat.setAxisAngle(gl_matrix_1.quat.create(), up, hFoV / 2)));\r\n        const fovLeft = gl_matrix_1.vec3.normalize(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.transformQuat(gl_matrix_1.vec3.create(), direction, gl_matrix_1.quat.setAxisAngle(gl_matrix_1.quat.create(), up, -hFoV / 2)));\r\n        const planeCross = new viewer_shared_math_1.Plane(gl_matrix_1.vec3.clone(cross), 0);\r\n        planeCross.setFromNormalAndCoplanarPoint(gl_matrix_1.vec3.clone(cross), gl_matrix_1.vec3.clone(target));\r\n        const planeUp = new viewer_shared_math_1.Plane(gl_matrix_1.vec3.fromValues(0, 0, 1), 0);\r\n        planeUp.setFromNormalAndCoplanarPoint(gl_matrix_1.vec3.clone(up), gl_matrix_1.vec3.clone(target));\r\n        let distanceCamera = 0.0;\r\n        for (let i = 0; i < points.length; i++) {\r\n            let projected = planeCross.clampPoint(points[i]);\r\n            let toP = gl_matrix_1.vec3.normalize(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), projected, position));\r\n            if (gl_matrix_1.vec3.dot(direction, fovDown) > gl_matrix_1.vec3.dot(direction, toP)) {\r\n                const currentDir = gl_matrix_1.vec3.multiply(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.dot(fovDown, toP) > gl_matrix_1.vec3.dot(fovUp, toP) ? fovDown : fovUp, gl_matrix_1.vec3.fromValues(-1, -1, -1));\r\n                const distance = planeUp.intersect(projected, currentDir);\r\n                if (distance) {\r\n                    const cameraPoint = gl_matrix_1.vec3.add(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.multiply(gl_matrix_1.vec3.create(), currentDir, gl_matrix_1.vec3.fromValues(distance, distance, distance)), projected);\r\n                    distanceCamera = Math.max(distanceCamera, gl_matrix_1.vec3.distance(target, cameraPoint));\r\n                }\r\n            }\r\n            projected = planeUp.clampPoint(points[i]);\r\n            toP = gl_matrix_1.vec3.normalize(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), projected, position));\r\n            if (gl_matrix_1.vec3.dot(direction, fovRight) > gl_matrix_1.vec3.dot(direction, toP)) {\r\n                const currentDir = gl_matrix_1.vec3.multiply(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.dot(fovRight, toP) > gl_matrix_1.vec3.dot(fovLeft, toP) ? fovRight : fovLeft, gl_matrix_1.vec3.fromValues(-1, -1, -1));\r\n                const distance = planeCross.intersect(projected, currentDir);\r\n                if (distance) {\r\n                    const cameraPoint = gl_matrix_1.vec3.add(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.multiply(gl_matrix_1.vec3.create(), currentDir, gl_matrix_1.vec3.fromValues(distance, distance, distance)), projected);\r\n                    distanceCamera = Math.max(distanceCamera, gl_matrix_1.vec3.distance(target, cameraPoint));\r\n                }\r\n            }\r\n        }\r\n        position = gl_matrix_1.vec3.add(gl_matrix_1.vec3.create(), target, gl_matrix_1.vec3.multiply(gl_matrix_1.vec3.create(), direction, gl_matrix_1.vec3.fromValues(-distanceCamera, -distanceCamera, -distanceCamera)));\r\n        return {\r\n            position, target\r\n        };\r\n    }\r\n    clone() {\r\n        return new PerspectiveCamera(this.id, this.version, this.aspect);\r\n    }\r\n    project(pos, position = this.position, target = this.target) {\r\n        const m = gl_matrix_1.mat4.targetTo(gl_matrix_1.mat4.create(), position, target, gl_matrix_1.vec3.fromValues(0, 0, 1));\r\n        const aspect = this.aspect || 1.5;\r\n        const p = gl_matrix_1.mat4.perspective(gl_matrix_1.mat4.create(), this.fov / (180 / Math.PI), aspect, this.near, this.far);\r\n        let inverse = gl_matrix_1.mat4.invert(gl_matrix_1.mat4.create(), m);\r\n        if (!inverse)\r\n            inverse = gl_matrix_1.mat4.create();\r\n        gl_matrix_1.vec3.transformMat4(pos, pos, inverse);\r\n        gl_matrix_1.vec3.transformMat4(pos, pos, p);\r\n        return gl_matrix_1.vec2.fromValues(pos[0], pos[1]);\r\n    }\r\n    unproject(pos, position = this.position, target = this.target) {\r\n        const m = gl_matrix_1.mat4.targetTo(gl_matrix_1.mat4.create(), position, target, gl_matrix_1.vec3.fromValues(0, 0, 1));\r\n        const aspect = this.aspect || 1.5;\r\n        const p = gl_matrix_1.mat4.perspective(gl_matrix_1.mat4.create(), this.fov / (180 / Math.PI), aspect, this.near, this.far);\r\n        let inverse = gl_matrix_1.mat4.invert(gl_matrix_1.mat4.create(), p);\r\n        if (!inverse)\r\n            inverse = gl_matrix_1.mat4.create();\r\n        gl_matrix_1.vec3.transformMat4(pos, pos, inverse);\r\n        gl_matrix_1.vec3.transformMat4(pos, pos, m);\r\n        return gl_matrix_1.vec3.clone(pos);\r\n    }\r\n}\r\nexports.PerspectiveCamera = PerspectiveCamera;\r\n_PerspectiveCamera_converter = new WeakMap(), _PerspectiveCamera_tree = new WeakMap(), _PerspectiveCamera_aspect = new WeakMap(), _PerspectiveCamera_domEventEngine = new WeakMap(), _PerspectiveCamera_fov = new WeakMap();\r\n//# sourceMappingURL=PerspectiveCamera.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AbstractCameraControls = void 0;\r\nconst CameraInterpolationManager_1 = require(\"../interpolation/CameraInterpolationManager\");\r\nconst viewer_shared_services_1 = require(\"@shapediver/viewer.shared.services\");\r\nconst gl_matrix_1 = require(\"gl-matrix\");\r\nclass AbstractCameraControls {\r\n    // #endregion Properties (38)\r\n    // #region Constructors (1)\r\n    constructor(_camera, _enabled) {\r\n        this._camera = _camera;\r\n        this._enabled = _enabled;\r\n        this._converter = viewer_shared_services_1.Converter.instance;\r\n        this._eventEngine = viewer_shared_services_1.EventEngine.instance;\r\n        this._autoRotationSpeed = 0;\r\n        this._cubePositionRestriction = { min: gl_matrix_1.vec3.fromValues(-Infinity, -Infinity, -Infinity), max: gl_matrix_1.vec3.fromValues(Infinity, Infinity, Infinity) };\r\n        this._cubeTargetRestriction = { min: gl_matrix_1.vec3.fromValues(-Infinity, -Infinity, -Infinity), max: gl_matrix_1.vec3.fromValues(Infinity, Infinity, Infinity) };\r\n        this._damping = 0.1;\r\n        this._enableAutoRotation = false;\r\n        this._enableAzimuthRotation = true;\r\n        this._enableKeyPan = false;\r\n        this._enableObjectControls = false;\r\n        this._enablePan = true;\r\n        this._enablePolarRotation = true;\r\n        this._enableRotation = true;\r\n        this._enableTurntableControls = false;\r\n        this._enableZoom = true;\r\n        this._input = { keys: { up: 38, down: 40, left: 37, right: 39 }, mouse: { rotate: 0, zoom: 1, pan: 2 }, touch: { rotate: 1, zoom: 2, pan: 2 }, };\r\n        this._keyPanSpeed = 0.5;\r\n        this._manualInteraction = false;\r\n        this._movementSmoothness = 0.5;\r\n        this._moving = false;\r\n        this._movingDuration = 0;\r\n        this._nonmanualInteraction = false;\r\n        this._objectControlsCenter = gl_matrix_1.vec3.create();\r\n        this._panSpeed = 0.5;\r\n        this._position = gl_matrix_1.vec3.create();\r\n        this._rotationRestriction = { minPolarAngle: 0, maxPolarAngle: 180, minAzimuthAngle: -Infinity, maxAzimuthAngle: Infinity };\r\n        this._rotationSpeed = 0.5;\r\n        this._sceneRotation = gl_matrix_1.vec2.create();\r\n        this._spherePositionRestriction = { center: gl_matrix_1.vec3.create(), radius: Infinity };\r\n        this._sphereTargetRestriction = { center: gl_matrix_1.vec3.create(), radius: Infinity };\r\n        this._target = gl_matrix_1.vec3.create();\r\n        this._turntableCenter = gl_matrix_1.vec3.create();\r\n        this._zoomRestriction = { minDistance: 0, maxDistance: Infinity };\r\n        this._zoomSpeed = 0.5;\r\n        this._cameraInterpolationManager = new CameraInterpolationManager_1.CameraInterpolationManager(this._camera, this);\r\n        this._manualInteractionTransformations = { position: [], target: [], sceneRotation: [] };\r\n        this._nonmanualInteractionTransformations = { position: [], target: [], sceneRotation: [] };\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Getters And Setters (59)\r\n    get autoRotationSpeed() {\r\n        return this._autoRotationSpeed;\r\n    }\r\n    set autoRotationSpeed(value) {\r\n        this._autoRotationSpeed = value;\r\n    }\r\n    get camera() {\r\n        return this._camera;\r\n    }\r\n    set camera(value) {\r\n        this._camera = value;\r\n    }\r\n    get cameraControlsEventDistribution() {\r\n        return this._cameraControlsEventDistribution;\r\n    }\r\n    get canvas() {\r\n        return this._canvas;\r\n    }\r\n    set canvas(value) {\r\n        this._canvas = value;\r\n    }\r\n    get cubePositionRestriction() {\r\n        return this._cubePositionRestriction;\r\n    }\r\n    set cubePositionRestriction(value) {\r\n        this._cubePositionRestriction = value;\r\n    }\r\n    get cubeTargetRestriction() {\r\n        return this._cubeTargetRestriction;\r\n    }\r\n    set cubeTargetRestriction(value) {\r\n        this._cubeTargetRestriction = value;\r\n    }\r\n    get damping() {\r\n        return this._damping;\r\n    }\r\n    set damping(value) {\r\n        this._damping = value;\r\n    }\r\n    get enableAutoRotation() {\r\n        return this._enableAutoRotation;\r\n    }\r\n    set enableAutoRotation(value) {\r\n        this._enableAutoRotation = value;\r\n    }\r\n    get enableAzimuthRotation() {\r\n        return this._enableAzimuthRotation;\r\n    }\r\n    set enableAzimuthRotation(value) {\r\n        this._enableAzimuthRotation = value;\r\n    }\r\n    get enableKeyPan() {\r\n        return this._enableKeyPan;\r\n    }\r\n    set enableKeyPan(value) {\r\n        this._enableKeyPan = value;\r\n    }\r\n    get enableObjectControls() {\r\n        return this._enableObjectControls;\r\n    }\r\n    set enableObjectControls(value) {\r\n        this._enableObjectControls = value;\r\n    }\r\n    get enablePan() {\r\n        return this._enablePan;\r\n    }\r\n    set enablePan(value) {\r\n        this._enablePan = value;\r\n    }\r\n    get enablePolarRotation() {\r\n        return this._enablePolarRotation;\r\n    }\r\n    set enablePolarRotation(value) {\r\n        this._enablePolarRotation = value;\r\n    }\r\n    get enableRotation() {\r\n        return this._enableRotation;\r\n    }\r\n    set enableRotation(value) {\r\n        this._enableRotation = value;\r\n    }\r\n    get enableTurntableControls() {\r\n        return this._enableTurntableControls;\r\n    }\r\n    set enableTurntableControls(value) {\r\n        this._enableTurntableControls = value;\r\n    }\r\n    get enableZoom() {\r\n        return this._enableZoom;\r\n    }\r\n    set enableZoom(value) {\r\n        this._enableZoom = value;\r\n    }\r\n    get enabled() {\r\n        return this._enabled;\r\n    }\r\n    set enabled(value) {\r\n        if (!value) {\r\n            this._manualInteraction = false;\r\n            this._manualInteractionTransformations = { position: [], target: [], sceneRotation: [] };\r\n            this._nonmanualInteraction = false;\r\n            this._nonmanualInteractionTransformations = { position: [], target: [], sceneRotation: [] };\r\n            this._cameraControlsEventDistribution.reset();\r\n            this._cameraLogic.reset();\r\n        }\r\n        this._enabled = value;\r\n    }\r\n    get input() {\r\n        return this._input;\r\n    }\r\n    set input(value) {\r\n        this._input = value;\r\n    }\r\n    get keyPanSpeed() {\r\n        return this._keyPanSpeed;\r\n    }\r\n    set keyPanSpeed(value) {\r\n        this._keyPanSpeed = value;\r\n    }\r\n    get movementSmoothness() {\r\n        return this._movementSmoothness;\r\n    }\r\n    set movementSmoothness(value) {\r\n        this._movementSmoothness = value;\r\n    }\r\n    get objectControlsCenter() {\r\n        return this._objectControlsCenter;\r\n    }\r\n    set objectControlsCenter(value) {\r\n        this._objectControlsCenter = value;\r\n    }\r\n    get panSpeed() {\r\n        return this._panSpeed;\r\n    }\r\n    set panSpeed(value) {\r\n        this._panSpeed = value;\r\n    }\r\n    get position() {\r\n        return this._position;\r\n    }\r\n    set position(value) {\r\n        this._position = value;\r\n    }\r\n    get rotationRestriction() {\r\n        return this._rotationRestriction;\r\n    }\r\n    set rotationRestriction(value) {\r\n        this._rotationRestriction = value;\r\n    }\r\n    get rotationSpeed() {\r\n        return this._rotationSpeed;\r\n    }\r\n    set rotationSpeed(value) {\r\n        this._rotationSpeed = value;\r\n    }\r\n    get sceneRotation() {\r\n        return this._sceneRotation;\r\n    }\r\n    set sceneRotation(value) {\r\n        this._sceneRotation = value;\r\n    }\r\n    get spherePositionRestriction() {\r\n        return this._spherePositionRestriction;\r\n    }\r\n    set spherePositionRestriction(value) {\r\n        this._spherePositionRestriction = value;\r\n    }\r\n    get sphereTargetRestriction() {\r\n        return this._sphereTargetRestriction;\r\n    }\r\n    set sphereTargetRestriction(value) {\r\n        this._sphereTargetRestriction = value;\r\n    }\r\n    get target() {\r\n        return this._target;\r\n    }\r\n    set target(value) {\r\n        this._target = value;\r\n    }\r\n    get turntableCenter() {\r\n        return this._turntableCenter;\r\n    }\r\n    set turntableCenter(value) {\r\n        this._turntableCenter = value;\r\n    }\r\n    get zoomRestriction() {\r\n        return this._zoomRestriction;\r\n    }\r\n    set zoomRestriction(value) {\r\n        this._zoomRestriction = value;\r\n    }\r\n    get zoomSpeed() {\r\n        return this._zoomSpeed;\r\n    }\r\n    set zoomSpeed(value) {\r\n        this._zoomSpeed = value;\r\n    }\r\n    // #endregion Public Getters And Setters (59)\r\n    // #region Public Methods (16)\r\n    animate(path, options) {\r\n        if (options && options.duration === 0) {\r\n            this._position = path[path.length - 1].position;\r\n            this._target = path[path.length - 1].target;\r\n            return new Promise(resolve => resolve(true));\r\n        }\r\n        this._manualInteraction = false;\r\n        this._manualInteractionTransformations = { position: [], target: [], sceneRotation: [] };\r\n        return this._cameraInterpolationManager.interpolate(path, options);\r\n    }\r\n    applyPositionMatrix(matrix, manualInteraction) {\r\n        if (this._manualInteraction || manualInteraction) {\r\n            this._manualInteraction = true;\r\n            this._manualInteractionTransformations.position.push({ matrix });\r\n        }\r\n        else {\r\n            this._nonmanualInteraction = true;\r\n            this._nonmanualInteractionTransformations.position.push({ matrix });\r\n        }\r\n    }\r\n    applyPositionVector(vector, manualInteraction) {\r\n        if (this._manualInteraction || manualInteraction) {\r\n            this._manualInteraction = true;\r\n            this._manualInteractionTransformations.position.push({ vector });\r\n        }\r\n        else {\r\n            this._nonmanualInteraction = true;\r\n            this._nonmanualInteractionTransformations.position.push({ vector });\r\n        }\r\n    }\r\n    applyRotation(vector, manualInteraction) {\r\n        if (this._manualInteraction || manualInteraction) {\r\n            this._manualInteraction = true;\r\n            this._manualInteractionTransformations.sceneRotation.push({ theta: vector[0], phi: vector[1] });\r\n        }\r\n        else {\r\n            this._nonmanualInteraction = true;\r\n            this._nonmanualInteractionTransformations.sceneRotation.push({ theta: vector[0], phi: vector[1] });\r\n        }\r\n    }\r\n    applySettings(settingsEngine) {\r\n        const cameraSetting = settingsEngine.camera.cameras[this.camera.id];\r\n        if (!cameraSetting)\r\n            return;\r\n        this.reset();\r\n        const controlsSettings = cameraSetting.controls;\r\n        this.autoRotationSpeed = controlsSettings.autoRotationSpeed;\r\n        this.damping = controlsSettings.damping;\r\n        this.enableAutoRotation = controlsSettings.enableAutoRotation;\r\n        this.enableKeyPan = controlsSettings.enableKeyPan;\r\n        this.enablePan = controlsSettings.enablePan;\r\n        this.enableRotation = controlsSettings.enableRotation;\r\n        this.enableZoom = controlsSettings.enableZoom;\r\n        // this.input = controlsSettings.input;\r\n        this.keyPanSpeed = controlsSettings.keyPanSpeed;\r\n        this.movementSmoothness = controlsSettings.movementSmoothness;\r\n        this.rotationSpeed = controlsSettings.rotationSpeed;\r\n        this.panSpeed = controlsSettings.panSpeed;\r\n        this.zoomSpeed = controlsSettings.zoomSpeed;\r\n        this.enableAzimuthRotation = controlsSettings.enableAzimuthRotation;\r\n        this.enablePolarRotation = controlsSettings.enablePolarRotation;\r\n        this.enableTurntableControls = controlsSettings.enableTurntableControls;\r\n        this.enableObjectControls = controlsSettings.enableObjectControls;\r\n        this.turntableCenter = this._converter.toVec3(controlsSettings.turntableCenter);\r\n        this.objectControlsCenter = this._converter.toVec3(controlsSettings.objectControlsCenter);\r\n        if (controlsSettings.restrictions.position.cube.min.x === null)\r\n            controlsSettings.restrictions.position.cube.min.x = -Infinity;\r\n        if (controlsSettings.restrictions.position.cube.min.y === null)\r\n            controlsSettings.restrictions.position.cube.min.y = -Infinity;\r\n        if (controlsSettings.restrictions.position.cube.min.z === null)\r\n            controlsSettings.restrictions.position.cube.min.z = -Infinity;\r\n        if (controlsSettings.restrictions.position.cube.max.x === null)\r\n            controlsSettings.restrictions.position.cube.max.x = Infinity;\r\n        if (controlsSettings.restrictions.position.cube.max.y === null)\r\n            controlsSettings.restrictions.position.cube.max.y = Infinity;\r\n        if (controlsSettings.restrictions.position.cube.max.z === null)\r\n            controlsSettings.restrictions.position.cube.max.z = Infinity;\r\n        if (controlsSettings.restrictions.position.sphere.radius === null)\r\n            controlsSettings.restrictions.position.sphere.radius = Infinity;\r\n        if (controlsSettings.restrictions.target.cube.min.x === null)\r\n            controlsSettings.restrictions.target.cube.min.x = -Infinity;\r\n        if (controlsSettings.restrictions.target.cube.min.y === null)\r\n            controlsSettings.restrictions.target.cube.min.y = -Infinity;\r\n        if (controlsSettings.restrictions.target.cube.min.z === null)\r\n            controlsSettings.restrictions.target.cube.min.z = -Infinity;\r\n        if (controlsSettings.restrictions.target.cube.max.x === null)\r\n            controlsSettings.restrictions.target.cube.max.x = Infinity;\r\n        if (controlsSettings.restrictions.target.cube.max.y === null)\r\n            controlsSettings.restrictions.target.cube.max.y = Infinity;\r\n        if (controlsSettings.restrictions.target.cube.max.z === null)\r\n            controlsSettings.restrictions.target.cube.max.z = Infinity;\r\n        if (controlsSettings.restrictions.target.sphere.radius === null)\r\n            controlsSettings.restrictions.target.sphere.radius = Infinity;\r\n        if (controlsSettings.restrictions.rotation.minAzimuthAngle === null)\r\n            controlsSettings.restrictions.rotation.minAzimuthAngle = -Infinity;\r\n        if (controlsSettings.restrictions.rotation.maxAzimuthAngle === null)\r\n            controlsSettings.restrictions.rotation.maxAzimuthAngle = Infinity;\r\n        if (controlsSettings.restrictions.zoom.maxDistance === null)\r\n            controlsSettings.restrictions.zoom.maxDistance = Infinity;\r\n        this.cubePositionRestriction = {\r\n            min: this._converter.toVec3(controlsSettings.restrictions.position.cube.min),\r\n            max: this._converter.toVec3(controlsSettings.restrictions.position.cube.max)\r\n        };\r\n        this.spherePositionRestriction = {\r\n            center: this._converter.toVec3(controlsSettings.restrictions.position.sphere.center),\r\n            radius: controlsSettings.restrictions.position.sphere.radius\r\n        };\r\n        this.cubeTargetRestriction = {\r\n            min: this._converter.toVec3(controlsSettings.restrictions.target.cube.min),\r\n            max: this._converter.toVec3(controlsSettings.restrictions.target.cube.max)\r\n        };\r\n        this.sphereTargetRestriction = {\r\n            center: this._converter.toVec3(controlsSettings.restrictions.target.sphere.center),\r\n            radius: controlsSettings.restrictions.target.sphere.radius\r\n        };\r\n        this.rotationRestriction = controlsSettings.restrictions.rotation;\r\n        this.zoomRestriction = controlsSettings.restrictions.zoom;\r\n    }\r\n    applyTargetMatrix(matrix, manualInteraction) {\r\n        if (this._manualInteraction || manualInteraction) {\r\n            this._manualInteraction = true;\r\n            this._manualInteractionTransformations.target.push({ matrix });\r\n        }\r\n        else {\r\n            this._nonmanualInteraction = true;\r\n            this._nonmanualInteractionTransformations.target.push({ matrix });\r\n        }\r\n    }\r\n    applyTargetVector(vector, manualInteraction) {\r\n        if (this._manualInteraction || manualInteraction) {\r\n            this._manualInteraction = true;\r\n            this._manualInteractionTransformations.target.push({ vector });\r\n        }\r\n        else {\r\n            this._nonmanualInteraction = true;\r\n            this._nonmanualInteractionTransformations.target.push({ vector });\r\n        }\r\n    }\r\n    applyUpMatrix(matrix, manualInteraction) {\r\n        // https://shapediver.atlassian.net/browse/SS-2949\r\n        throw new Error('Method not implemented.');\r\n    }\r\n    assignViewer(viewportId, canvas) {\r\n        this._canvas = canvas;\r\n        this._viewportId = viewportId;\r\n    }\r\n    getPositionWithManualUpdates() {\r\n        let position = gl_matrix_1.vec3.clone(this._position);\r\n        if (this._manualInteraction) {\r\n            for (let i = this._manualInteractionTransformations.position.length - 1; i >= 0; i--) {\r\n                if (this._manualInteractionTransformations.position[i].matrix) {\r\n                    position = gl_matrix_1.vec3.transformMat4(position, position, this._manualInteractionTransformations.position[i].matrix);\r\n                }\r\n                else {\r\n                    position = gl_matrix_1.vec3.add(position, position, this._manualInteractionTransformations.position[i].vector);\r\n                }\r\n            }\r\n        }\r\n        return position;\r\n    }\r\n    getPositionWithUpdates() {\r\n        return this.getPosition();\r\n    }\r\n    getTargetWithManualUpdates() {\r\n        let target = gl_matrix_1.vec3.clone(this._target);\r\n        if (this._manualInteraction) {\r\n            for (let i = this._manualInteractionTransformations.target.length - 1; i >= 0; i--) {\r\n                if (this._manualInteractionTransformations.target[i].matrix) {\r\n                    target = gl_matrix_1.vec3.transformMat4(target, target, this._manualInteractionTransformations.target[i].matrix);\r\n                }\r\n                else {\r\n                    target = gl_matrix_1.vec3.add(target, target, this._manualInteractionTransformations.target[i].vector);\r\n                }\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n    getTargetWithUpdates() {\r\n        return this.getTarget();\r\n    }\r\n    isMoving() {\r\n        return this._manualInteraction || this._nonmanualInteraction;\r\n    }\r\n    isWithinRestrictions(position, target) {\r\n        return this._cameraLogic.isWithinRestrictions(position, target);\r\n    }\r\n    reset() {\r\n        this._cameraControlsEventDistribution.reset();\r\n        this._cameraLogic.reset();\r\n    }\r\n    update(time) {\r\n        if (!this._enabled)\r\n            return { position: gl_matrix_1.vec3.clone(this._position), target: gl_matrix_1.vec3.clone(this._target), sceneRotation: gl_matrix_1.vec2.clone(this._sceneRotation) };\r\n        // reset all values\r\n        if (this._manualInteraction === true && this._cameraInterpolationManager.active())\r\n            this._cameraInterpolationManager.stop();\r\n        const { position, target, sceneRotation } = this._cameraLogic.restrict(this.getPosition(), this.getTarget(), this.getSceneRotation());\r\n        this._position = gl_matrix_1.vec3.clone(position);\r\n        this._target = gl_matrix_1.vec3.clone(target);\r\n        this._sceneRotation = sceneRotation ? gl_matrix_1.vec2.clone(sceneRotation) : gl_matrix_1.vec2.create();\r\n        this._manualInteraction = false;\r\n        this._manualInteractionTransformations = { position: [], target: [], sceneRotation: [] };\r\n        this._nonmanualInteraction = this._cameraInterpolationManager.active();\r\n        this._nonmanualInteractionTransformations = { position: [], target: [], sceneRotation: [] };\r\n        this._cameraLogic.update(time, this._nonmanualInteraction);\r\n        const oldMovement = this._moving;\r\n        const cameraDefinition = {\r\n            position: gl_matrix_1.vec3.clone(this._position),\r\n            target: gl_matrix_1.vec3.clone(this._target),\r\n            sceneRotation: gl_matrix_1.vec2.clone(this._sceneRotation)\r\n        };\r\n        this._movingDuration += time;\r\n        this._moving = (this._manualInteraction || this._nonmanualInteraction);\r\n        switch (true) {\r\n            case oldMovement !== this._moving && this._moving === true:\r\n                this._eventEngine.emitEvent(viewer_shared_services_1.EVENTTYPE.CAMERA.CAMERA_START, { viewportId: this._viewportId, cameraId: this.camera.id });\r\n                break;\r\n            case oldMovement !== this._moving && this._moving === false:\r\n                this._eventEngine.emitEvent(viewer_shared_services_1.EVENTTYPE.CAMERA.CAMERA_END, { viewportId: this._viewportId, cameraId: this.camera.id });\r\n                break;\r\n            default:\r\n                this._eventEngine.emitEvent(viewer_shared_services_1.EVENTTYPE.CAMERA.CAMERA_MOVE, { viewportId: this._viewportId, cameraId: this.camera.id });\r\n        }\r\n        if (!this._moving)\r\n            this._movingDuration = 0;\r\n        return cameraDefinition;\r\n    }\r\n    // #endregion Public Methods (16)\r\n    // #region Private Methods (3)\r\n    getPosition() {\r\n        let position = gl_matrix_1.vec3.clone(this._position);\r\n        if (this._manualInteraction) {\r\n            for (let i = this._manualInteractionTransformations.position.length - 1; i >= 0; i--) {\r\n                if (this._manualInteractionTransformations.position[i].matrix) {\r\n                    position = gl_matrix_1.vec3.transformMat4(position, position, this._manualInteractionTransformations.position[i].matrix);\r\n                }\r\n                else {\r\n                    position = gl_matrix_1.vec3.add(position, position, this._manualInteractionTransformations.position[i].vector);\r\n                }\r\n            }\r\n        }\r\n        else if (this._nonmanualInteraction) {\r\n            for (let i = this._nonmanualInteractionTransformations.position.length - 1; i >= 0; i--) {\r\n                if (this._nonmanualInteractionTransformations.position[i].matrix) {\r\n                    position = gl_matrix_1.vec3.transformMat4(position, position, this._nonmanualInteractionTransformations.position[i].matrix);\r\n                }\r\n                else {\r\n                    position = gl_matrix_1.vec3.add(position, position, this._nonmanualInteractionTransformations.position[i].vector);\r\n                }\r\n            }\r\n        }\r\n        return position;\r\n    }\r\n    getSceneRotation() {\r\n        let sceneRotation = gl_matrix_1.vec2.clone(this._sceneRotation);\r\n        if (this._manualInteraction) {\r\n            for (let i = this._manualInteractionTransformations.sceneRotation.length - 1; i >= 0; i--) {\r\n                sceneRotation = gl_matrix_1.vec2.add(sceneRotation, sceneRotation, gl_matrix_1.vec2.fromValues(this._manualInteractionTransformations.sceneRotation[i].theta, this._manualInteractionTransformations.sceneRotation[i].phi));\r\n            }\r\n        }\r\n        else if (this._nonmanualInteraction) {\r\n            for (let i = this._nonmanualInteractionTransformations.sceneRotation.length - 1; i >= 0; i--) {\r\n                sceneRotation = gl_matrix_1.vec2.add(sceneRotation, sceneRotation, gl_matrix_1.vec2.fromValues(this._nonmanualInteractionTransformations.sceneRotation[i].theta, this._nonmanualInteractionTransformations.sceneRotation[i].phi));\r\n            }\r\n        }\r\n        return sceneRotation;\r\n    }\r\n    getTarget() {\r\n        let target = gl_matrix_1.vec3.clone(this._target);\r\n        if (this._manualInteraction) {\r\n            for (let i = this._manualInteractionTransformations.target.length - 1; i >= 0; i--) {\r\n                if (this._manualInteractionTransformations.target[i].matrix) {\r\n                    target = gl_matrix_1.vec3.transformMat4(target, target, this._manualInteractionTransformations.target[i].matrix);\r\n                }\r\n                else {\r\n                    target = gl_matrix_1.vec3.add(target, target, this._manualInteractionTransformations.target[i].vector);\r\n                }\r\n            }\r\n        }\r\n        else if (this._nonmanualInteraction) {\r\n            for (let i = this._nonmanualInteractionTransformations.target.length - 1; i >= 0; i--) {\r\n                if (this._nonmanualInteractionTransformations.target[i].matrix) {\r\n                    target = gl_matrix_1.vec3.transformMat4(target, target, this._nonmanualInteractionTransformations.target[i].matrix);\r\n                }\r\n                else {\r\n                    target = gl_matrix_1.vec3.add(target, target, this._nonmanualInteractionTransformations.target[i].vector);\r\n                }\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n}\r\nexports.AbstractCameraControls = AbstractCameraControls;\r\n//# sourceMappingURL=AbstractCameraControls.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CameraControlsEventDistribution = void 0;\r\nclass CameraControlsEventDistribution {\r\n    // #endregion Properties (7)\r\n    // #region Constructors (1)\r\n    constructor(controls, cameraLogic) {\r\n        this._active = {\r\n            rotation: false,\r\n            zoom: false,\r\n            pan: false\r\n        };\r\n        this._activeEvents = true;\r\n        this._controls = controls;\r\n        this._cameraLogic = cameraLogic;\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Methods (16)\r\n    activateCameraEvents() {\r\n        this._activeEvents = true;\r\n    }\r\n    deactivateCameraEvents() {\r\n        this._activeEvents = false;\r\n        this.reset();\r\n    }\r\n    onDown(event) {\r\n        if (this._controls.camera.active === false)\r\n            return;\r\n        const { x, y } = this.convertInput(event);\r\n        const touchEvent = event.pointerType === 'touch';\r\n        const input = this.getInput(event);\r\n        const mapping = event.pointerType === 'touch' ? this._controls.input.touch : this._controls.input.mouse;\r\n        if (input === mapping.rotate && this._controls.enableRotation) {\r\n            this._cameraLogic.rotate(x, y, this._active.rotation, touchEvent);\r\n            this._active.rotation = true;\r\n        }\r\n        else {\r\n            this._active.rotation = false;\r\n        }\r\n        if (input === mapping.pan && this._controls.enablePan) {\r\n            this._cameraLogic.pan(x, y, this._active.pan, touchEvent);\r\n            this._active.pan = true;\r\n        }\r\n        else {\r\n            this._active.pan = false;\r\n        }\r\n        if (input === mapping.zoom && this._controls.enableZoom) {\r\n            let x1 = x, y1 = y;\r\n            if (touchEvent && this._controls.input.touch.zoom === 2 && this._primaryPointerEvent && this._secondaryPointerEvent) {\r\n                x1 = (this._primaryPointerEvent.pageX - this._secondaryPointerEvent.pageX) / window.innerWidth * (window.innerWidth / window.innerHeight);\r\n                y1 = (this._primaryPointerEvent.pageY - this._secondaryPointerEvent.pageY) / window.innerHeight;\r\n            }\r\n            this._cameraLogic.zoom(x1, y1, this._active.zoom, touchEvent);\r\n            this._active.zoom = true;\r\n        }\r\n        else {\r\n            this._active.zoom = false;\r\n        }\r\n    }\r\n    onKey(event) {\r\n        if (this._controls.camera.active === false)\r\n            return;\r\n        if (!this._controls.enableKeyPan)\r\n            return;\r\n        switch (event.keyCode) {\r\n            case this._controls.input.keys.up:\r\n                this._cameraLogic.pan(0, 0, false, false);\r\n                this._cameraLogic.pan(0, this._controls.keyPanSpeed * 0.05, true, false);\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                break;\r\n            case this._controls.input.keys.down:\r\n                this._cameraLogic.pan(0, 0, false, false);\r\n                this._cameraLogic.pan(0, -this._controls.keyPanSpeed * 0.05, true, false);\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                break;\r\n            case this._controls.input.keys.left:\r\n                this._cameraLogic.pan(0, 0, false, false);\r\n                this._cameraLogic.pan(this._controls.keyPanSpeed * 0.05, 0, true, false);\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                break;\r\n            case this._controls.input.keys.right:\r\n                this._cameraLogic.pan(0, 0, false, false);\r\n                this._cameraLogic.pan(-this._controls.keyPanSpeed * 0.05, 0, true, false);\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                break;\r\n        }\r\n    }\r\n    onKeyDown(event) {\r\n        if (this._controls.camera.active === false)\r\n            return;\r\n        if (!this._activeEvents)\r\n            return;\r\n        this.onKey(event);\r\n    }\r\n    onKeyUp(event) { }\r\n    onMouseWheel(event) {\r\n        if (this._controls.camera.active === false)\r\n            return;\r\n        if (!this._activeEvents)\r\n            return;\r\n        this.onWheel(event);\r\n    }\r\n    onMove(event) {\r\n        if (this._controls.camera.active === false)\r\n            return;\r\n        const { x, y } = this.convertInput(event);\r\n        const touchEvent = event.pointerType === 'touch';\r\n        if (this._controls.enableRotation && this._active.rotation)\r\n            this._cameraLogic.rotate(x, y, this._active.rotation, touchEvent);\r\n        if (this._controls.enablePan && this._active.pan)\r\n            this._cameraLogic.pan(x, y, this._active.pan, touchEvent);\r\n        if (this._controls.enableZoom && this._active.zoom) {\r\n            let x1 = x, y1 = y;\r\n            if (touchEvent && this._controls.input.touch.zoom === 2 && this._primaryPointerEvent && this._secondaryPointerEvent) {\r\n                x1 = (this._primaryPointerEvent.pageX - this._secondaryPointerEvent.pageX) / window.innerWidth * (window.innerWidth / window.innerHeight);\r\n                y1 = (this._primaryPointerEvent.pageY - this._secondaryPointerEvent.pageY) / window.innerHeight;\r\n            }\r\n            this._cameraLogic.zoom(x1, y1, this._active.zoom, touchEvent);\r\n        }\r\n    }\r\n    onPointerDown(event) {\r\n        if (this._controls.camera.active === false)\r\n            return;\r\n        if (!this._activeEvents)\r\n            return;\r\n        if (event.isPrimary === true)\r\n            this._primaryPointerEvent = event;\r\n        else if (event.isPrimary === false)\r\n            this._secondaryPointerEvent = event;\r\n        this.onDown(event);\r\n    }\r\n    onPointerEnd(event) {\r\n        if (this._controls.camera.active === false)\r\n            return;\r\n        if (!this._activeEvents)\r\n            return;\r\n        if (event.isPrimary === true)\r\n            this._primaryPointerEvent = undefined;\r\n        else if (event.isPrimary === false)\r\n            this._secondaryPointerEvent = undefined;\r\n        this.onUp(event);\r\n    }\r\n    onPointerMove(event) {\r\n        if (this._controls.camera.active === false)\r\n            return;\r\n        if (!this._activeEvents)\r\n            return;\r\n        if (event.isPrimary === true)\r\n            this._primaryPointerEvent = event;\r\n        else if (event.isPrimary === false)\r\n            this._secondaryPointerEvent = event;\r\n        this.onMove(event);\r\n    }\r\n    onPointerOut(event) {\r\n        if (this._controls.camera.active === false)\r\n            return;\r\n        this.revert();\r\n        if (event.isPrimary === true)\r\n            this._primaryPointerEvent = undefined;\r\n        else if (event.isPrimary === false)\r\n            this._secondaryPointerEvent = undefined;\r\n    }\r\n    onPointerUp(event) {\r\n        if (this._controls.camera.active === false)\r\n            return;\r\n        if (event.isPrimary === true)\r\n            this._primaryPointerEvent = undefined;\r\n        else if (event.isPrimary === false)\r\n            this._secondaryPointerEvent = undefined;\r\n    }\r\n    onUp(event) {\r\n        if (this._controls.camera.active === false)\r\n            return;\r\n        this.revert();\r\n        this._active.rotation = false;\r\n        this._active.zoom = false;\r\n        this._active.pan = false;\r\n    }\r\n    onWheel(event) {\r\n        if (this._controls.camera.active === false)\r\n            return;\r\n        if (!this._activeEvents)\r\n            return;\r\n        if (!this._controls.enableZoom)\r\n            return;\r\n        if (this._controls.camera.revertAtMouseUp === true) {\r\n            clearTimeout(this._zoomResizeTimeout);\r\n            this._zoomResizeTimeout = setTimeout(this.revert.bind(this), 300);\r\n        }\r\n        let delta = 0;\r\n        if (event.deltaY !== undefined) {\r\n            // WebKit / Opera / Explorer 9\r\n            delta = -event.deltaY;\r\n        }\r\n        else if (event.detail !== undefined) {\r\n            // Firefox\r\n            delta = -event.detail;\r\n        }\r\n        // convert to 2 screen coordinates that are far enough\r\n        if (Math.sign(delta) > 0) {\r\n            this._cameraLogic.zoom(0, 0, false, false);\r\n            this._cameraLogic.zoom(1, 0, true, false);\r\n        }\r\n        else {\r\n            this._cameraLogic.zoom(1, 0, false, false);\r\n            this._cameraLogic.zoom(0, 0, true, false);\r\n        }\r\n    }\r\n    reset() {\r\n        this._active = {\r\n            rotation: false,\r\n            zoom: false,\r\n            pan: false\r\n        };\r\n    }\r\n    // #endregion Public Methods (16)\r\n    // #region Protected Methods (2)\r\n    convertInput(event) {\r\n        if (this._primaryPointerEvent && this._secondaryPointerEvent) {\r\n            return {\r\n                x: (this._primaryPointerEvent.pageX + this._secondaryPointerEvent.pageX) / 2,\r\n                y: (this._primaryPointerEvent.pageY + this._secondaryPointerEvent.pageY) / 2\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                x: event.clientX,\r\n                y: event.clientY\r\n            };\r\n        }\r\n    }\r\n    getInput(event) {\r\n        if (event.pointerType === 'touch') {\r\n            if (this._secondaryPointerEvent) {\r\n                return 2;\r\n            }\r\n            else {\r\n                return 1;\r\n            }\r\n        }\r\n        else {\r\n            return event.button;\r\n        }\r\n    }\r\n    // #endregion Protected Methods (2)\r\n    // #region Private Methods (1)\r\n    revert() {\r\n        if (this._controls.camera.revertAtMouseUp === true) {\r\n            this._controls.camera.reset({ duration: this._controls.camera.revertAtMouseUpDuration });\r\n        }\r\n    }\r\n}\r\nexports.CameraControlsEventDistribution = CameraControlsEventDistribution;\r\n//# sourceMappingURL=CameraControlsEventDistribution.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CameraControlsLogic = void 0;\r\nconst viewer_shared_math_1 = require(\"@shapediver/viewer.shared.math\");\r\nconst gl_matrix_1 = require(\"gl-matrix\");\r\nconst OrthographicCamera_1 = require(\"../camera/OrthographicCamera\");\r\nconst ICameraEngine_1 = require(\"../../interfaces/ICameraEngine\");\r\nconst IOrthographicCamera_1 = require(\"../../interfaces/camera/IOrthographicCamera\");\r\nclass CameraControlsLogic {\r\n    // #endregion Properties (13)\r\n    // #region Constructors (1)\r\n    constructor(_controls, _settingsAdjustments, _touchAdjustments) {\r\n        this._controls = _controls;\r\n        this._settingsAdjustments = _settingsAdjustments;\r\n        this._touchAdjustments = _touchAdjustments;\r\n        // #region Properties (13)\r\n        this._adjustedSettings = {\r\n            autoRotationSpeed: () => this._controls.autoRotationSpeed * this._settingsAdjustments.autoRotationSpeed,\r\n            damping: () => this._controls.damping * this._settingsAdjustments.damping,\r\n            movementSmoothness: () => this._controls.movementSmoothness * this._settingsAdjustments.movementSmoothness,\r\n            panSpeed: () => this._controls.panSpeed * this._settingsAdjustments.panSpeed,\r\n            rotationSpeed: () => this._controls.rotationSpeed * this._settingsAdjustments.rotationSpeed,\r\n            zoomSpeed: () => this._controls.zoomSpeed * this._settingsAdjustments.zoomSpeed,\r\n        };\r\n        this._damping = {\r\n            rotation: {\r\n                time: 0,\r\n                duration: 0,\r\n                theta: 0,\r\n                phi: 0\r\n            },\r\n            zoom: {\r\n                time: 0,\r\n                duration: 0,\r\n                delta: 0\r\n            },\r\n            pan: {\r\n                time: 0,\r\n                duration: 0,\r\n                offset: gl_matrix_1.vec3.create()\r\n            },\r\n        };\r\n        this._dollyDelta = 0;\r\n        this._dollyEnd = 0;\r\n        this._dollyStart = 0;\r\n        this._panDelta = gl_matrix_1.vec2.create();\r\n        this._panEnd = gl_matrix_1.vec2.create();\r\n        this._panStart = gl_matrix_1.vec2.create();\r\n        this._rotateDelta = gl_matrix_1.vec2.create();\r\n        this._rotateEnd = gl_matrix_1.vec2.create();\r\n        this._rotateStart = gl_matrix_1.vec2.create();\r\n        this._quat = gl_matrix_1.quat.fromValues(-Math.sin(Math.PI / 4), 0, 0, Math.sin(Math.PI / 4));\r\n        this._quatInverse = gl_matrix_1.quat.fromValues(Math.sin(Math.PI / 4), 0, 0, Math.sin(Math.PI / 4));\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Methods (7)\r\n    isWithinRestrictions(position, target) {\r\n        const pBox = new viewer_shared_math_1.Box(this._controls.cubePositionRestriction.min, this._controls.cubePositionRestriction.max), pSphere = new viewer_shared_math_1.Sphere(this._controls.spherePositionRestriction.center, this._controls.spherePositionRestriction.radius), tBox = new viewer_shared_math_1.Box(this._controls.cubeTargetRestriction.min, this._controls.cubeTargetRestriction.max), tSphere = new viewer_shared_math_1.Sphere(this._controls.sphereTargetRestriction.center, this._controls.sphereTargetRestriction.radius);\r\n        if (!(pBox.containsPoint(position) && pSphere.containsPoint(position)))\r\n            return false;\r\n        if (!(tBox.containsPoint(target) && tSphere.containsPoint(target)))\r\n            return false;\r\n        const currentDistance = gl_matrix_1.vec3.distance(position, target);\r\n        if (currentDistance > this._controls.zoomRestriction.maxDistance || currentDistance < this._controls.zoomRestriction.minDistance)\r\n            return false;\r\n        const minPolarAngle = this._controls.rotationRestriction.minPolarAngle * (Math.PI / 180), maxPolarAngle = this._controls.rotationRestriction.maxPolarAngle * (Math.PI / 180), minAzimuthAngle = this._controls.rotationRestriction.minAzimuthAngle * (Math.PI / 180), maxAzimuthAngle = this._controls.rotationRestriction.maxAzimuthAngle * (Math.PI / 180);\r\n        if (minAzimuthAngle !== -Infinity ||\r\n            maxAzimuthAngle !== Infinity ||\r\n            minPolarAngle !== 0 ||\r\n            maxPolarAngle !== 180) {\r\n            const offset = gl_matrix_1.vec3.sub(gl_matrix_1.vec3.create(), position, target);\r\n            gl_matrix_1.vec3.transformQuat(offset, offset, this._quat);\r\n            const spherical = new viewer_shared_math_1.Spherical().fromVec3(offset);\r\n            if (spherical.theta < minAzimuthAngle ||\r\n                spherical.theta > maxAzimuthAngle ||\r\n                spherical.phi < minPolarAngle ||\r\n                spherical.phi > maxPolarAngle) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    pan(x, y, active, touch) {\r\n        if (!active) {\r\n            this._panStart = gl_matrix_1.vec2.fromValues(x, y);\r\n        }\r\n        else {\r\n            this._panEnd = gl_matrix_1.vec2.fromValues(x, y);\r\n            gl_matrix_1.vec2.sub(this._panDelta, this._panEnd, this._panStart);\r\n            if (this._panDelta[0] === 0 && this._panDelta[1] === 0)\r\n                return;\r\n            gl_matrix_1.vec2.copy(this._panStart, this._panEnd);\r\n            const adjustedPanSpeed = this._adjustedSettings.panSpeed() * (touch ? this._touchAdjustments.panSpeed : 1.0);\r\n            const offset = this.panDeltaToOffset(gl_matrix_1.vec2.mul(gl_matrix_1.vec2.create(), this._panDelta, gl_matrix_1.vec2.fromValues(adjustedPanSpeed, adjustedPanSpeed)));\r\n            if (this._damping.pan.duration > 0) {\r\n                if (offset[0] < 0) {\r\n                    offset[0] = Math.min(offset[0], this._adjustedSettings.movementSmoothness() * this._damping.pan.offset[0]);\r\n                }\r\n                else {\r\n                    offset[0] = Math.max(offset[0], this._adjustedSettings.movementSmoothness() * this._damping.pan.offset[0]);\r\n                }\r\n                if (offset[1] < 0) {\r\n                    offset[1] = Math.min(offset[1], this._adjustedSettings.movementSmoothness() * this._damping.pan.offset[1]);\r\n                }\r\n                else {\r\n                    offset[1] = Math.max(offset[1], this._adjustedSettings.movementSmoothness() * this._damping.pan.offset[1]);\r\n                }\r\n                if (offset[2] < 0) {\r\n                    offset[2] = Math.min(offset[2], this._adjustedSettings.movementSmoothness() * this._damping.pan.offset[2]);\r\n                }\r\n                else {\r\n                    offset[2] = Math.max(offset[2], this._adjustedSettings.movementSmoothness() * this._damping.pan.offset[2]);\r\n                }\r\n            }\r\n            const damping = 1 - Math.max(0.01, Math.min(0.99, this._adjustedSettings.damping()));\r\n            const framesOffsetX = (Math.log(1 / Math.abs(offset[0])) - 5 * Math.log(10)) / (Math.log(damping));\r\n            const framesOffsetY = (Math.log(1 / Math.abs(offset[1])) - 5 * Math.log(10)) / (Math.log(damping));\r\n            const framesOffsetZ = (Math.log(1 / Math.abs(offset[2])) - 5 * Math.log(10)) / (Math.log(damping));\r\n            this._damping.pan.time = 0;\r\n            this._damping.pan.duration = Math.max(framesOffsetX, Math.max(framesOffsetY, framesOffsetZ)) * 16.6666;\r\n            this._damping.pan.offset = gl_matrix_1.vec3.clone(offset);\r\n            this._damping.rotation.duration = 0;\r\n            this._damping.zoom.duration = 0;\r\n            this._controls.applyTargetVector(offset, true);\r\n            this._controls.applyPositionVector(offset, true);\r\n        }\r\n    }\r\n    reset() {\r\n        this._damping = {\r\n            rotation: {\r\n                time: 0,\r\n                duration: 0,\r\n                theta: 0,\r\n                phi: 0\r\n            },\r\n            zoom: {\r\n                time: 0,\r\n                duration: 0,\r\n                delta: 0\r\n            },\r\n            pan: {\r\n                time: 0,\r\n                duration: 0,\r\n                offset: gl_matrix_1.vec3.create()\r\n            },\r\n        };\r\n        this._dollyDelta = 0;\r\n        this._dollyEnd = 0;\r\n        this._dollyStart = 0;\r\n        this._panDelta = gl_matrix_1.vec2.create();\r\n        this._panEnd = gl_matrix_1.vec2.create();\r\n        this._panStart = gl_matrix_1.vec2.create();\r\n        this._rotateDelta = gl_matrix_1.vec2.create();\r\n        this._rotateEnd = gl_matrix_1.vec2.create();\r\n        this._rotateStart = gl_matrix_1.vec2.create();\r\n    }\r\n    restrict(position, target, sceneRotation) {\r\n        const pBox = new viewer_shared_math_1.Box(this._controls.cubePositionRestriction.min, this._controls.cubePositionRestriction.max), pSphere = new viewer_shared_math_1.Sphere(this._controls.spherePositionRestriction.center, this._controls.spherePositionRestriction.radius), tBox = new viewer_shared_math_1.Box(this._controls.cubeTargetRestriction.min, this._controls.cubeTargetRestriction.max), tSphere = new viewer_shared_math_1.Sphere(this._controls.sphereTargetRestriction.center, this._controls.sphereTargetRestriction.radius);\r\n        if (!pBox.containsPoint(position))\r\n            position = pBox.clampPoint(position);\r\n        if (!pSphere.containsPoint(position))\r\n            position = pSphere.clampPoint(position);\r\n        if (!tBox.containsPoint(target))\r\n            target = tBox.clampPoint(target);\r\n        if (!tSphere.containsPoint(target))\r\n            target = tSphere.clampPoint(target);\r\n        // zoom restrictions\r\n        const currentDistance = gl_matrix_1.vec3.distance(position, target);\r\n        if (currentDistance > this._controls.zoomRestriction.maxDistance || currentDistance < this._controls.zoomRestriction.minDistance) {\r\n            const direction = gl_matrix_1.vec3.normalize(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), position, target));\r\n            const distance = Math.max(this._controls.zoomRestriction.minDistance, Math.min(this._controls.zoomRestriction.maxDistance, currentDistance));\r\n            gl_matrix_1.vec3.add(position, gl_matrix_1.vec3.multiply(position, direction, gl_matrix_1.vec3.fromValues(distance, distance, distance)), target);\r\n        }\r\n        // angle restrictions\r\n        const minPolarAngle = this._controls.rotationRestriction.minPolarAngle * (Math.PI / 180), maxPolarAngle = this._controls.rotationRestriction.maxPolarAngle * (Math.PI / 180), minAzimuthAngle = this._controls.rotationRestriction.minAzimuthAngle * (Math.PI / 180), maxAzimuthAngle = this._controls.rotationRestriction.maxAzimuthAngle * (Math.PI / 180);\r\n        if (minAzimuthAngle !== -Infinity ||\r\n            maxAzimuthAngle !== Infinity ||\r\n            minPolarAngle !== 0 ||\r\n            maxPolarAngle !== 180 ||\r\n            this._controls.enableAzimuthRotation === false ||\r\n            this._controls.enablePolarRotation === false ||\r\n            this._controls.enableObjectControls === true) {\r\n            let offset = gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), position, target);\r\n            gl_matrix_1.vec3.transformQuat(offset, offset, this._quat);\r\n            const spherical = new viewer_shared_math_1.Spherical().fromVec3(offset);\r\n            if (spherical.theta < minAzimuthAngle ||\r\n                spherical.theta > maxAzimuthAngle ||\r\n                spherical.phi < minPolarAngle ||\r\n                spherical.phi > maxPolarAngle ||\r\n                this._controls.enableAzimuthRotation === false ||\r\n                this._controls.enablePolarRotation === false ||\r\n                this._controls.enableObjectControls === true) {\r\n                spherical.theta = Math.max(minAzimuthAngle, Math.min(maxAzimuthAngle, spherical.theta));\r\n                spherical.phi = Math.max(minPolarAngle, Math.min(maxPolarAngle, spherical.phi));\r\n                if (this._controls.enableAzimuthRotation === false || this._controls.enablePolarRotation === false || this._controls.enableObjectControls === true) {\r\n                    const defaultOffset = gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), this._controls.camera.defaultPosition, this._controls.camera.defaultTarget);\r\n                    gl_matrix_1.vec3.transformQuat(defaultOffset, defaultOffset, this._quat);\r\n                    const defaultSpherical = new viewer_shared_math_1.Spherical().fromVec3(defaultOffset);\r\n                    if (this._controls.enableAzimuthRotation === false)\r\n                        spherical.theta = defaultSpherical.theta;\r\n                    if (this._controls.enablePolarRotation === false)\r\n                        spherical.phi = defaultSpherical.phi;\r\n                    if (this._controls.enableObjectControls) {\r\n                        spherical.theta = defaultSpherical.theta;\r\n                        spherical.phi = defaultSpherical.phi;\r\n                    }\r\n                }\r\n                spherical.makeSafe();\r\n                offset = spherical.toVec3();\r\n                gl_matrix_1.vec3.transformQuat(offset, offset, this._quatInverse);\r\n                gl_matrix_1.vec3.add(position, offset, target);\r\n            }\r\n            if ((sceneRotation[1] < minAzimuthAngle ||\r\n                sceneRotation[1] > maxAzimuthAngle ||\r\n                sceneRotation[0] < minPolarAngle ||\r\n                sceneRotation[0] > maxPolarAngle ||\r\n                this._controls.enableAzimuthRotation === false ||\r\n                this._controls.enablePolarRotation === false) &&\r\n                this._controls.enableObjectControls === false) {\r\n                sceneRotation[1] = this._controls.enableAzimuthRotation === false ? 0 : Math.max(minAzimuthAngle, Math.min(maxAzimuthAngle, sceneRotation[1]));\r\n                sceneRotation[0] = this._controls.enablePolarRotation === false ? 0 : Math.max(minPolarAngle, Math.min(maxPolarAngle, sceneRotation[0]));\r\n            }\r\n        }\r\n        return { position, target, sceneRotation };\r\n    }\r\n    rotate(x, y, active, touch) {\r\n        if (this._controls.camera.type === ICameraEngine_1.CAMERA_TYPE.ORTHOGRAPHIC && this._controls.camera.direction !== IOrthographicCamera_1.ORTHOGRAPHIC_CAMERA_DIRECTION.CUSTOM)\r\n            return;\r\n        if (!active) {\r\n            this._rotateStart = gl_matrix_1.vec2.fromValues(x, y);\r\n        }\r\n        else {\r\n            this._rotateEnd = gl_matrix_1.vec2.fromValues(x, y);\r\n            gl_matrix_1.vec2.subtract(this._rotateDelta, this._rotateEnd, this._rotateStart);\r\n            gl_matrix_1.vec2.copy(this._rotateStart, this._rotateEnd);\r\n            if (!this._controls.canvas)\r\n                return;\r\n            if (this._controls.canvas.clientWidth == 0 || this._controls.canvas.clientHeight == 0)\r\n                return;\r\n            const spherical = new viewer_shared_math_1.Spherical();\r\n            const rotationSpeed = this._adjustedSettings.rotationSpeed() * (touch ? this._touchAdjustments.rotationSpeed : 1.0);\r\n            spherical.theta -= rotationSpeed * this._rotateDelta[0] / this._controls.canvas.clientHeight;\r\n            spherical.phi -= rotationSpeed * this._rotateDelta[1] / this._controls.canvas.clientHeight;\r\n            if (this._damping.rotation.duration > 0) {\r\n                const thetaDelta = this._damping.rotation.theta - spherical.theta;\r\n                spherical.theta += thetaDelta * this._adjustedSettings.movementSmoothness();\r\n                const phiDelta = this._damping.rotation.phi - spherical.phi;\r\n                spherical.phi += phiDelta * this._adjustedSettings.movementSmoothness();\r\n            }\r\n            let sphericalForOffset = spherical;\r\n            if (this._controls.enableTurntableControls)\r\n                sphericalForOffset = new viewer_shared_math_1.Spherical(1.0, spherical.phi, 0);\r\n            const offset = this.rotationSphericalToOffset(sphericalForOffset);\r\n            const damping = 1 - Math.max(0.01, Math.min(1, this._adjustedSettings.damping()));\r\n            const framesTheta = (Math.log(1 / Math.abs(spherical.theta)) - 5 * Math.log(10)) / (Math.log(damping));\r\n            const framesPhi = (Math.log(1 / Math.abs(spherical.phi)) - 5 * Math.log(10)) / (Math.log(damping));\r\n            this._damping.rotation.time = 0;\r\n            this._damping.rotation.duration = Math.max(framesTheta, framesPhi) * 16.6666;\r\n            this._damping.rotation.theta = spherical.theta;\r\n            this._damping.rotation.phi = spherical.phi;\r\n            this._damping.pan.duration = 0;\r\n            this._damping.zoom.duration = 0;\r\n            this._controls.applyPositionVector(offset, true);\r\n            if (this._controls.enableTurntableControls)\r\n                this._controls.applyRotation([0, spherical.theta], true);\r\n            if (this._controls.enableObjectControls)\r\n                this._controls.applyRotation([spherical.phi, spherical.theta], true);\r\n        }\r\n    }\r\n    update(time, manualInteraction) {\r\n        if (manualInteraction === true) {\r\n            this._damping.zoom.duration = 0;\r\n            this._damping.pan.duration = 0;\r\n            this._damping.rotation.duration = 0;\r\n        }\r\n        const damping = 1 - Math.max(0.01, Math.min(1, this._adjustedSettings.damping()));\r\n        if (this._damping.pan.duration > 0) {\r\n            if (this._damping.pan.time + time > this._damping.pan.duration) {\r\n                this._damping.pan.time = this._damping.pan.duration;\r\n                this._damping.pan.duration = 0;\r\n            }\r\n            else {\r\n                this._damping.pan.time += time;\r\n                const frameSinceStart = this._damping.pan.time / 16.6666;\r\n                const dampingFrames = Math.pow(damping, frameSinceStart);\r\n                const offset = gl_matrix_1.vec3.multiply(gl_matrix_1.vec3.create(), this._damping.pan.offset, gl_matrix_1.vec3.fromValues(dampingFrames, dampingFrames, dampingFrames));\r\n                this._controls.applyTargetVector(offset);\r\n                this._controls.applyPositionVector(offset);\r\n            }\r\n        }\r\n        else {\r\n            this._damping.pan.time = 0;\r\n        }\r\n        if (this._damping.rotation.duration > 0) {\r\n            if (this._damping.rotation.time + time > this._damping.rotation.duration) {\r\n                this._damping.rotation.time = this._damping.rotation.duration;\r\n                this._damping.rotation.duration = 0;\r\n            }\r\n            else {\r\n                this._damping.rotation.time += time;\r\n                const frameSinceStart = this._damping.rotation.time / 16.6666;\r\n                const spherical = new viewer_shared_math_1.Spherical();\r\n                spherical.theta = this._damping.rotation.theta * Math.pow(damping, frameSinceStart);\r\n                spherical.phi = this._damping.rotation.phi * Math.pow(damping, frameSinceStart);\r\n                let sphericalForOffset = spherical;\r\n                if (this._controls.enableTurntableControls)\r\n                    sphericalForOffset = new viewer_shared_math_1.Spherical(1.0, spherical.phi, 0);\r\n                const offset = this.rotationSphericalToOffset(sphericalForOffset);\r\n                this._controls.applyPositionVector(offset);\r\n                if (this._controls.enableTurntableControls)\r\n                    this._controls.applyRotation([0, spherical.theta]);\r\n                if (this._controls.enableObjectControls)\r\n                    this._controls.applyRotation([spherical.phi, spherical.theta]);\r\n            }\r\n        }\r\n        else {\r\n            this._damping.rotation.time = 0;\r\n        }\r\n        if (this._damping.zoom.duration > 0) {\r\n            if (this._damping.zoom.time + time > this._damping.zoom.duration) {\r\n                this._damping.zoom.time = this._damping.zoom.duration;\r\n                this._damping.zoom.duration = 0;\r\n            }\r\n            else {\r\n                this._damping.zoom.time += time;\r\n                const frameSinceStart = this._damping.zoom.time / 16.6666;\r\n                const delta = this._damping.zoom.delta * Math.pow(damping, frameSinceStart);\r\n                const offset = this.zoomDistanceToOffset(delta);\r\n                this._controls.applyPositionVector(offset);\r\n            }\r\n        }\r\n        else {\r\n            this._damping.zoom.time = 0;\r\n        }\r\n        if (this._controls.enableAutoRotation) {\r\n            const spherical = new viewer_shared_math_1.Spherical(1.0, 0.0, -this._adjustedSettings.autoRotationSpeed());\r\n            let sphericalForOffset = spherical;\r\n            if (this._controls.enableTurntableControls)\r\n                sphericalForOffset = new viewer_shared_math_1.Spherical(1.0, spherical.phi, 0);\r\n            const offset = this.rotationSphericalToOffset(sphericalForOffset);\r\n            this._controls.applyPositionVector(offset);\r\n            if (this._controls.enableTurntableControls)\r\n                this._controls.applyRotation([0, spherical.theta]);\r\n            if (this._controls.enableObjectControls)\r\n                this._controls.applyRotation([spherical.phi, spherical.theta]);\r\n        }\r\n    }\r\n    zoom(x, y, active, touch) {\r\n        const distance = Math.sqrt(x * x + y * y);\r\n        if (!active) {\r\n            this._dollyStart = distance;\r\n        }\r\n        else {\r\n            this._dollyEnd = distance;\r\n            this._dollyDelta = this._dollyEnd - this._dollyStart;\r\n            this._dollyStart = this._dollyEnd;\r\n            if (this._damping.zoom.duration > 0) {\r\n                if (this._dollyDelta < 0) {\r\n                    this._dollyDelta = Math.min(this._dollyDelta, this._adjustedSettings.movementSmoothness() * this._damping.zoom.delta);\r\n                }\r\n                else {\r\n                    this._dollyDelta = Math.max(this._dollyDelta, this._adjustedSettings.movementSmoothness() * this._damping.zoom.delta);\r\n                }\r\n            }\r\n            const delta = -this._dollyDelta * this._adjustedSettings.zoomSpeed() * (touch ? this._touchAdjustments.zoomSpeed : 1.0);\r\n            const damping = 1 - Math.max(0.01, Math.min(1, this._adjustedSettings.damping()));\r\n            const framesDelta = (Math.log(1 / Math.abs(this._dollyDelta)) - 5 * Math.log(10)) / (Math.log(damping));\r\n            this._damping.zoom.time = 0;\r\n            this._damping.zoom.duration = framesDelta * 16.6666;\r\n            this._damping.zoom.delta = delta;\r\n            this._damping.rotation.duration = 0;\r\n            this._damping.pan.duration = 0;\r\n            const offset = this.zoomDistanceToOffset(delta);\r\n            this._controls.applyPositionVector(offset, true);\r\n        }\r\n    }\r\n    // #endregion Public Methods (7)\r\n    // #region Private Methods (3)\r\n    panDeltaToOffset(panDelta) {\r\n        var _a, _b, _c, _d;\r\n        const offset = gl_matrix_1.vec3.create();\r\n        const panOffset = gl_matrix_1.vec3.create();\r\n        if (!this._controls.canvas)\r\n            return offset;\r\n        if (this._controls.canvas.clientWidth == 0 || this._controls.canvas.clientHeight == 0)\r\n            return offset;\r\n        // perspective\r\n        gl_matrix_1.vec3.subtract(offset, this._controls.getPositionWithManualUpdates(), this._controls.getTargetWithManualUpdates());\r\n        if (this._controls.camera instanceof OrthographicCamera_1.OrthographicCamera) {\r\n            const orthographicCamera = this._controls.camera;\r\n            const mat = gl_matrix_1.mat4.targetTo(gl_matrix_1.mat4.create(), orthographicCamera.position, orthographicCamera.target, orthographicCamera.up);\r\n            // // we use only clientHeight here so aspect ratio does not distort speed\r\n            // // left\r\n            const v1 = gl_matrix_1.vec3.fromValues(mat[0], mat[1], mat[2]);\r\n            const scalar1 = -(panDelta[0] * (orthographicCamera.right - orthographicCamera.left) * 0.5 / ((_a = this._controls.canvas) === null || _a === void 0 ? void 0 : _a.clientHeight) /** orthographicCamera.zoom */);\r\n            gl_matrix_1.vec3.multiply(v1, v1, gl_matrix_1.vec3.fromValues(scalar1, scalar1, scalar1));\r\n            gl_matrix_1.vec3.add(panOffset, panOffset, v1);\r\n            // // up\r\n            const v2 = gl_matrix_1.vec3.fromValues(mat[4], mat[5], mat[6]);\r\n            const scalar2 = panDelta[1] * (orthographicCamera.right - orthographicCamera.left) * 0.5 / ((_b = this._controls.canvas) === null || _b === void 0 ? void 0 : _b.clientHeight) /** orthographicCamera.zoom */;\r\n            gl_matrix_1.vec3.multiply(v2, v2, gl_matrix_1.vec3.fromValues(scalar2, scalar2, scalar2));\r\n            gl_matrix_1.vec3.add(panOffset, panOffset, v2);\r\n        }\r\n        else {\r\n            let targetDistance = gl_matrix_1.vec3.length(offset);\r\n            // half of the fov is center to top of screen\r\n            targetDistance *= Math.tan(((this._controls.camera.fov / 2) * Math.PI) / 180.0);\r\n            // we use only clientHeight here so aspect ratio does not distort speed\r\n            // left\r\n            const mat = gl_matrix_1.mat4.targetTo(gl_matrix_1.mat4.create(), this._controls.camera.position, this._controls.camera.target, gl_matrix_1.vec3.fromValues(0, 0, 1));\r\n            const v1 = gl_matrix_1.vec3.fromValues(mat[0], mat[1], mat[2]);\r\n            const scalar1 = -(2 * panDelta[0] * targetDistance / ((_c = this._controls.canvas) === null || _c === void 0 ? void 0 : _c.clientHeight));\r\n            gl_matrix_1.vec3.multiply(v1, v1, gl_matrix_1.vec3.fromValues(scalar1, scalar1, scalar1));\r\n            gl_matrix_1.vec3.add(panOffset, panOffset, v1);\r\n            // // up\r\n            const v2 = gl_matrix_1.vec3.fromValues(mat[4], mat[5], mat[6]);\r\n            const scalar2 = 2 * panDelta[1] * targetDistance / ((_d = this._controls.canvas) === null || _d === void 0 ? void 0 : _d.clientHeight);\r\n            gl_matrix_1.vec3.multiply(v2, v2, gl_matrix_1.vec3.fromValues(scalar2, scalar2, scalar2));\r\n            gl_matrix_1.vec3.add(panOffset, panOffset, v2);\r\n        }\r\n        return gl_matrix_1.vec3.clone(panOffset);\r\n    }\r\n    rotationSphericalToOffset(s) {\r\n        let offset = gl_matrix_1.vec3.create();\r\n        gl_matrix_1.vec3.subtract(offset, this._controls.getPositionWithManualUpdates(), this._controls.getTargetWithManualUpdates());\r\n        gl_matrix_1.vec3.transformQuat(offset, offset, this._quat);\r\n        const spherical = new viewer_shared_math_1.Spherical().fromVec3(offset);\r\n        spherical.theta += s.theta;\r\n        spherical.phi += s.phi;\r\n        const minAzimuthAngle = this._controls.rotationRestriction.minAzimuthAngle * (Math.PI / 180), maxAzimuthAngle = this._controls.rotationRestriction.maxAzimuthAngle * (Math.PI / 180);\r\n        if (spherical.theta > Math.PI) {\r\n            spherical.theta -= 2 * Math.PI;\r\n            if (minAzimuthAngle > spherical.theta) {\r\n                spherical.theta += 2 * Math.PI;\r\n            }\r\n        }\r\n        else if (spherical.theta < -Math.PI) {\r\n            spherical.theta += 2 * Math.PI;\r\n            if (maxAzimuthAngle < spherical.theta) {\r\n                spherical.theta -= 2 * Math.PI;\r\n            }\r\n        }\r\n        spherical.makeSafe();\r\n        offset = spherical.toVec3();\r\n        offset = gl_matrix_1.vec3.transformQuat(gl_matrix_1.vec3.create(), offset, this._quatInverse);\r\n        offset = gl_matrix_1.vec3.add(gl_matrix_1.vec3.create(), offset, this._controls.getTargetWithManualUpdates());\r\n        offset = gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), offset, this._controls.getPositionWithManualUpdates());\r\n        return gl_matrix_1.vec3.clone(offset);\r\n    }\r\n    zoomDistanceToOffset(distance) {\r\n        const offset = gl_matrix_1.vec3.create();\r\n        gl_matrix_1.vec3.subtract(offset, this._controls.getPositionWithManualUpdates(), this._controls.getTargetWithManualUpdates());\r\n        return gl_matrix_1.vec3.multiply(gl_matrix_1.vec3.create(), offset, gl_matrix_1.vec3.fromValues(distance, distance, distance));\r\n    }\r\n}\r\nexports.CameraControlsLogic = CameraControlsLogic;\r\n//# sourceMappingURL=CameraControlsLogic.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.OrthographicCameraControls = void 0;\r\nconst AbstractCameraControls_1 = require(\"./AbstractCameraControls\");\r\nconst CameraControlsLogic_1 = require(\"./CameraControlsLogic\");\r\nconst CameraControlsEventDistribution_1 = require(\"./CameraControlsEventDistribution\");\r\nclass OrthographicCameraControls extends AbstractCameraControls_1.AbstractCameraControls {\r\n    // #endregion Properties (2)\r\n    // #region Constructors (1)\r\n    constructor(camera, enabled) {\r\n        super(camera, enabled);\r\n        // #region Properties (2)\r\n        this._settingsAdjustments = {\r\n            autoRotationSpeed: 2 * Math.PI / 60 / 60,\r\n            damping: 1.0,\r\n            movementSmoothness: 1.0,\r\n            panSpeed: 1.75,\r\n            rotationSpeed: Math.PI,\r\n            zoomSpeed: 0.025,\r\n        };\r\n        this._touchAdjustments = {\r\n            autoRotationSpeed: 1.0,\r\n            damping: 1.0,\r\n            movementSmoothness: 1.0,\r\n            panSpeed: 4.0 / 1.75,\r\n            rotationSpeed: 1.5,\r\n            zoomSpeed: 100.0,\r\n        };\r\n        this._cameraLogic = new CameraControlsLogic_1.CameraControlsLogic(this, this._settingsAdjustments, this._touchAdjustments);\r\n        this._cameraControlsEventDistribution = new CameraControlsEventDistribution_1.CameraControlsEventDistribution(this, this._cameraLogic);\r\n    }\r\n}\r\nexports.OrthographicCameraControls = OrthographicCameraControls;\r\n//# sourceMappingURL=OrthographicCameraControls.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PerspectiveCameraControls = void 0;\r\nconst AbstractCameraControls_1 = require(\"./AbstractCameraControls\");\r\nconst CameraControlsLogic_1 = require(\"./CameraControlsLogic\");\r\nconst CameraControlsEventDistribution_1 = require(\"./CameraControlsEventDistribution\");\r\nclass PerspectiveCameraControls extends AbstractCameraControls_1.AbstractCameraControls {\r\n    // #endregion Properties (3)\r\n    // #region Constructors (1)\r\n    constructor(camera, enabled) {\r\n        super(camera, enabled);\r\n        // #region Properties (3)\r\n        this._settingsAdjustments = {\r\n            autoRotationSpeed: 2 * Math.PI / 60 / 60,\r\n            damping: 1.0,\r\n            movementSmoothness: 1.0,\r\n            panSpeed: 1.75,\r\n            rotationSpeed: Math.PI,\r\n            zoomSpeed: 0.025,\r\n        };\r\n        this._touchAdjustments = {\r\n            autoRotationSpeed: 1.0,\r\n            damping: 1.0,\r\n            movementSmoothness: 1.0,\r\n            panSpeed: 1.0 / 1.75,\r\n            rotationSpeed: 1.5,\r\n            zoomSpeed: 100.0,\r\n        };\r\n        this._cameraLogic = new CameraControlsLogic_1.CameraControlsLogic(this, this._settingsAdjustments, this._touchAdjustments);\r\n        this._cameraControlsEventDistribution = new CameraControlsEventDistribution_1.CameraControlsEventDistribution(this, this._cameraLogic);\r\n    }\r\n}\r\nexports.PerspectiveCameraControls = PerspectiveCameraControls;\r\n//# sourceMappingURL=PerspectiveCameraControls.js.map","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CameraInterpolationManager = void 0;\r\nconst TWEEN = __importStar(require(\"@tweenjs/tween.js\"));\r\nconst CameraCylindricalInterpolation_1 = require(\"./interpolationMethods/CameraCylindricalInterpolation\");\r\nconst CameraLinearInterpolation_1 = require(\"./interpolationMethods/CameraLinearInterpolation\");\r\nconst CameraMultipleInterpolation_1 = require(\"./interpolationMethods/CameraMultipleInterpolation\");\r\nconst CameraSphericalInterpolation_1 = require(\"./interpolationMethods/CameraSphericalInterpolation\");\r\nclass CameraInterpolationManager {\r\n    // #endregion Properties (2)\r\n    // #region Constructors (1)\r\n    constructor(_camera, _cameraControls) {\r\n        this._camera = _camera;\r\n        this._cameraControls = _cameraControls;\r\n        // #region Properties (2)\r\n        this.TweenWrapper = class {\r\n            constructor(options, cb, onComplete) {\r\n                this._properties = { delta: 0 };\r\n                this._tween = new TWEEN.Tween(this._properties);\r\n                this._tween.easing(options.easing);\r\n                this._tween.to({ delta: 1.0 }, options.duration);\r\n                this._tween.onUpdate((v) => {\r\n                    cb.onUpdate(v);\r\n                });\r\n                this._tween.onStop((v) => {\r\n                    if (cb.onStop)\r\n                        cb.onStop(v);\r\n                    this._resolve(true);\r\n                });\r\n                this._tween.onComplete((v) => {\r\n                    if (cb.onComplete)\r\n                        cb.onComplete(v);\r\n                    onComplete();\r\n                    this._resolve(true);\r\n                });\r\n            }\r\n            start() {\r\n                return new Promise((resolve) => {\r\n                    this._resolve = resolve;\r\n                    this._tween.start();\r\n                });\r\n            }\r\n            stop() {\r\n                this._tween.stop();\r\n            }\r\n        };\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Methods (3)\r\n    active() {\r\n        return this._tween ? true : false;\r\n    }\r\n    /**\r\n     * cameraTween\r\n     */\r\n    interpolate(path, options = {}) {\r\n        const newPath = [];\r\n        for (let i = 0; i < path.length; i++)\r\n            newPath.push({\r\n                position: path[i].position,\r\n                target: path[i].target,\r\n            });\r\n        if (this._tween) {\r\n            this._tween.stop();\r\n            this._tween = null;\r\n        }\r\n        const parsedOptions = this.optionsParser(options);\r\n        this._tween = new this.TweenWrapper(parsedOptions, newPath.length === 2 ?\r\n            this.getCameraInterpolation(newPath[0], newPath[1], parsedOptions.coordinates) :\r\n            new CameraMultipleInterpolation_1.CameraMultipleInterpolation(this._camera, this._cameraControls, newPath, parsedOptions.interpolation), () => { this._tween = null; });\r\n        return this._tween.start();\r\n    }\r\n    stop() {\r\n        if (this._tween)\r\n            this._tween.stop();\r\n        this._tween = null;\r\n    }\r\n    // #endregion Public Methods (3)\r\n    // #region Private Methods (2)\r\n    getCameraInterpolation(from, to, type) {\r\n        switch (type) {\r\n            case 'linear':\r\n                return new CameraLinearInterpolation_1.CameraLinearInterpolation(this._camera, this._cameraControls, from, to);\r\n            case 'spherical':\r\n                return new CameraSphericalInterpolation_1.CameraSphericalInterpolation(this._camera, this._cameraControls, from, to);\r\n            case 'cylindrical':\r\n                return new CameraCylindricalInterpolation_1.CameraCylindricalInterpolation(this._camera, this._cameraControls, from, to);\r\n            default:\r\n                return new CameraMultipleInterpolation_1.CameraMultipleInterpolation(this._camera, this._cameraControls, [from, to], TWEEN.Interpolation.CatmullRom);\r\n        }\r\n    }\r\n    optionsParser(options) {\r\n        let easing = TWEEN.Easing.Quartic.InOut;\r\n        if (typeof options.easing === 'string') {\r\n            const keys = options.easing.split('.');\r\n            const easingFamily = TWEEN.Easing[keys[0]];\r\n            if (easingFamily) {\r\n                const easingFunction = easingFamily[keys[1]];\r\n                if (easingFunction)\r\n                    easing = easingFunction;\r\n            }\r\n        }\r\n        else if (typeof options.easing === 'function') {\r\n            easing = options.easing;\r\n        }\r\n        let interpolation = TWEEN.Interpolation.CatmullRom;\r\n        if (typeof options.interpolation === 'string') {\r\n            const interpolationFunction = TWEEN.Interpolation[options.interpolation];\r\n            if (interpolationFunction && interpolationFunction !== TWEEN.Interpolation.Utils)\r\n                interpolation = interpolationFunction;\r\n        }\r\n        else if (typeof options.interpolation === 'function') {\r\n            interpolation = options.interpolation;\r\n        }\r\n        return {\r\n            duration: options.duration && options.duration >= 0 ? options.duration : 0,\r\n            easing,\r\n            coordinates: options.coordinates !== 'spherical' && options.coordinates !== 'linear' && options.coordinates !== 'cylindrical' ? 'cylindrical' : options.coordinates,\r\n            interpolation\r\n        };\r\n    }\r\n}\r\nexports.CameraInterpolationManager = CameraInterpolationManager;\r\n//# sourceMappingURL=CameraInterpolationManager.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CameraCylindricalInterpolation = void 0;\r\nconst gl_matrix_1 = require(\"gl-matrix\");\r\nclass CameraCylindricalInterpolation {\r\n    // #endregion Properties (10)\r\n    // #region Constructors (1)\r\n    constructor(_camera, _cameraControls, _from, _to) {\r\n        this._camera = _camera;\r\n        this._cameraControls = _cameraControls;\r\n        this._from = _from;\r\n        this._to = _to;\r\n        this._h_from = this._from.position[2] - this._from.target[2];\r\n        this._from_position_heightAdjusted = gl_matrix_1.vec3.fromValues(this._from.position[0], this._from.position[1], this._from.target[2]);\r\n        this._r_from = gl_matrix_1.vec3.distance(this._from_position_heightAdjusted, this._from.target);\r\n        this._dir_from = gl_matrix_1.vec3.normalize(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), this._from_position_heightAdjusted, this._from.target));\r\n        this._h_to = this._to.position[2] - this._to.target[2];\r\n        this._to_position_heightAdjusted = gl_matrix_1.vec3.fromValues(this._to.position[0], this._to.position[1], this._to.target[2]);\r\n        this._r_to = gl_matrix_1.vec3.distance(this._to_position_heightAdjusted, this._to.target);\r\n        this._dir_to = gl_matrix_1.vec3.normalize(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), this._to_position_heightAdjusted, this._to.target));\r\n        if (this._dir_from[0] === 0 && this._dir_from[1] === 0 && this._dir_from[2] === 0)\r\n            this._dir_from = gl_matrix_1.vec3.fromValues(1, 0, 0);\r\n        if (this._dir_to[0] === 0 && this._dir_to[1] === 0 && this._dir_to[2] === 0)\r\n            this._dir_to = gl_matrix_1.vec3.fromValues(1, 0, 0);\r\n        this._lorr = gl_matrix_1.vec3.cross(gl_matrix_1.vec3.create(), this._dir_to, this._dir_from);\r\n        // This is why people hate JavaScript. The dot product of two normalized vector is larger than 1 on occasion due to precision errors...\r\n        const dot1 = Math.min(1, Math.max(-1, gl_matrix_1.vec3.dot(this._dir_to, this._dir_from)));\r\n        const dot2 = Math.min(1, Math.max(-1, gl_matrix_1.vec3.dot(this._lorr, gl_matrix_1.vec3.fromValues(0, 0, 1))));\r\n        this._shortest_angle = dot2 > 0 ? -Math.acos(dot1) : Math.acos(dot1);\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Methods (3)\r\n    onComplete(value) {\r\n        const positionOffset = gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.fromValues(this._to.position[0], this._to.position[1], this._to.position[2]), this._cameraControls.getPositionWithUpdates());\r\n        this._cameraControls.applyPositionVector(positionOffset);\r\n        const targetOffset = gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.fromValues(this._to.target[0], this._to.target[1], this._to.target[2]), this._cameraControls.getTargetWithUpdates());\r\n        this._cameraControls.applyTargetVector(targetOffset);\r\n    }\r\n    onStop(value) {\r\n    }\r\n    onUpdate(value) {\r\n        const t = gl_matrix_1.vec3.add(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.multiply(gl_matrix_1.vec3.create(), this._from.target, gl_matrix_1.vec3.fromValues(1 - value.delta, 1 - value.delta, 1 - value.delta)), gl_matrix_1.vec3.multiply(gl_matrix_1.vec3.create(), this._to.target, gl_matrix_1.vec3.fromValues(value.delta, value.delta, value.delta)));\r\n        const targetOffset = gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), t, this._cameraControls.getTargetWithUpdates());\r\n        this._cameraControls.applyTargetVector(targetOffset);\r\n        const angle = this._shortest_angle * value.delta;\r\n        const dir = gl_matrix_1.vec3.transformQuat(gl_matrix_1.vec3.create(), this._dir_from, gl_matrix_1.quat.setAxisAngle(gl_matrix_1.quat.create(), gl_matrix_1.vec3.fromValues(0, 0, 1), angle));\r\n        const scalar = this._r_from * (1 - value.delta) + this._r_to * value.delta;\r\n        const p = gl_matrix_1.vec3.add(gl_matrix_1.vec3.create(), t, gl_matrix_1.vec3.multiply(gl_matrix_1.vec3.create(), dir, gl_matrix_1.vec3.fromValues(scalar, scalar, scalar)));\r\n        gl_matrix_1.vec3.add(p, p, gl_matrix_1.vec3.fromValues(0, 0, (this._h_from * (1 - value.delta) + this._h_to * value.delta)));\r\n        const positionOffset = gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), p, this._cameraControls.getPositionWithUpdates());\r\n        this._cameraControls.applyPositionVector(positionOffset);\r\n    }\r\n}\r\nexports.CameraCylindricalInterpolation = CameraCylindricalInterpolation;\r\n//# sourceMappingURL=CameraCylindricalInterpolation.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CameraLinearInterpolation = void 0;\r\nconst gl_matrix_1 = require(\"gl-matrix\");\r\nclass CameraLinearInterpolation {\r\n    // #region Constructors (1)\r\n    constructor(_camera, _cameraControls, _from, _to) {\r\n        this._camera = _camera;\r\n        this._cameraControls = _cameraControls;\r\n        this._from = _from;\r\n        this._to = _to;\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Methods (3)\r\n    onComplete(value) {\r\n        const positionOffset = gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), this._to.position, this._cameraControls.getPositionWithUpdates());\r\n        this._cameraControls.applyPositionVector(positionOffset);\r\n        const targetOffset = gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), this._to.target, this._cameraControls.getTargetWithUpdates());\r\n        this._cameraControls.applyTargetVector(targetOffset);\r\n    }\r\n    onStop(value) {\r\n    }\r\n    onUpdate(value) {\r\n        const p = gl_matrix_1.vec3.add(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.multiply(gl_matrix_1.vec3.create(), this._from.position, gl_matrix_1.vec3.fromValues(1 - value.delta, 1 - value.delta, 1 - value.delta)), gl_matrix_1.vec3.multiply(gl_matrix_1.vec3.create(), this._to.position, gl_matrix_1.vec3.fromValues(value.delta, value.delta, value.delta)));\r\n        const positionOffset = gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), p, this._cameraControls.getPositionWithUpdates());\r\n        this._cameraControls.applyPositionVector(positionOffset);\r\n        const t = gl_matrix_1.vec3.add(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.multiply(gl_matrix_1.vec3.create(), this._from.target, gl_matrix_1.vec3.fromValues(1 - value.delta, 1 - value.delta, 1 - value.delta)), gl_matrix_1.vec3.multiply(gl_matrix_1.vec3.create(), this._to.target, gl_matrix_1.vec3.fromValues(value.delta, value.delta, value.delta)));\r\n        const targetOffset = gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), t, this._cameraControls.getTargetWithUpdates());\r\n        this._cameraControls.applyTargetVector(targetOffset);\r\n    }\r\n}\r\nexports.CameraLinearInterpolation = CameraLinearInterpolation;\r\n//# sourceMappingURL=CameraLinearInterpolation.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CameraMultipleInterpolation = void 0;\r\nconst gl_matrix_1 = require(\"gl-matrix\");\r\nclass CameraMultipleInterpolation {\r\n    // #endregion Properties (1)\r\n    // #region Constructors (1)\r\n    constructor(_camera, _cameraControls, _path, _interpolationFunction) {\r\n        this._camera = _camera;\r\n        this._cameraControls = _cameraControls;\r\n        this._path = _path;\r\n        this._interpolationFunction = _interpolationFunction;\r\n        // #region Properties (1)\r\n        this.end = {\r\n            position: { x: [], y: [], z: [] },\r\n            target: { x: [], y: [], z: [] }\r\n        };\r\n        for (let i = 0; i < this._path.length; i++) {\r\n            this.end.position.x.push(this._path[i].position[0]);\r\n            this.end.position.y.push(this._path[i].position[1]);\r\n            this.end.position.z.push(this._path[i].position[2]);\r\n            this.end.target.x.push(this._path[i].target[0]);\r\n            this.end.target.y.push(this._path[i].target[1]);\r\n            this.end.target.z.push(this._path[i].target[2]);\r\n        }\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Methods (3)\r\n    onComplete(value) {\r\n        const positionOffset = gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.fromValues(this._path[this._path.length - 1].position[0], this._path[this._path.length - 1].position[1], this._path[this._path.length - 1].position[2]), this._cameraControls.getPositionWithUpdates());\r\n        this._cameraControls.applyPositionVector(positionOffset);\r\n        const targetOffset = gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.fromValues(this._path[this._path.length - 1].target[0], this._path[this._path.length - 1].target[1], this._path[this._path.length - 1].target[2]), this._cameraControls.getTargetWithUpdates());\r\n        this._cameraControls.applyTargetVector(targetOffset);\r\n    }\r\n    onStop(value) {\r\n    }\r\n    onUpdate(value) {\r\n        const p = gl_matrix_1.vec3.fromValues(this._interpolationFunction(this.end.position.x, value.delta), this._interpolationFunction(this.end.position.y, value.delta), this._interpolationFunction(this.end.position.z, value.delta));\r\n        const positionOffset = gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), p, this._cameraControls.getPositionWithUpdates());\r\n        this._cameraControls.applyPositionVector(positionOffset);\r\n        const t = gl_matrix_1.vec3.fromValues(this._interpolationFunction(this.end.target.x, value.delta), this._interpolationFunction(this.end.target.y, value.delta), this._interpolationFunction(this.end.target.z, value.delta));\r\n        const targetOffset = gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), t, this._cameraControls.getTargetWithUpdates());\r\n        this._cameraControls.applyTargetVector(targetOffset);\r\n    }\r\n}\r\nexports.CameraMultipleInterpolation = CameraMultipleInterpolation;\r\n//# sourceMappingURL=CameraMultipleInterpolation.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CameraSphericalInterpolation = void 0;\r\nconst gl_matrix_1 = require(\"gl-matrix\");\r\nclass CameraSphericalInterpolation {\r\n    // #endregion Properties (6)\r\n    // #region Constructors (1)\r\n    constructor(_camera, _cameraControls, _from, _to) {\r\n        this._camera = _camera;\r\n        this._cameraControls = _cameraControls;\r\n        this._from = _from;\r\n        this._to = _to;\r\n        this._radius_from = gl_matrix_1.vec3.distance(this._from.position, this._from.target);\r\n        this._direction_from = gl_matrix_1.vec3.normalize(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), this._from.position, this._from.target));\r\n        this._radius_to = gl_matrix_1.vec3.distance(this._to.position, this._to.target);\r\n        this._direction_to = gl_matrix_1.vec3.normalize(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), this._to.position, this._to.target));\r\n        this._axis = gl_matrix_1.vec3.normalize(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.cross(gl_matrix_1.vec3.create(), this._direction_to, this._direction_from));\r\n        this._c_angle = -Math.acos(Math.min(1, Math.max(-1, gl_matrix_1.vec3.dot(this._direction_to, this._direction_from))));\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Methods (3)\r\n    onComplete(value) {\r\n        const positionOffset = gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.fromValues(this._to.position[0], this._to.position[1], this._to.position[2]), this._cameraControls.getPositionWithUpdates());\r\n        this._cameraControls.applyPositionVector(positionOffset);\r\n        const targetOffset = gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.fromValues(this._to.target[0], this._to.target[1], this._to.target[2]), this._cameraControls.getTargetWithUpdates());\r\n        this._cameraControls.applyTargetVector(targetOffset);\r\n    }\r\n    onStop(value) {\r\n    }\r\n    onUpdate(value) {\r\n        const t = gl_matrix_1.vec3.add(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.multiply(gl_matrix_1.vec3.create(), this._from.target, gl_matrix_1.vec3.fromValues(1 - value.delta, 1 - value.delta, 1 - value.delta)), gl_matrix_1.vec3.multiply(gl_matrix_1.vec3.create(), this._to.target, gl_matrix_1.vec3.fromValues(value.delta, value.delta, value.delta)));\r\n        const targetOffset = gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), t, this._cameraControls.getTargetWithUpdates());\r\n        this._cameraControls.applyTargetVector(targetOffset);\r\n        const angle = this._c_angle * value.delta;\r\n        const dir = gl_matrix_1.vec3.normalize(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.transformQuat(gl_matrix_1.vec3.create(), this._direction_from, gl_matrix_1.quat.setAxisAngle(gl_matrix_1.quat.create(), this._axis, angle)));\r\n        const scalar = (this._radius_from * (1 - value.delta) + this._radius_to * value.delta);\r\n        const p = gl_matrix_1.vec3.add(gl_matrix_1.vec3.create(), t, gl_matrix_1.vec3.multiply(gl_matrix_1.vec3.create(), dir, gl_matrix_1.vec3.fromValues(scalar, scalar, scalar)));\r\n        const positionOffset = gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), p, this._cameraControls.getPositionWithUpdates());\r\n        this._cameraControls.applyPositionVector(positionOffset);\r\n    }\r\n}\r\nexports.CameraSphericalInterpolation = CameraSphericalInterpolation;\r\n//# sourceMappingURL=CameraSphericalInterpolation.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.OrthographicCameraControls = exports.PerspectiveCameraControls = exports.OrthographicCamera = exports.PerspectiveCamera = exports.ORTHOGRAPHIC_CAMERA_DIRECTION = exports.CAMERA_TYPE = exports.AbstractCamera = exports.CameraEngine = void 0;\r\nconst AbstractCamera_1 = require(\"./implementation/camera/AbstractCamera\");\r\nObject.defineProperty(exports, \"AbstractCamera\", { enumerable: true, get: function () { return AbstractCamera_1.AbstractCamera; } });\r\nconst ICameraEngine_1 = require(\"./interfaces/ICameraEngine\");\r\nObject.defineProperty(exports, \"CAMERA_TYPE\", { enumerable: true, get: function () { return ICameraEngine_1.CAMERA_TYPE; } });\r\nconst CameraEngine_1 = require(\"./implementation/CameraEngine\");\r\nObject.defineProperty(exports, \"CameraEngine\", { enumerable: true, get: function () { return CameraEngine_1.CameraEngine; } });\r\nconst IOrthographicCamera_1 = require(\"./interfaces/camera/IOrthographicCamera\");\r\nObject.defineProperty(exports, \"ORTHOGRAPHIC_CAMERA_DIRECTION\", { enumerable: true, get: function () { return IOrthographicCamera_1.ORTHOGRAPHIC_CAMERA_DIRECTION; } });\r\nconst OrthographicCamera_1 = require(\"./implementation/camera/OrthographicCamera\");\r\nObject.defineProperty(exports, \"OrthographicCamera\", { enumerable: true, get: function () { return OrthographicCamera_1.OrthographicCamera; } });\r\nconst OrthographicCameraControls_1 = require(\"./implementation/controls/OrthographicCameraControls\");\r\nObject.defineProperty(exports, \"OrthographicCameraControls\", { enumerable: true, get: function () { return OrthographicCameraControls_1.OrthographicCameraControls; } });\r\nconst PerspectiveCamera_1 = require(\"./implementation/camera/PerspectiveCamera\");\r\nObject.defineProperty(exports, \"PerspectiveCamera\", { enumerable: true, get: function () { return PerspectiveCamera_1.PerspectiveCamera; } });\r\nconst PerspectiveCameraControls_1 = require(\"./implementation/controls/PerspectiveCameraControls\");\r\nObject.defineProperty(exports, \"PerspectiveCameraControls\", { enumerable: true, get: function () { return PerspectiveCameraControls_1.PerspectiveCameraControls; } });\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CAMERA_TYPE = void 0;\r\n// #endregion Interfaces (1)\r\n// #region Enums (1)\r\nvar CAMERA_TYPE;\r\n(function (CAMERA_TYPE) {\r\n    CAMERA_TYPE[\"PERSPECTIVE\"] = \"perspective\";\r\n    CAMERA_TYPE[\"ORTHOGRAPHIC\"] = \"orthographic\";\r\n})(CAMERA_TYPE = exports.CAMERA_TYPE || (exports.CAMERA_TYPE = {}));\r\n// #endregion Enums (1)\r\n//# sourceMappingURL=ICameraEngine.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ORTHOGRAPHIC_CAMERA_DIRECTION = void 0;\r\n// #endregion Interfaces (1)\r\n// #region Enums (1)\r\nvar ORTHOGRAPHIC_CAMERA_DIRECTION;\r\n(function (ORTHOGRAPHIC_CAMERA_DIRECTION) {\r\n    ORTHOGRAPHIC_CAMERA_DIRECTION[\"TOP\"] = \"top\";\r\n    ORTHOGRAPHIC_CAMERA_DIRECTION[\"BOTTOM\"] = \"bottom\";\r\n    ORTHOGRAPHIC_CAMERA_DIRECTION[\"LEFT\"] = \"left\";\r\n    ORTHOGRAPHIC_CAMERA_DIRECTION[\"RIGHT\"] = \"right\";\r\n    ORTHOGRAPHIC_CAMERA_DIRECTION[\"FRONT\"] = \"front\";\r\n    ORTHOGRAPHIC_CAMERA_DIRECTION[\"BACK\"] = \"back\";\r\n    ORTHOGRAPHIC_CAMERA_DIRECTION[\"CUSTOM\"] = \"custom\";\r\n})(ORTHOGRAPHIC_CAMERA_DIRECTION = exports.ORTHOGRAPHIC_CAMERA_DIRECTION || (exports.ORTHOGRAPHIC_CAMERA_DIRECTION = {}));\r\n// #endregion Enums (1)\r\n//# sourceMappingURL=IOrthographicCamera.js.map","/**\n * The Ease class provides a collection of easing functions for use with tween.js.\n */\nvar Easing = {\n    Linear: {\n        None: function (amount) {\n            return amount;\n        },\n    },\n    Quadratic: {\n        In: function (amount) {\n            return amount * amount;\n        },\n        Out: function (amount) {\n            return amount * (2 - amount);\n        },\n        InOut: function (amount) {\n            if ((amount *= 2) < 1) {\n                return 0.5 * amount * amount;\n            }\n            return -0.5 * (--amount * (amount - 2) - 1);\n        },\n    },\n    Cubic: {\n        In: function (amount) {\n            return amount * amount * amount;\n        },\n        Out: function (amount) {\n            return --amount * amount * amount + 1;\n        },\n        InOut: function (amount) {\n            if ((amount *= 2) < 1) {\n                return 0.5 * amount * amount * amount;\n            }\n            return 0.5 * ((amount -= 2) * amount * amount + 2);\n        },\n    },\n    Quartic: {\n        In: function (amount) {\n            return amount * amount * amount * amount;\n        },\n        Out: function (amount) {\n            return 1 - --amount * amount * amount * amount;\n        },\n        InOut: function (amount) {\n            if ((amount *= 2) < 1) {\n                return 0.5 * amount * amount * amount * amount;\n            }\n            return -0.5 * ((amount -= 2) * amount * amount * amount - 2);\n        },\n    },\n    Quintic: {\n        In: function (amount) {\n            return amount * amount * amount * amount * amount;\n        },\n        Out: function (amount) {\n            return --amount * amount * amount * amount * amount + 1;\n        },\n        InOut: function (amount) {\n            if ((amount *= 2) < 1) {\n                return 0.5 * amount * amount * amount * amount * amount;\n            }\n            return 0.5 * ((amount -= 2) * amount * amount * amount * amount + 2);\n        },\n    },\n    Sinusoidal: {\n        In: function (amount) {\n            return 1 - Math.cos((amount * Math.PI) / 2);\n        },\n        Out: function (amount) {\n            return Math.sin((amount * Math.PI) / 2);\n        },\n        InOut: function (amount) {\n            return 0.5 * (1 - Math.cos(Math.PI * amount));\n        },\n    },\n    Exponential: {\n        In: function (amount) {\n            return amount === 0 ? 0 : Math.pow(1024, amount - 1);\n        },\n        Out: function (amount) {\n            return amount === 1 ? 1 : 1 - Math.pow(2, -10 * amount);\n        },\n        InOut: function (amount) {\n            if (amount === 0) {\n                return 0;\n            }\n            if (amount === 1) {\n                return 1;\n            }\n            if ((amount *= 2) < 1) {\n                return 0.5 * Math.pow(1024, amount - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (amount - 1)) + 2);\n        },\n    },\n    Circular: {\n        In: function (amount) {\n            return 1 - Math.sqrt(1 - amount * amount);\n        },\n        Out: function (amount) {\n            return Math.sqrt(1 - --amount * amount);\n        },\n        InOut: function (amount) {\n            if ((amount *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - amount * amount) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (amount -= 2) * amount) + 1);\n        },\n    },\n    Elastic: {\n        In: function (amount) {\n            if (amount === 0) {\n                return 0;\n            }\n            if (amount === 1) {\n                return 1;\n            }\n            return -Math.pow(2, 10 * (amount - 1)) * Math.sin((amount - 1.1) * 5 * Math.PI);\n        },\n        Out: function (amount) {\n            if (amount === 0) {\n                return 0;\n            }\n            if (amount === 1) {\n                return 1;\n            }\n            return Math.pow(2, -10 * amount) * Math.sin((amount - 0.1) * 5 * Math.PI) + 1;\n        },\n        InOut: function (amount) {\n            if (amount === 0) {\n                return 0;\n            }\n            if (amount === 1) {\n                return 1;\n            }\n            amount *= 2;\n            if (amount < 1) {\n                return -0.5 * Math.pow(2, 10 * (amount - 1)) * Math.sin((amount - 1.1) * 5 * Math.PI);\n            }\n            return 0.5 * Math.pow(2, -10 * (amount - 1)) * Math.sin((amount - 1.1) * 5 * Math.PI) + 1;\n        },\n    },\n    Back: {\n        In: function (amount) {\n            var s = 1.70158;\n            return amount * amount * ((s + 1) * amount - s);\n        },\n        Out: function (amount) {\n            var s = 1.70158;\n            return --amount * amount * ((s + 1) * amount + s) + 1;\n        },\n        InOut: function (amount) {\n            var s = 1.70158 * 1.525;\n            if ((amount *= 2) < 1) {\n                return 0.5 * (amount * amount * ((s + 1) * amount - s));\n            }\n            return 0.5 * ((amount -= 2) * amount * ((s + 1) * amount + s) + 2);\n        },\n    },\n    Bounce: {\n        In: function (amount) {\n            return 1 - Easing.Bounce.Out(1 - amount);\n        },\n        Out: function (amount) {\n            if (amount < 1 / 2.75) {\n                return 7.5625 * amount * amount;\n            }\n            else if (amount < 2 / 2.75) {\n                return 7.5625 * (amount -= 1.5 / 2.75) * amount + 0.75;\n            }\n            else if (amount < 2.5 / 2.75) {\n                return 7.5625 * (amount -= 2.25 / 2.75) * amount + 0.9375;\n            }\n            else {\n                return 7.5625 * (amount -= 2.625 / 2.75) * amount + 0.984375;\n            }\n        },\n        InOut: function (amount) {\n            if (amount < 0.5) {\n                return Easing.Bounce.In(amount * 2) * 0.5;\n            }\n            return Easing.Bounce.Out(amount * 2 - 1) * 0.5 + 0.5;\n        },\n    },\n};\n\nvar now;\n// Include a performance.now polyfill.\n// In node.js, use process.hrtime.\n// eslint-disable-next-line\n// @ts-ignore\nif (typeof self === 'undefined' && typeof process !== 'undefined' && process.hrtime) {\n    now = function () {\n        // eslint-disable-next-line\n        // @ts-ignore\n        var time = process.hrtime();\n        // Convert [seconds, nanoseconds] to milliseconds.\n        return time[0] * 1000 + time[1] / 1000000;\n    };\n}\n// In a browser, use self.performance.now if it is available.\nelse if (typeof self !== 'undefined' && self.performance !== undefined && self.performance.now !== undefined) {\n    // This must be bound, because directly assigning this function\n    // leads to an invocation exception in Chrome.\n    now = self.performance.now.bind(self.performance);\n}\n// Use Date.now if it is available.\nelse if (Date.now !== undefined) {\n    now = Date.now;\n}\n// Otherwise, use 'new Date().getTime()'.\nelse {\n    now = function () {\n        return new Date().getTime();\n    };\n}\nvar now$1 = now;\n\n/**\n * Controlling groups of tweens\n *\n * Using the TWEEN singleton to manage your tweens can cause issues in large apps with many components.\n * In these cases, you may want to create your own smaller groups of tween\n */\nvar Group = /** @class */ (function () {\n    function Group() {\n        this._tweens = {};\n        this._tweensAddedDuringUpdate = {};\n    }\n    Group.prototype.getAll = function () {\n        var _this = this;\n        return Object.keys(this._tweens).map(function (tweenId) {\n            return _this._tweens[tweenId];\n        });\n    };\n    Group.prototype.removeAll = function () {\n        this._tweens = {};\n    };\n    Group.prototype.add = function (tween) {\n        this._tweens[tween.getId()] = tween;\n        this._tweensAddedDuringUpdate[tween.getId()] = tween;\n    };\n    Group.prototype.remove = function (tween) {\n        delete this._tweens[tween.getId()];\n        delete this._tweensAddedDuringUpdate[tween.getId()];\n    };\n    Group.prototype.update = function (time, preserve) {\n        if (time === void 0) { time = now$1(); }\n        if (preserve === void 0) { preserve = false; }\n        var tweenIds = Object.keys(this._tweens);\n        if (tweenIds.length === 0) {\n            return false;\n        }\n        // Tweens are updated in \"batches\". If you add a new tween during an\n        // update, then the new tween will be updated in the next batch.\n        // If you remove a tween during an update, it may or may not be updated.\n        // However, if the removed tween was added during the current batch,\n        // then it will not be updated.\n        while (tweenIds.length > 0) {\n            this._tweensAddedDuringUpdate = {};\n            for (var i = 0; i < tweenIds.length; i++) {\n                var tween = this._tweens[tweenIds[i]];\n                var autoStart = !preserve;\n                if (tween && tween.update(time, autoStart) === false && !preserve) {\n                    delete this._tweens[tweenIds[i]];\n                }\n            }\n            tweenIds = Object.keys(this._tweensAddedDuringUpdate);\n        }\n        return true;\n    };\n    return Group;\n}());\n\n/**\n *\n */\nvar Interpolation = {\n    Linear: function (v, k) {\n        var m = v.length - 1;\n        var f = m * k;\n        var i = Math.floor(f);\n        var fn = Interpolation.Utils.Linear;\n        if (k < 0) {\n            return fn(v[0], v[1], f);\n        }\n        if (k > 1) {\n            return fn(v[m], v[m - 1], m - f);\n        }\n        return fn(v[i], v[i + 1 > m ? m : i + 1], f - i);\n    },\n    Bezier: function (v, k) {\n        var b = 0;\n        var n = v.length - 1;\n        var pw = Math.pow;\n        var bn = Interpolation.Utils.Bernstein;\n        for (var i = 0; i <= n; i++) {\n            b += pw(1 - k, n - i) * pw(k, i) * v[i] * bn(n, i);\n        }\n        return b;\n    },\n    CatmullRom: function (v, k) {\n        var m = v.length - 1;\n        var f = m * k;\n        var i = Math.floor(f);\n        var fn = Interpolation.Utils.CatmullRom;\n        if (v[0] === v[m]) {\n            if (k < 0) {\n                i = Math.floor((f = m * (1 + k)));\n            }\n            return fn(v[(i - 1 + m) % m], v[i], v[(i + 1) % m], v[(i + 2) % m], f - i);\n        }\n        else {\n            if (k < 0) {\n                return v[0] - (fn(v[0], v[0], v[1], v[1], -f) - v[0]);\n            }\n            if (k > 1) {\n                return v[m] - (fn(v[m], v[m], v[m - 1], v[m - 1], f - m) - v[m]);\n            }\n            return fn(v[i ? i - 1 : 0], v[i], v[m < i + 1 ? m : i + 1], v[m < i + 2 ? m : i + 2], f - i);\n        }\n    },\n    Utils: {\n        Linear: function (p0, p1, t) {\n            return (p1 - p0) * t + p0;\n        },\n        Bernstein: function (n, i) {\n            var fc = Interpolation.Utils.Factorial;\n            return fc(n) / fc(i) / fc(n - i);\n        },\n        Factorial: (function () {\n            var a = [1];\n            return function (n) {\n                var s = 1;\n                if (a[n]) {\n                    return a[n];\n                }\n                for (var i = n; i > 1; i--) {\n                    s *= i;\n                }\n                a[n] = s;\n                return s;\n            };\n        })(),\n        CatmullRom: function (p0, p1, p2, p3, t) {\n            var v0 = (p2 - p0) * 0.5;\n            var v1 = (p3 - p1) * 0.5;\n            var t2 = t * t;\n            var t3 = t * t2;\n            return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n        },\n    },\n};\n\n/**\n * Utils\n */\nvar Sequence = /** @class */ (function () {\n    function Sequence() {\n    }\n    Sequence.nextId = function () {\n        return Sequence._nextId++;\n    };\n    Sequence._nextId = 0;\n    return Sequence;\n}());\n\nvar mainGroup = new Group();\n\n/**\n * Tween.js - Licensed under the MIT license\n * https://github.com/tweenjs/tween.js\n * ----------------------------------------------\n *\n * See https://github.com/tweenjs/tween.js/graphs/contributors for the full list of contributors.\n * Thank you all, you're awesome!\n */\nvar Tween = /** @class */ (function () {\n    function Tween(_object, _group) {\n        if (_group === void 0) { _group = mainGroup; }\n        this._object = _object;\n        this._group = _group;\n        this._isPaused = false;\n        this._pauseStart = 0;\n        this._valuesStart = {};\n        this._valuesEnd = {};\n        this._valuesStartRepeat = {};\n        this._duration = 1000;\n        this._initialRepeat = 0;\n        this._repeat = 0;\n        this._yoyo = false;\n        this._isPlaying = false;\n        this._reversed = false;\n        this._delayTime = 0;\n        this._startTime = 0;\n        this._easingFunction = Easing.Linear.None;\n        this._interpolationFunction = Interpolation.Linear;\n        this._chainedTweens = [];\n        this._onStartCallbackFired = false;\n        this._id = Sequence.nextId();\n        this._isChainStopped = false;\n        this._goToEnd = false;\n    }\n    Tween.prototype.getId = function () {\n        return this._id;\n    };\n    Tween.prototype.isPlaying = function () {\n        return this._isPlaying;\n    };\n    Tween.prototype.isPaused = function () {\n        return this._isPaused;\n    };\n    Tween.prototype.to = function (properties, duration) {\n        // TODO? restore this, then update the 07_dynamic_to example to set fox\n        // tween's to on each update. That way the behavior is opt-in (there's\n        // currently no opt-out).\n        // for (const prop in properties) this._valuesEnd[prop] = properties[prop]\n        this._valuesEnd = Object.create(properties);\n        if (duration !== undefined) {\n            this._duration = duration;\n        }\n        return this;\n    };\n    Tween.prototype.duration = function (d) {\n        this._duration = d;\n        return this;\n    };\n    Tween.prototype.start = function (time) {\n        if (this._isPlaying) {\n            return this;\n        }\n        // eslint-disable-next-line\n        this._group && this._group.add(this);\n        this._repeat = this._initialRepeat;\n        if (this._reversed) {\n            // If we were reversed (f.e. using the yoyo feature) then we need to\n            // flip the tween direction back to forward.\n            this._reversed = false;\n            for (var property in this._valuesStartRepeat) {\n                this._swapEndStartRepeatValues(property);\n                this._valuesStart[property] = this._valuesStartRepeat[property];\n            }\n        }\n        this._isPlaying = true;\n        this._isPaused = false;\n        this._onStartCallbackFired = false;\n        this._isChainStopped = false;\n        this._startTime = time !== undefined ? (typeof time === 'string' ? now$1() + parseFloat(time) : time) : now$1();\n        this._startTime += this._delayTime;\n        this._setupProperties(this._object, this._valuesStart, this._valuesEnd, this._valuesStartRepeat);\n        return this;\n    };\n    Tween.prototype._setupProperties = function (_object, _valuesStart, _valuesEnd, _valuesStartRepeat) {\n        for (var property in _valuesEnd) {\n            var startValue = _object[property];\n            var startValueIsArray = Array.isArray(startValue);\n            var propType = startValueIsArray ? 'array' : typeof startValue;\n            var isInterpolationList = !startValueIsArray && Array.isArray(_valuesEnd[property]);\n            // If `to()` specifies a property that doesn't exist in the source object,\n            // we should not set that property in the object\n            if (propType === 'undefined' || propType === 'function') {\n                continue;\n            }\n            // Check if an Array was provided as property value\n            if (isInterpolationList) {\n                var endValues = _valuesEnd[property];\n                if (endValues.length === 0) {\n                    continue;\n                }\n                // handle an array of relative values\n                endValues = endValues.map(this._handleRelativeValue.bind(this, startValue));\n                // Create a local copy of the Array with the start value at the front\n                _valuesEnd[property] = [startValue].concat(endValues);\n            }\n            // handle the deepness of the values\n            if ((propType === 'object' || startValueIsArray) && startValue && !isInterpolationList) {\n                _valuesStart[property] = startValueIsArray ? [] : {};\n                // eslint-disable-next-line\n                for (var prop in startValue) {\n                    // eslint-disable-next-line\n                    // @ts-ignore FIXME?\n                    _valuesStart[property][prop] = startValue[prop];\n                }\n                _valuesStartRepeat[property] = startValueIsArray ? [] : {}; // TODO? repeat nested values? And yoyo? And array values?\n                // eslint-disable-next-line\n                // @ts-ignore FIXME?\n                this._setupProperties(startValue, _valuesStart[property], _valuesEnd[property], _valuesStartRepeat[property]);\n            }\n            else {\n                // Save the starting value, but only once.\n                if (typeof _valuesStart[property] === 'undefined') {\n                    _valuesStart[property] = startValue;\n                }\n                if (!startValueIsArray) {\n                    // eslint-disable-next-line\n                    // @ts-ignore FIXME?\n                    _valuesStart[property] *= 1.0; // Ensures we're using numbers, not strings\n                }\n                if (isInterpolationList) {\n                    // eslint-disable-next-line\n                    // @ts-ignore FIXME?\n                    _valuesStartRepeat[property] = _valuesEnd[property].slice().reverse();\n                }\n                else {\n                    _valuesStartRepeat[property] = _valuesStart[property] || 0;\n                }\n            }\n        }\n    };\n    Tween.prototype.stop = function () {\n        if (!this._isChainStopped) {\n            this._isChainStopped = true;\n            this.stopChainedTweens();\n        }\n        if (!this._isPlaying) {\n            return this;\n        }\n        // eslint-disable-next-line\n        this._group && this._group.remove(this);\n        this._isPlaying = false;\n        this._isPaused = false;\n        if (this._onStopCallback) {\n            this._onStopCallback(this._object);\n        }\n        return this;\n    };\n    Tween.prototype.end = function () {\n        this._goToEnd = true;\n        this.update(Infinity);\n        return this;\n    };\n    Tween.prototype.pause = function (time) {\n        if (time === void 0) { time = now$1(); }\n        if (this._isPaused || !this._isPlaying) {\n            return this;\n        }\n        this._isPaused = true;\n        this._pauseStart = time;\n        // eslint-disable-next-line\n        this._group && this._group.remove(this);\n        return this;\n    };\n    Tween.prototype.resume = function (time) {\n        if (time === void 0) { time = now$1(); }\n        if (!this._isPaused || !this._isPlaying) {\n            return this;\n        }\n        this._isPaused = false;\n        this._startTime += time - this._pauseStart;\n        this._pauseStart = 0;\n        // eslint-disable-next-line\n        this._group && this._group.add(this);\n        return this;\n    };\n    Tween.prototype.stopChainedTweens = function () {\n        for (var i = 0, numChainedTweens = this._chainedTweens.length; i < numChainedTweens; i++) {\n            this._chainedTweens[i].stop();\n        }\n        return this;\n    };\n    Tween.prototype.group = function (group) {\n        this._group = group;\n        return this;\n    };\n    Tween.prototype.delay = function (amount) {\n        this._delayTime = amount;\n        return this;\n    };\n    Tween.prototype.repeat = function (times) {\n        this._initialRepeat = times;\n        this._repeat = times;\n        return this;\n    };\n    Tween.prototype.repeatDelay = function (amount) {\n        this._repeatDelayTime = amount;\n        return this;\n    };\n    Tween.prototype.yoyo = function (yoyo) {\n        this._yoyo = yoyo;\n        return this;\n    };\n    Tween.prototype.easing = function (easingFunction) {\n        this._easingFunction = easingFunction;\n        return this;\n    };\n    Tween.prototype.interpolation = function (interpolationFunction) {\n        this._interpolationFunction = interpolationFunction;\n        return this;\n    };\n    Tween.prototype.chain = function () {\n        var tweens = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            tweens[_i] = arguments[_i];\n        }\n        this._chainedTweens = tweens;\n        return this;\n    };\n    Tween.prototype.onStart = function (callback) {\n        this._onStartCallback = callback;\n        return this;\n    };\n    Tween.prototype.onUpdate = function (callback) {\n        this._onUpdateCallback = callback;\n        return this;\n    };\n    Tween.prototype.onRepeat = function (callback) {\n        this._onRepeatCallback = callback;\n        return this;\n    };\n    Tween.prototype.onComplete = function (callback) {\n        this._onCompleteCallback = callback;\n        return this;\n    };\n    Tween.prototype.onStop = function (callback) {\n        this._onStopCallback = callback;\n        return this;\n    };\n    /**\n     * @returns true if the tween is still playing after the update, false\n     * otherwise (calling update on a paused tween still returns true because\n     * it is still playing, just paused).\n     */\n    Tween.prototype.update = function (time, autoStart) {\n        if (time === void 0) { time = now$1(); }\n        if (autoStart === void 0) { autoStart = true; }\n        if (this._isPaused)\n            return true;\n        var property;\n        var elapsed;\n        var endTime = this._startTime + this._duration;\n        if (!this._goToEnd && !this._isPlaying) {\n            if (time > endTime)\n                return false;\n            if (autoStart)\n                this.start(time);\n        }\n        this._goToEnd = false;\n        if (time < this._startTime) {\n            return true;\n        }\n        if (this._onStartCallbackFired === false) {\n            if (this._onStartCallback) {\n                this._onStartCallback(this._object);\n            }\n            this._onStartCallbackFired = true;\n        }\n        elapsed = (time - this._startTime) / this._duration;\n        elapsed = this._duration === 0 || elapsed > 1 ? 1 : elapsed;\n        var value = this._easingFunction(elapsed);\n        // properties transformations\n        this._updateProperties(this._object, this._valuesStart, this._valuesEnd, value);\n        if (this._onUpdateCallback) {\n            this._onUpdateCallback(this._object, elapsed);\n        }\n        if (elapsed === 1) {\n            if (this._repeat > 0) {\n                if (isFinite(this._repeat)) {\n                    this._repeat--;\n                }\n                // Reassign starting values, restart by making startTime = now\n                for (property in this._valuesStartRepeat) {\n                    if (!this._yoyo && typeof this._valuesEnd[property] === 'string') {\n                        this._valuesStartRepeat[property] =\n                            // eslint-disable-next-line\n                            // @ts-ignore FIXME?\n                            this._valuesStartRepeat[property] + parseFloat(this._valuesEnd[property]);\n                    }\n                    if (this._yoyo) {\n                        this._swapEndStartRepeatValues(property);\n                    }\n                    this._valuesStart[property] = this._valuesStartRepeat[property];\n                }\n                if (this._yoyo) {\n                    this._reversed = !this._reversed;\n                }\n                if (this._repeatDelayTime !== undefined) {\n                    this._startTime = time + this._repeatDelayTime;\n                }\n                else {\n                    this._startTime = time + this._delayTime;\n                }\n                if (this._onRepeatCallback) {\n                    this._onRepeatCallback(this._object);\n                }\n                return true;\n            }\n            else {\n                if (this._onCompleteCallback) {\n                    this._onCompleteCallback(this._object);\n                }\n                for (var i = 0, numChainedTweens = this._chainedTweens.length; i < numChainedTweens; i++) {\n                    // Make the chained tweens start exactly at the time they should,\n                    // even if the `update()` method was called way past the duration of the tween\n                    this._chainedTweens[i].start(this._startTime + this._duration);\n                }\n                this._isPlaying = false;\n                return false;\n            }\n        }\n        return true;\n    };\n    Tween.prototype._updateProperties = function (_object, _valuesStart, _valuesEnd, value) {\n        for (var property in _valuesEnd) {\n            // Don't update properties that do not exist in the source object\n            if (_valuesStart[property] === undefined) {\n                continue;\n            }\n            var start = _valuesStart[property] || 0;\n            var end = _valuesEnd[property];\n            var startIsArray = Array.isArray(_object[property]);\n            var endIsArray = Array.isArray(end);\n            var isInterpolationList = !startIsArray && endIsArray;\n            if (isInterpolationList) {\n                _object[property] = this._interpolationFunction(end, value);\n            }\n            else if (typeof end === 'object' && end) {\n                // eslint-disable-next-line\n                // @ts-ignore FIXME?\n                this._updateProperties(_object[property], start, end, value);\n            }\n            else {\n                // Parses relative end values with start as base (e.g.: +10, -3)\n                end = this._handleRelativeValue(start, end);\n                // Protect against non numeric properties.\n                if (typeof end === 'number') {\n                    // eslint-disable-next-line\n                    // @ts-ignore FIXME?\n                    _object[property] = start + (end - start) * value;\n                }\n            }\n        }\n    };\n    Tween.prototype._handleRelativeValue = function (start, end) {\n        if (typeof end !== 'string') {\n            return end;\n        }\n        if (end.charAt(0) === '+' || end.charAt(0) === '-') {\n            return start + parseFloat(end);\n        }\n        else {\n            return parseFloat(end);\n        }\n    };\n    Tween.prototype._swapEndStartRepeatValues = function (property) {\n        var tmp = this._valuesStartRepeat[property];\n        var endValue = this._valuesEnd[property];\n        if (typeof endValue === 'string') {\n            this._valuesStartRepeat[property] = this._valuesStartRepeat[property] + parseFloat(endValue);\n        }\n        else {\n            this._valuesStartRepeat[property] = this._valuesEnd[property];\n        }\n        this._valuesEnd[property] = tmp;\n    };\n    return Tween;\n}());\n\nvar VERSION = '18.6.4';\n\n/**\n * Tween.js - Licensed under the MIT license\n * https://github.com/tweenjs/tween.js\n * ----------------------------------------------\n *\n * See https://github.com/tweenjs/tween.js/graphs/contributors for the full list of contributors.\n * Thank you all, you're awesome!\n */\nvar nextId = Sequence.nextId;\n/**\n * Controlling groups of tweens\n *\n * Using the TWEEN singleton to manage your tweens can cause issues in large apps with many components.\n * In these cases, you may want to create your own smaller groups of tweens.\n */\nvar TWEEN = mainGroup;\n// This is the best way to export things in a way that's compatible with both ES\n// Modules and CommonJS, without build hacks, and so as not to break the\n// existing API.\n// https://github.com/rollup/rollup/issues/1961#issuecomment-423037881\nvar getAll = TWEEN.getAll.bind(TWEEN);\nvar removeAll = TWEEN.removeAll.bind(TWEEN);\nvar add = TWEEN.add.bind(TWEEN);\nvar remove = TWEEN.remove.bind(TWEEN);\nvar update = TWEEN.update.bind(TWEEN);\nvar exports = {\n    Easing: Easing,\n    Group: Group,\n    Interpolation: Interpolation,\n    now: now$1,\n    Sequence: Sequence,\n    nextId: nextId,\n    Tween: Tween,\n    VERSION: VERSION,\n    getAll: getAll,\n    removeAll: removeAll,\n    add: add,\n    remove: remove,\n    update: update,\n};\n\nexport default exports;\nexport { Easing, Group, Interpolation, Sequence, Tween, VERSION, add, getAll, nextId, now$1 as now, remove, removeAll, update };\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Canvas = void 0;\r\nclass Canvas {\r\n    // #region Constructors (1)\r\n    constructor(_id, _originalDefinition, _canvasElement) {\r\n        this._id = _id;\r\n        this._originalDefinition = _originalDefinition;\r\n        this._canvasElement = _canvasElement;\r\n        if (this._originalDefinition && this._originalDefinition instanceof HTMLCanvasElement)\r\n            this._originalDefinition = this._originalDefinition.cloneNode(true);\r\n        if (!_canvasElement) {\r\n            this._canvasElement = document.createElement('canvas');\r\n            this._canvasElement.id = this._id;\r\n        }\r\n        else {\r\n            this._canvasElement = _canvasElement;\r\n        }\r\n        this._canvasElement.style.touchAction = 'none';\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Accessors (2)\r\n    get canvasElement() {\r\n        return this._canvasElement;\r\n    }\r\n    get id() {\r\n        return this._id;\r\n    }\r\n    // #endregion Public Accessors (2)\r\n    // #region Public Methods (1)\r\n    reset() {\r\n        var _a;\r\n        const parent = (_a = this._canvasElement) === null || _a === void 0 ? void 0 : _a.parentElement;\r\n        parent === null || parent === void 0 ? void 0 : parent.removeChild(this._canvasElement);\r\n        if (this._originalDefinition instanceof HTMLCanvasElement) {\r\n            parent === null || parent === void 0 ? void 0 : parent.appendChild(this._canvasElement);\r\n        }\r\n    }\r\n}\r\nexports.Canvas = Canvas;\r\n//# sourceMappingURL=Canvas.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CanvasEngine = void 0;\r\nconst viewer_shared_services_1 = require(\"@shapediver/viewer.shared.services\");\r\nconst Canvas_1 = require(\"./Canvas\");\r\nclass CanvasEngine {\r\n    constructor() {\r\n        // #region Properties (3)\r\n        this._canvasDictionary = {};\r\n        this._uuidGenerator = viewer_shared_services_1.UuidGenerator.instance;\r\n        // #endregion Public Methods (2)\r\n    }\r\n    // #endregion Properties (3)\r\n    // #region Public Static Accessors (1)\r\n    static get instance() {\r\n        return this._instance || (this._instance = new this());\r\n    }\r\n    // #endregion Public Static Accessors (1)\r\n    // #region Public Methods (2)\r\n    /**\r\n     * Creates a canvas object that could in the future be expanded to hold more information\r\n     * The definition of the canvas can be:\r\n     * - empty: A canvas is created with an unique ID.\r\n     * - string:\r\n     *      - If a canvas with this ID was created, this canvas is returned.\r\n     *      - If there is an HTMLCanvasElement in the document with this ID, this is used.\r\n     *      - If there is no HTMLElement found in the document with this ID, a canvas with ID will be created.\r\n     * - HTMLCanvasElement: A Canvas Object will be created with this element. If there is no ID, one will be generated.\r\n     *\r\n     * @param canvasDefinition the definition of this canvas\r\n     */\r\n    createCanvasObject(canvasDefinition, storageId) {\r\n        storageId = storageId !== undefined && this._uuidGenerator.validate(storageId) ? storageId : this._uuidGenerator.create();\r\n        if (canvasDefinition instanceof HTMLCanvasElement) {\r\n            // a canvas was provided\r\n            const canvasElement = canvasDefinition;\r\n            if (!canvasElement.id)\r\n                canvasElement.id = this._uuidGenerator.create();\r\n            this._canvasDictionary[storageId] = new Canvas_1.Canvas(canvasElement.id, canvasDefinition, canvasElement);\r\n            return storageId;\r\n        }\r\n        if (canvasDefinition) {\r\n            const id = canvasDefinition;\r\n            const canvasElement = document.getElementById(id);\r\n            for (let canvasId in this._canvasDictionary)\r\n                if (this._canvasDictionary[canvasId].id === id)\r\n                    return canvasId;\r\n            if (canvasElement instanceof HTMLCanvasElement) {\r\n                // id of a canvas was provided\r\n                this._canvasDictionary[storageId] = new Canvas_1.Canvas(id, canvasDefinition, canvasElement);\r\n                return storageId;\r\n            }\r\n            else if (!canvasElement) {\r\n                // no HTMLElement could be found, create Canvas with the id\r\n                this._canvasDictionary[storageId] = new Canvas_1.Canvas(id, canvasDefinition);\r\n                return storageId;\r\n            }\r\n        }\r\n        this._canvasDictionary[storageId] = new Canvas_1.Canvas(storageId, canvasDefinition);\r\n        return storageId;\r\n    }\r\n    getCanvas(storageId) {\r\n        return this._canvasDictionary[storageId];\r\n    }\r\n}\r\nexports.CanvasEngine = CanvasEngine;\r\n//# sourceMappingURL=CanvasEngine.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Canvas = exports.CanvasEngine = void 0;\r\nconst Canvas_1 = require(\"./implementation/Canvas\");\r\nObject.defineProperty(exports, \"Canvas\", { enumerable: true, get: function () { return Canvas_1.Canvas; } });\r\nconst CanvasEngine_1 = require(\"./implementation/CanvasEngine\");\r\nObject.defineProperty(exports, \"CanvasEngine\", { enumerable: true, get: function () { return CanvasEngine_1.CanvasEngine; } });\r\n//# sourceMappingURL=index.js.map"],"names":[],"sourceRoot":""}